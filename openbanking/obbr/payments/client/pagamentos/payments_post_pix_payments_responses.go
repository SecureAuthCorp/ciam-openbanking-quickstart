// Code generated by go-swagger; DO NOT EDIT.

package pagamentos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp/pkg/openbankingbr/payments/models"
)

// PaymentsPostPixPaymentsReader is a Reader for the PaymentsPostPixPayments structure.
type PaymentsPostPixPaymentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PaymentsPostPixPaymentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPaymentsPostPixPaymentsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPaymentsPostPixPaymentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPaymentsPostPixPaymentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPaymentsPostPixPaymentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPaymentsPostPixPaymentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPaymentsPostPixPaymentsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewPaymentsPostPixPaymentsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPaymentsPostPixPaymentsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPaymentsPostPixPaymentsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPaymentsPostPixPaymentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPaymentsPostPixPaymentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPaymentsPostPixPaymentsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPaymentsPostPixPaymentsCreated creates a PaymentsPostPixPaymentsCreated with default headers values
func NewPaymentsPostPixPaymentsCreated() *PaymentsPostPixPaymentsCreated {
	return &PaymentsPostPixPaymentsCreated{}
}

/* PaymentsPostPixPaymentsCreated describes a response with status code 201, with default header values.

Iniciao de pagamento Pix criada com sucesso.
*/
type PaymentsPostPixPaymentsCreated struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilResponsePixPayment
}

func (o *PaymentsPostPixPaymentsCreated) Error() string {
	return fmt.Sprintf("[POST /pix/payments][%d] paymentsPostPixPaymentsCreated  %+v", 201, o.Payload)
}
func (o *PaymentsPostPixPaymentsCreated) GetPayload() *models.OpenbankingBrasilResponsePixPayment {
	return o.Payload
}

func (o *PaymentsPostPixPaymentsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilResponsePixPayment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPostPixPaymentsBadRequest creates a PaymentsPostPixPaymentsBadRequest with default headers values
func NewPaymentsPostPixPaymentsBadRequest() *PaymentsPostPixPaymentsBadRequest {
	return &PaymentsPostPixPaymentsBadRequest{}
}

/* PaymentsPostPixPaymentsBadRequest describes a response with status code 400, with default header values.

A requisio foi malformada, omitindo atributos obrigatrios, seja no payload ou atravs de atributos na URL.
*/
type PaymentsPostPixPaymentsBadRequest struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilResponseError
}

func (o *PaymentsPostPixPaymentsBadRequest) Error() string {
	return fmt.Sprintf("[POST /pix/payments][%d] paymentsPostPixPaymentsBadRequest  %+v", 400, o.Payload)
}
func (o *PaymentsPostPixPaymentsBadRequest) GetPayload() *models.OpenbankingBrasilResponseError {
	return o.Payload
}

func (o *PaymentsPostPixPaymentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPostPixPaymentsUnauthorized creates a PaymentsPostPixPaymentsUnauthorized with default headers values
func NewPaymentsPostPixPaymentsUnauthorized() *PaymentsPostPixPaymentsUnauthorized {
	return &PaymentsPostPixPaymentsUnauthorized{}
}

/* PaymentsPostPixPaymentsUnauthorized describes a response with status code 401, with default header values.

Cabealho de autenticao ausente/invlido ou token invlido
*/
type PaymentsPostPixPaymentsUnauthorized struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilResponseError
}

func (o *PaymentsPostPixPaymentsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /pix/payments][%d] paymentsPostPixPaymentsUnauthorized  %+v", 401, o.Payload)
}
func (o *PaymentsPostPixPaymentsUnauthorized) GetPayload() *models.OpenbankingBrasilResponseError {
	return o.Payload
}

func (o *PaymentsPostPixPaymentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPostPixPaymentsForbidden creates a PaymentsPostPixPaymentsForbidden with default headers values
func NewPaymentsPostPixPaymentsForbidden() *PaymentsPostPixPaymentsForbidden {
	return &PaymentsPostPixPaymentsForbidden{}
}

/* PaymentsPostPixPaymentsForbidden describes a response with status code 403, with default header values.

O token tem escopo incorreto ou uma poltica de segurana foi violada
*/
type PaymentsPostPixPaymentsForbidden struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilResponseError
}

func (o *PaymentsPostPixPaymentsForbidden) Error() string {
	return fmt.Sprintf("[POST /pix/payments][%d] paymentsPostPixPaymentsForbidden  %+v", 403, o.Payload)
}
func (o *PaymentsPostPixPaymentsForbidden) GetPayload() *models.OpenbankingBrasilResponseError {
	return o.Payload
}

func (o *PaymentsPostPixPaymentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPostPixPaymentsNotFound creates a PaymentsPostPixPaymentsNotFound with default headers values
func NewPaymentsPostPixPaymentsNotFound() *PaymentsPostPixPaymentsNotFound {
	return &PaymentsPostPixPaymentsNotFound{}
}

/* PaymentsPostPixPaymentsNotFound describes a response with status code 404, with default header values.

O recurso solicitado no existe ou no foi implementado
*/
type PaymentsPostPixPaymentsNotFound struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilResponseError
}

func (o *PaymentsPostPixPaymentsNotFound) Error() string {
	return fmt.Sprintf("[POST /pix/payments][%d] paymentsPostPixPaymentsNotFound  %+v", 404, o.Payload)
}
func (o *PaymentsPostPixPaymentsNotFound) GetPayload() *models.OpenbankingBrasilResponseError {
	return o.Payload
}

func (o *PaymentsPostPixPaymentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPostPixPaymentsMethodNotAllowed creates a PaymentsPostPixPaymentsMethodNotAllowed with default headers values
func NewPaymentsPostPixPaymentsMethodNotAllowed() *PaymentsPostPixPaymentsMethodNotAllowed {
	return &PaymentsPostPixPaymentsMethodNotAllowed{}
}

/* PaymentsPostPixPaymentsMethodNotAllowed describes a response with status code 405, with default header values.

O consumidor tentou acessar o recurso com um mtodo no suportado
*/
type PaymentsPostPixPaymentsMethodNotAllowed struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilResponseError
}

func (o *PaymentsPostPixPaymentsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /pix/payments][%d] paymentsPostPixPaymentsMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *PaymentsPostPixPaymentsMethodNotAllowed) GetPayload() *models.OpenbankingBrasilResponseError {
	return o.Payload
}

func (o *PaymentsPostPixPaymentsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPostPixPaymentsNotAcceptable creates a PaymentsPostPixPaymentsNotAcceptable with default headers values
func NewPaymentsPostPixPaymentsNotAcceptable() *PaymentsPostPixPaymentsNotAcceptable {
	return &PaymentsPostPixPaymentsNotAcceptable{}
}

/* PaymentsPostPixPaymentsNotAcceptable describes a response with status code 406, with default header values.

A solicitao continha um cabealho Accept diferente dos tipos de mdia permitidos ou um conjunto de caracteres diferente de UTF-8
*/
type PaymentsPostPixPaymentsNotAcceptable struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilResponseError
}

func (o *PaymentsPostPixPaymentsNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /pix/payments][%d] paymentsPostPixPaymentsNotAcceptable  %+v", 406, o.Payload)
}
func (o *PaymentsPostPixPaymentsNotAcceptable) GetPayload() *models.OpenbankingBrasilResponseError {
	return o.Payload
}

func (o *PaymentsPostPixPaymentsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPostPixPaymentsUnsupportedMediaType creates a PaymentsPostPixPaymentsUnsupportedMediaType with default headers values
func NewPaymentsPostPixPaymentsUnsupportedMediaType() *PaymentsPostPixPaymentsUnsupportedMediaType {
	return &PaymentsPostPixPaymentsUnsupportedMediaType{}
}

/* PaymentsPostPixPaymentsUnsupportedMediaType describes a response with status code 415, with default header values.

O formato do payload no  um formato suportado.
*/
type PaymentsPostPixPaymentsUnsupportedMediaType struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilResponseError
}

func (o *PaymentsPostPixPaymentsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /pix/payments][%d] paymentsPostPixPaymentsUnsupportedMediaType  %+v", 415, o.Payload)
}
func (o *PaymentsPostPixPaymentsUnsupportedMediaType) GetPayload() *models.OpenbankingBrasilResponseError {
	return o.Payload
}

func (o *PaymentsPostPixPaymentsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPostPixPaymentsUnprocessableEntity creates a PaymentsPostPixPaymentsUnprocessableEntity with default headers values
func NewPaymentsPostPixPaymentsUnprocessableEntity() *PaymentsPostPixPaymentsUnprocessableEntity {
	return &PaymentsPostPixPaymentsUnprocessableEntity{}
}

/* PaymentsPostPixPaymentsUnprocessableEntity describes a response with status code 422, with default header values.

A solicitao foi bem formada, mas no pde ser processada devido  lgica de negcios especfica da solicitao.
*/
type PaymentsPostPixPaymentsUnprocessableEntity struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilUnprocessableEntityPixPayments1
}

func (o *PaymentsPostPixPaymentsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /pix/payments][%d] paymentsPostPixPaymentsUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *PaymentsPostPixPaymentsUnprocessableEntity) GetPayload() *models.OpenbankingBrasilUnprocessableEntityPixPayments1 {
	return o.Payload
}

func (o *PaymentsPostPixPaymentsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilUnprocessableEntityPixPayments1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPostPixPaymentsTooManyRequests creates a PaymentsPostPixPaymentsTooManyRequests with default headers values
func NewPaymentsPostPixPaymentsTooManyRequests() *PaymentsPostPixPaymentsTooManyRequests {
	return &PaymentsPostPixPaymentsTooManyRequests{}
}

/* PaymentsPostPixPaymentsTooManyRequests describes a response with status code 429, with default header values.

A operao foi recusada, pois muitas solicitaes foram feitas dentro de um determinado perodo ou o limite global de requisies concorrentes foi atingido
*/
type PaymentsPostPixPaymentsTooManyRequests struct {

	/* Cabealho que indica o tempo (em segundos) que o cliente dever aguardar para realizar uma nova tentativa de chamada. Este cabealho dever estar presente quando o cdigo HTTP de retorno for 429 Too many requests.

	 */
	RetryAfter string

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilResponseError
}

func (o *PaymentsPostPixPaymentsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /pix/payments][%d] paymentsPostPixPaymentsTooManyRequests  %+v", 429, o.Payload)
}
func (o *PaymentsPostPixPaymentsTooManyRequests) GetPayload() *models.OpenbankingBrasilResponseError {
	return o.Payload
}

func (o *PaymentsPostPixPaymentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Retry-After
	hdrRetryAfter := response.GetHeader("Retry-After")

	if hdrRetryAfter != "" {
		o.RetryAfter = hdrRetryAfter
	}

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPostPixPaymentsInternalServerError creates a PaymentsPostPixPaymentsInternalServerError with default headers values
func NewPaymentsPostPixPaymentsInternalServerError() *PaymentsPostPixPaymentsInternalServerError {
	return &PaymentsPostPixPaymentsInternalServerError{}
}

/* PaymentsPostPixPaymentsInternalServerError describes a response with status code 500, with default header values.

Ocorreu um erro no gateway da API ou no microsservio
*/
type PaymentsPostPixPaymentsInternalServerError struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilResponseError
}

func (o *PaymentsPostPixPaymentsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /pix/payments][%d] paymentsPostPixPaymentsInternalServerError  %+v", 500, o.Payload)
}
func (o *PaymentsPostPixPaymentsInternalServerError) GetPayload() *models.OpenbankingBrasilResponseError {
	return o.Payload
}

func (o *PaymentsPostPixPaymentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPostPixPaymentsDefault creates a PaymentsPostPixPaymentsDefault with default headers values
func NewPaymentsPostPixPaymentsDefault(code int) *PaymentsPostPixPaymentsDefault {
	return &PaymentsPostPixPaymentsDefault{
		_statusCode: code,
	}
}

/* PaymentsPostPixPaymentsDefault describes a response with status code -1, with default header values.

Erro inesperado.
*/
type PaymentsPostPixPaymentsDefault struct {
	_statusCode int

	Payload *models.OpenbankingBrasilResponseError
}

// Code gets the status code for the payments post pix payments default response
func (o *PaymentsPostPixPaymentsDefault) Code() int {
	return o._statusCode
}

func (o *PaymentsPostPixPaymentsDefault) Error() string {
	return fmt.Sprintf("[POST /pix/payments][%d] paymentsPostPixPayments default  %+v", o._statusCode, o.Payload)
}
func (o *PaymentsPostPixPaymentsDefault) GetPayload() *models.OpenbankingBrasilResponseError {
	return o.Payload
}

func (o *PaymentsPostPixPaymentsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OpenbankingBrasilResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
