// Code generated by go-swagger; DO NOT EDIT.

package pagamentos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/openbanking-quickstart/openbanking/obbr/payments/models"
)

// PaymentsGetPixPaymentsPaymentIDReader is a Reader for the PaymentsGetPixPaymentsPaymentID structure.
type PaymentsGetPixPaymentsPaymentIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PaymentsGetPixPaymentsPaymentIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPaymentsGetPixPaymentsPaymentIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPaymentsGetPixPaymentsPaymentIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPaymentsGetPixPaymentsPaymentIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPaymentsGetPixPaymentsPaymentIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPaymentsGetPixPaymentsPaymentIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPaymentsGetPixPaymentsPaymentIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewPaymentsGetPixPaymentsPaymentIDNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPaymentsGetPixPaymentsPaymentIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPaymentsGetPixPaymentsPaymentIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPaymentsGetPixPaymentsPaymentIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPaymentsGetPixPaymentsPaymentIDOK creates a PaymentsGetPixPaymentsPaymentIDOK with default headers values
func NewPaymentsGetPixPaymentsPaymentIDOK() *PaymentsGetPixPaymentsPaymentIDOK {
	return &PaymentsGetPixPaymentsPaymentIDOK{}
}

/* PaymentsGetPixPaymentsPaymentIDOK describes a response with status code 200, with default header values.

Dados de iniciao de pagamento Pix obtidos com sucesso.
*/
type PaymentsGetPixPaymentsPaymentIDOK struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload interface{}
}

func (o *PaymentsGetPixPaymentsPaymentIDOK) Error() string {
	return fmt.Sprintf("[GET /pix/payments/{paymentId}][%d] paymentsGetPixPaymentsPaymentIdOK  %+v", 200, o.Payload)
}
func (o *PaymentsGetPixPaymentsPaymentIDOK) GetPayload() interface{} {
	return o.Payload
}

func (o *PaymentsGetPixPaymentsPaymentIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsGetPixPaymentsPaymentIDBadRequest creates a PaymentsGetPixPaymentsPaymentIDBadRequest with default headers values
func NewPaymentsGetPixPaymentsPaymentIDBadRequest() *PaymentsGetPixPaymentsPaymentIDBadRequest {
	return &PaymentsGetPixPaymentsPaymentIDBadRequest{}
}

/* PaymentsGetPixPaymentsPaymentIDBadRequest describes a response with status code 400, with default header values.

A requisio foi malformada, omitindo atributos obrigatrios, seja no payload ou atravs de atributos na URL.
*/
type PaymentsGetPixPaymentsPaymentIDBadRequest struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilPaymentResponseError
}

func (o *PaymentsGetPixPaymentsPaymentIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /pix/payments/{paymentId}][%d] paymentsGetPixPaymentsPaymentIdBadRequest  %+v", 400, o.Payload)
}
func (o *PaymentsGetPixPaymentsPaymentIDBadRequest) GetPayload() *models.OpenbankingBrasilPaymentResponseError {
	return o.Payload
}

func (o *PaymentsGetPixPaymentsPaymentIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilPaymentResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsGetPixPaymentsPaymentIDUnauthorized creates a PaymentsGetPixPaymentsPaymentIDUnauthorized with default headers values
func NewPaymentsGetPixPaymentsPaymentIDUnauthorized() *PaymentsGetPixPaymentsPaymentIDUnauthorized {
	return &PaymentsGetPixPaymentsPaymentIDUnauthorized{}
}

/* PaymentsGetPixPaymentsPaymentIDUnauthorized describes a response with status code 401, with default header values.

Cabealho de autenticao ausente/invlido ou token invlido
*/
type PaymentsGetPixPaymentsPaymentIDUnauthorized struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilPaymentResponseError
}

func (o *PaymentsGetPixPaymentsPaymentIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /pix/payments/{paymentId}][%d] paymentsGetPixPaymentsPaymentIdUnauthorized  %+v", 401, o.Payload)
}
func (o *PaymentsGetPixPaymentsPaymentIDUnauthorized) GetPayload() *models.OpenbankingBrasilPaymentResponseError {
	return o.Payload
}

func (o *PaymentsGetPixPaymentsPaymentIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilPaymentResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsGetPixPaymentsPaymentIDForbidden creates a PaymentsGetPixPaymentsPaymentIDForbidden with default headers values
func NewPaymentsGetPixPaymentsPaymentIDForbidden() *PaymentsGetPixPaymentsPaymentIDForbidden {
	return &PaymentsGetPixPaymentsPaymentIDForbidden{}
}

/* PaymentsGetPixPaymentsPaymentIDForbidden describes a response with status code 403, with default header values.

O token tem escopo incorreto ou uma poltica de segurana foi violada
*/
type PaymentsGetPixPaymentsPaymentIDForbidden struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilPaymentResponseError
}

func (o *PaymentsGetPixPaymentsPaymentIDForbidden) Error() string {
	return fmt.Sprintf("[GET /pix/payments/{paymentId}][%d] paymentsGetPixPaymentsPaymentIdForbidden  %+v", 403, o.Payload)
}
func (o *PaymentsGetPixPaymentsPaymentIDForbidden) GetPayload() *models.OpenbankingBrasilPaymentResponseError {
	return o.Payload
}

func (o *PaymentsGetPixPaymentsPaymentIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilPaymentResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsGetPixPaymentsPaymentIDNotFound creates a PaymentsGetPixPaymentsPaymentIDNotFound with default headers values
func NewPaymentsGetPixPaymentsPaymentIDNotFound() *PaymentsGetPixPaymentsPaymentIDNotFound {
	return &PaymentsGetPixPaymentsPaymentIDNotFound{}
}

/* PaymentsGetPixPaymentsPaymentIDNotFound describes a response with status code 404, with default header values.

O recurso solicitado no existe ou no foi implementado
*/
type PaymentsGetPixPaymentsPaymentIDNotFound struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilPaymentResponseError
}

func (o *PaymentsGetPixPaymentsPaymentIDNotFound) Error() string {
	return fmt.Sprintf("[GET /pix/payments/{paymentId}][%d] paymentsGetPixPaymentsPaymentIdNotFound  %+v", 404, o.Payload)
}
func (o *PaymentsGetPixPaymentsPaymentIDNotFound) GetPayload() *models.OpenbankingBrasilPaymentResponseError {
	return o.Payload
}

func (o *PaymentsGetPixPaymentsPaymentIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilPaymentResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsGetPixPaymentsPaymentIDMethodNotAllowed creates a PaymentsGetPixPaymentsPaymentIDMethodNotAllowed with default headers values
func NewPaymentsGetPixPaymentsPaymentIDMethodNotAllowed() *PaymentsGetPixPaymentsPaymentIDMethodNotAllowed {
	return &PaymentsGetPixPaymentsPaymentIDMethodNotAllowed{}
}

/* PaymentsGetPixPaymentsPaymentIDMethodNotAllowed describes a response with status code 405, with default header values.

O consumidor tentou acessar o recurso com um mtodo no suportado
*/
type PaymentsGetPixPaymentsPaymentIDMethodNotAllowed struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilPaymentResponseError
}

func (o *PaymentsGetPixPaymentsPaymentIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /pix/payments/{paymentId}][%d] paymentsGetPixPaymentsPaymentIdMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *PaymentsGetPixPaymentsPaymentIDMethodNotAllowed) GetPayload() *models.OpenbankingBrasilPaymentResponseError {
	return o.Payload
}

func (o *PaymentsGetPixPaymentsPaymentIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilPaymentResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsGetPixPaymentsPaymentIDNotAcceptable creates a PaymentsGetPixPaymentsPaymentIDNotAcceptable with default headers values
func NewPaymentsGetPixPaymentsPaymentIDNotAcceptable() *PaymentsGetPixPaymentsPaymentIDNotAcceptable {
	return &PaymentsGetPixPaymentsPaymentIDNotAcceptable{}
}

/* PaymentsGetPixPaymentsPaymentIDNotAcceptable describes a response with status code 406, with default header values.

A solicitao continha um cabealho Accept diferente dos tipos de mdia permitidos ou um conjunto de caracteres diferente de UTF-8
*/
type PaymentsGetPixPaymentsPaymentIDNotAcceptable struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilPaymentResponseError
}

func (o *PaymentsGetPixPaymentsPaymentIDNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /pix/payments/{paymentId}][%d] paymentsGetPixPaymentsPaymentIdNotAcceptable  %+v", 406, o.Payload)
}
func (o *PaymentsGetPixPaymentsPaymentIDNotAcceptable) GetPayload() *models.OpenbankingBrasilPaymentResponseError {
	return o.Payload
}

func (o *PaymentsGetPixPaymentsPaymentIDNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilPaymentResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsGetPixPaymentsPaymentIDTooManyRequests creates a PaymentsGetPixPaymentsPaymentIDTooManyRequests with default headers values
func NewPaymentsGetPixPaymentsPaymentIDTooManyRequests() *PaymentsGetPixPaymentsPaymentIDTooManyRequests {
	return &PaymentsGetPixPaymentsPaymentIDTooManyRequests{}
}

/* PaymentsGetPixPaymentsPaymentIDTooManyRequests describes a response with status code 429, with default header values.

A operao foi recusada, pois muitas solicitaes foram feitas dentro de um determinado perodo ou o limite global de requisies concorrentes foi atingido
*/
type PaymentsGetPixPaymentsPaymentIDTooManyRequests struct {

	/* Cabealho que indica o tempo (em segundos) que o cliente dever aguardar para realizar uma nova tentativa de chamada. Este cabealho dever estar presente quando o cdigo HTTP de retorno for 429 Too many requests.

	 */
	RetryAfter string

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilPaymentResponseError
}

func (o *PaymentsGetPixPaymentsPaymentIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /pix/payments/{paymentId}][%d] paymentsGetPixPaymentsPaymentIdTooManyRequests  %+v", 429, o.Payload)
}
func (o *PaymentsGetPixPaymentsPaymentIDTooManyRequests) GetPayload() *models.OpenbankingBrasilPaymentResponseError {
	return o.Payload
}

func (o *PaymentsGetPixPaymentsPaymentIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Retry-After
	hdrRetryAfter := response.GetHeader("Retry-After")

	if hdrRetryAfter != "" {
		o.RetryAfter = hdrRetryAfter
	}

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilPaymentResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsGetPixPaymentsPaymentIDInternalServerError creates a PaymentsGetPixPaymentsPaymentIDInternalServerError with default headers values
func NewPaymentsGetPixPaymentsPaymentIDInternalServerError() *PaymentsGetPixPaymentsPaymentIDInternalServerError {
	return &PaymentsGetPixPaymentsPaymentIDInternalServerError{}
}

/* PaymentsGetPixPaymentsPaymentIDInternalServerError describes a response with status code 500, with default header values.

Ocorreu um erro no gateway da API ou no microsservio
*/
type PaymentsGetPixPaymentsPaymentIDInternalServerError struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilPaymentResponseError
}

func (o *PaymentsGetPixPaymentsPaymentIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /pix/payments/{paymentId}][%d] paymentsGetPixPaymentsPaymentIdInternalServerError  %+v", 500, o.Payload)
}
func (o *PaymentsGetPixPaymentsPaymentIDInternalServerError) GetPayload() *models.OpenbankingBrasilPaymentResponseError {
	return o.Payload
}

func (o *PaymentsGetPixPaymentsPaymentIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilPaymentResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsGetPixPaymentsPaymentIDDefault creates a PaymentsGetPixPaymentsPaymentIDDefault with default headers values
func NewPaymentsGetPixPaymentsPaymentIDDefault(code int) *PaymentsGetPixPaymentsPaymentIDDefault {
	return &PaymentsGetPixPaymentsPaymentIDDefault{
		_statusCode: code,
	}
}

/* PaymentsGetPixPaymentsPaymentIDDefault describes a response with status code -1, with default header values.

Erro inesperado.
*/
type PaymentsGetPixPaymentsPaymentIDDefault struct {
	_statusCode int

	Payload *models.OpenbankingBrasilPaymentResponseError
}

// Code gets the status code for the payments get pix payments payment Id default response
func (o *PaymentsGetPixPaymentsPaymentIDDefault) Code() int {
	return o._statusCode
}

func (o *PaymentsGetPixPaymentsPaymentIDDefault) Error() string {
	return fmt.Sprintf("[GET /pix/payments/{paymentId}][%d] paymentsGetPixPaymentsPaymentId default  %+v", o._statusCode, o.Payload)
}
func (o *PaymentsGetPixPaymentsPaymentIDDefault) GetPayload() *models.OpenbankingBrasilPaymentResponseError {
	return o.Payload
}

func (o *PaymentsGetPixPaymentsPaymentIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OpenbankingBrasilPaymentResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
