// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OpenbankingBrasilEnumLocalInstrument EnumLocalInstrument
//
// Especifica a forma de iniciao do pagamento:
// - MANU - Insero manual de dados da conta transacional
// - DICT - Insero manual de chave Pix
// - QRDN - QR code dinmico (*Domnio reservado para uso futuro*)
// - QRES - QR code esttico (*Domnio reservado para uso futuro*)
//
// swagger:model OpenbankingBrasilEnumLocalInstrument
type OpenbankingBrasilEnumLocalInstrument string

const (

	// OpenbankingBrasilEnumLocalInstrumentMANU captures enum value "MANU"
	OpenbankingBrasilEnumLocalInstrumentMANU OpenbankingBrasilEnumLocalInstrument = "MANU"

	// OpenbankingBrasilEnumLocalInstrumentDICT captures enum value "DICT"
	OpenbankingBrasilEnumLocalInstrumentDICT OpenbankingBrasilEnumLocalInstrument = "DICT"

	// OpenbankingBrasilEnumLocalInstrumentQRDN captures enum value "QRDN"
	OpenbankingBrasilEnumLocalInstrumentQRDN OpenbankingBrasilEnumLocalInstrument = "QRDN"

	// OpenbankingBrasilEnumLocalInstrumentQRES captures enum value "QRES"
	OpenbankingBrasilEnumLocalInstrumentQRES OpenbankingBrasilEnumLocalInstrument = "QRES"
)

// for schema
var openbankingBrasilEnumLocalInstrumentEnum []interface{}

func init() {
	var res []OpenbankingBrasilEnumLocalInstrument
	if err := json.Unmarshal([]byte(`["MANU","DICT","QRDN","QRES"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		openbankingBrasilEnumLocalInstrumentEnum = append(openbankingBrasilEnumLocalInstrumentEnum, v)
	}
}

func (m OpenbankingBrasilEnumLocalInstrument) validateOpenbankingBrasilEnumLocalInstrumentEnum(path, location string, value OpenbankingBrasilEnumLocalInstrument) error {
	if err := validate.EnumCase(path, location, value, openbankingBrasilEnumLocalInstrumentEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this openbanking brasil enum local instrument
func (m OpenbankingBrasilEnumLocalInstrument) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOpenbankingBrasilEnumLocalInstrumentEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this openbanking brasil enum local instrument based on context it is used
func (m OpenbankingBrasilEnumLocalInstrument) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
