// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/openbanking-quickstart/openbanking/obbr/accounts/models"
)

// AccountsGetAccountsAccountIDReader is a Reader for the AccountsGetAccountsAccountID structure.
type AccountsGetAccountsAccountIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccountsGetAccountsAccountIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAccountsGetAccountsAccountIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAccountsGetAccountsAccountIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAccountsGetAccountsAccountIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAccountsGetAccountsAccountIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAccountsGetAccountsAccountIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewAccountsGetAccountsAccountIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewAccountsGetAccountsAccountIDNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAccountsGetAccountsAccountIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAccountsGetAccountsAccountIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAccountsGetAccountsAccountIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAccountsGetAccountsAccountIDOK creates a AccountsGetAccountsAccountIDOK with default headers values
func NewAccountsGetAccountsAccountIDOK() *AccountsGetAccountsAccountIDOK {
	return &AccountsGetAccountsAccountIDOK{}
}

/* AccountsGetAccountsAccountIDOK describes a response with status code 200, with default header values.

Dados de identificação da conta identificada por accountId obtidos com sucesso.
*/
type AccountsGetAccountsAccountIDOK struct {
	XFapiInteractionID string

	Payload *models.ResponseAccountIdentification
}

func (o *AccountsGetAccountsAccountIDOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}][%d] accountsGetAccountsAccountIdOK  %+v", 200, o.Payload)
}
func (o *AccountsGetAccountsAccountIDOK) GetPayload() *models.ResponseAccountIdentification {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.ResponseAccountIdentification)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDBadRequest creates a AccountsGetAccountsAccountIDBadRequest with default headers values
func NewAccountsGetAccountsAccountIDBadRequest() *AccountsGetAccountsAccountIDBadRequest {
	return &AccountsGetAccountsAccountIDBadRequest{}
}

/* AccountsGetAccountsAccountIDBadRequest describes a response with status code 400, with default header values.

A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.
*/
type AccountsGetAccountsAccountIDBadRequest struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}][%d] accountsGetAccountsAccountIdBadRequest  %+v", 400, o.Payload)
}
func (o *AccountsGetAccountsAccountIDBadRequest) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDUnauthorized creates a AccountsGetAccountsAccountIDUnauthorized with default headers values
func NewAccountsGetAccountsAccountIDUnauthorized() *AccountsGetAccountsAccountIDUnauthorized {
	return &AccountsGetAccountsAccountIDUnauthorized{}
}

/* AccountsGetAccountsAccountIDUnauthorized describes a response with status code 401, with default header values.

Cabeçalho de autenticação ausente/inválido ou token inválido
*/
type AccountsGetAccountsAccountIDUnauthorized struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}][%d] accountsGetAccountsAccountIdUnauthorized  %+v", 401, o.Payload)
}
func (o *AccountsGetAccountsAccountIDUnauthorized) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDForbidden creates a AccountsGetAccountsAccountIDForbidden with default headers values
func NewAccountsGetAccountsAccountIDForbidden() *AccountsGetAccountsAccountIDForbidden {
	return &AccountsGetAccountsAccountIDForbidden{}
}

/* AccountsGetAccountsAccountIDForbidden describes a response with status code 403, with default header values.

O token tem escopo incorreto ou uma política de segurança foi violada
*/
type AccountsGetAccountsAccountIDForbidden struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}][%d] accountsGetAccountsAccountIdForbidden  %+v", 403, o.Payload)
}
func (o *AccountsGetAccountsAccountIDForbidden) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDNotFound creates a AccountsGetAccountsAccountIDNotFound with default headers values
func NewAccountsGetAccountsAccountIDNotFound() *AccountsGetAccountsAccountIDNotFound {
	return &AccountsGetAccountsAccountIDNotFound{}
}

/* AccountsGetAccountsAccountIDNotFound describes a response with status code 404, with default header values.

O recurso solicitado não existe ou não foi implementado
*/
type AccountsGetAccountsAccountIDNotFound struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}][%d] accountsGetAccountsAccountIdNotFound  %+v", 404, o.Payload)
}
func (o *AccountsGetAccountsAccountIDNotFound) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDMethodNotAllowed creates a AccountsGetAccountsAccountIDMethodNotAllowed with default headers values
func NewAccountsGetAccountsAccountIDMethodNotAllowed() *AccountsGetAccountsAccountIDMethodNotAllowed {
	return &AccountsGetAccountsAccountIDMethodNotAllowed{}
}

/* AccountsGetAccountsAccountIDMethodNotAllowed describes a response with status code 405, with default header values.

O consumidor tentou acessar o recurso com um método não suportado
*/
type AccountsGetAccountsAccountIDMethodNotAllowed struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}][%d] accountsGetAccountsAccountIdMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *AccountsGetAccountsAccountIDMethodNotAllowed) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDNotAcceptable creates a AccountsGetAccountsAccountIDNotAcceptable with default headers values
func NewAccountsGetAccountsAccountIDNotAcceptable() *AccountsGetAccountsAccountIDNotAcceptable {
	return &AccountsGetAccountsAccountIDNotAcceptable{}
}

/* AccountsGetAccountsAccountIDNotAcceptable describes a response with status code 406, with default header values.

A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8
*/
type AccountsGetAccountsAccountIDNotAcceptable struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}][%d] accountsGetAccountsAccountIdNotAcceptable  %+v", 406, o.Payload)
}
func (o *AccountsGetAccountsAccountIDNotAcceptable) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDTooManyRequests creates a AccountsGetAccountsAccountIDTooManyRequests with default headers values
func NewAccountsGetAccountsAccountIDTooManyRequests() *AccountsGetAccountsAccountIDTooManyRequests {
	return &AccountsGetAccountsAccountIDTooManyRequests{}
}

/* AccountsGetAccountsAccountIDTooManyRequests describes a response with status code 429, with default header values.

A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido
*/
type AccountsGetAccountsAccountIDTooManyRequests struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}][%d] accountsGetAccountsAccountIdTooManyRequests  %+v", 429, o.Payload)
}
func (o *AccountsGetAccountsAccountIDTooManyRequests) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDInternalServerError creates a AccountsGetAccountsAccountIDInternalServerError with default headers values
func NewAccountsGetAccountsAccountIDInternalServerError() *AccountsGetAccountsAccountIDInternalServerError {
	return &AccountsGetAccountsAccountIDInternalServerError{}
}

/* AccountsGetAccountsAccountIDInternalServerError describes a response with status code 500, with default header values.

Ocorreu um erro no gateway da API ou no microsserviço
*/
type AccountsGetAccountsAccountIDInternalServerError struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}][%d] accountsGetAccountsAccountIdInternalServerError  %+v", 500, o.Payload)
}
func (o *AccountsGetAccountsAccountIDInternalServerError) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDDefault creates a AccountsGetAccountsAccountIDDefault with default headers values
func NewAccountsGetAccountsAccountIDDefault(code int) *AccountsGetAccountsAccountIDDefault {
	return &AccountsGetAccountsAccountIDDefault{
		_statusCode: code,
	}
}

/* AccountsGetAccountsAccountIDDefault describes a response with status code -1, with default header values.

Dados de identificação da conta identificada por accountId obtidos com sucesso.
*/
type AccountsGetAccountsAccountIDDefault struct {
	_statusCode        int
	XFapiInteractionID string

	Payload *models.ResponseAccountIdentification
}

// Code gets the status code for the accounts get accounts account Id default response
func (o *AccountsGetAccountsAccountIDDefault) Code() int {
	return o._statusCode
}

func (o *AccountsGetAccountsAccountIDDefault) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}][%d] accountsGetAccountsAccountId default  %+v", o._statusCode, o.Payload)
}
func (o *AccountsGetAccountsAccountIDDefault) GetPayload() *models.ResponseAccountIdentification {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.ResponseAccountIdentification)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
