// Code generated by go-swagger; DO NOT EDIT.

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/openbanking-quickstart/openbanking/fdx/models"
)

// SearchForPaymentsReader is a Reader for the SearchForPayments structure.
type SearchForPaymentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchForPaymentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchForPaymentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewSearchForPaymentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchForPaymentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewSearchForPaymentsNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewSearchForPaymentsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchForPaymentsOK creates a SearchForPaymentsOK with default headers values
func NewSearchForPaymentsOK() *SearchForPaymentsOK {
	return &SearchForPaymentsOK{}
}

/* SearchForPaymentsOK describes a response with status code 200, with default header values.

Ok
*/
type SearchForPaymentsOK struct {
	Payload *models.Paymentsentity
}

func (o *SearchForPaymentsOK) Error() string {
	return fmt.Sprintf("[GET /payments][%d] searchForPaymentsOK  %+v", 200, o.Payload)
}
func (o *SearchForPaymentsOK) GetPayload() *models.Paymentsentity {
	return o.Payload
}

func (o *SearchForPaymentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Paymentsentity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForPaymentsNotFound creates a SearchForPaymentsNotFound with default headers values
func NewSearchForPaymentsNotFound() *SearchForPaymentsNotFound {
	return &SearchForPaymentsNotFound{}
}

/* SearchForPaymentsNotFound describes a response with status code 404, with default header values.

Data not found for request parameters
*/
type SearchForPaymentsNotFound struct {
	Payload *models.Error
}

func (o *SearchForPaymentsNotFound) Error() string {
	return fmt.Sprintf("[GET /payments][%d] searchForPaymentsNotFound  %+v", 404, o.Payload)
}
func (o *SearchForPaymentsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForPaymentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForPaymentsInternalServerError creates a SearchForPaymentsInternalServerError with default headers values
func NewSearchForPaymentsInternalServerError() *SearchForPaymentsInternalServerError {
	return &SearchForPaymentsInternalServerError{}
}

/* SearchForPaymentsInternalServerError describes a response with status code 500, with default header values.

Catch all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error
*/
type SearchForPaymentsInternalServerError struct {
	Payload *models.Error
}

func (o *SearchForPaymentsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /payments][%d] searchForPaymentsInternalServerError  %+v", 500, o.Payload)
}
func (o *SearchForPaymentsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForPaymentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForPaymentsNotImplemented creates a SearchForPaymentsNotImplemented with default headers values
func NewSearchForPaymentsNotImplemented() *SearchForPaymentsNotImplemented {
	return &SearchForPaymentsNotImplemented{}
}

/* SearchForPaymentsNotImplemented describes a response with status code 501, with default header values.

Error when FdxVersion in Header is not one of those implemented at backend
*/
type SearchForPaymentsNotImplemented struct {
	Payload *models.Error
}

func (o *SearchForPaymentsNotImplemented) Error() string {
	return fmt.Sprintf("[GET /payments][%d] searchForPaymentsNotImplemented  %+v", 501, o.Payload)
}
func (o *SearchForPaymentsNotImplemented) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForPaymentsNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForPaymentsServiceUnavailable creates a SearchForPaymentsServiceUnavailable with default headers values
func NewSearchForPaymentsServiceUnavailable() *SearchForPaymentsServiceUnavailable {
	return &SearchForPaymentsServiceUnavailable{}
}

/* SearchForPaymentsServiceUnavailable describes a response with status code 503, with default header values.

System is down for maintenance
*/
type SearchForPaymentsServiceUnavailable struct {
	Payload *models.Error
}

func (o *SearchForPaymentsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /payments][%d] searchForPaymentsServiceUnavailable  %+v", 503, o.Payload)
}
func (o *SearchForPaymentsServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForPaymentsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
