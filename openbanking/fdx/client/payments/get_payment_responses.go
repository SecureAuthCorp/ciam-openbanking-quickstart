// Code generated by go-swagger; DO NOT EDIT.

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/openbanking-quickstart/openbanking/fdx/models"
)

// GetPaymentReader is a Reader for the GetPayment structure.
type GetPaymentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPaymentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPaymentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetPaymentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPaymentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewGetPaymentNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetPaymentServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPaymentOK creates a GetPaymentOK with default headers values
func NewGetPaymentOK() *GetPaymentOK {
	return &GetPaymentOK{}
}

/* GetPaymentOK describes a response with status code 200, with default header values.

Ok
*/
type GetPaymentOK struct {
	Payload *models.Paymententity
}

func (o *GetPaymentOK) Error() string {
	return fmt.Sprintf("[GET /payments/{paymentId}][%d] getPaymentOK  %+v", 200, o.Payload)
}
func (o *GetPaymentOK) GetPayload() *models.Paymententity {
	return o.Payload
}

func (o *GetPaymentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Paymententity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPaymentNotFound creates a GetPaymentNotFound with default headers values
func NewGetPaymentNotFound() *GetPaymentNotFound {
	return &GetPaymentNotFound{}
}

/* GetPaymentNotFound describes a response with status code 404, with default header values.

A payment with provided ID was not found
*/
type GetPaymentNotFound struct {
	Payload *models.Error
}

func (o *GetPaymentNotFound) Error() string {
	return fmt.Sprintf("[GET /payments/{paymentId}][%d] getPaymentNotFound  %+v", 404, o.Payload)
}
func (o *GetPaymentNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPaymentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPaymentInternalServerError creates a GetPaymentInternalServerError with default headers values
func NewGetPaymentInternalServerError() *GetPaymentInternalServerError {
	return &GetPaymentInternalServerError{}
}

/* GetPaymentInternalServerError describes a response with status code 500, with default header values.

Catch all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error
*/
type GetPaymentInternalServerError struct {
	Payload *models.Error
}

func (o *GetPaymentInternalServerError) Error() string {
	return fmt.Sprintf("[GET /payments/{paymentId}][%d] getPaymentInternalServerError  %+v", 500, o.Payload)
}
func (o *GetPaymentInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPaymentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPaymentNotImplemented creates a GetPaymentNotImplemented with default headers values
func NewGetPaymentNotImplemented() *GetPaymentNotImplemented {
	return &GetPaymentNotImplemented{}
}

/* GetPaymentNotImplemented describes a response with status code 501, with default header values.

Error when FdxVersion in Header is not one of those implemented at backend
*/
type GetPaymentNotImplemented struct {
	Payload *models.Error
}

func (o *GetPaymentNotImplemented) Error() string {
	return fmt.Sprintf("[GET /payments/{paymentId}][%d] getPaymentNotImplemented  %+v", 501, o.Payload)
}
func (o *GetPaymentNotImplemented) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPaymentNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPaymentServiceUnavailable creates a GetPaymentServiceUnavailable with default headers values
func NewGetPaymentServiceUnavailable() *GetPaymentServiceUnavailable {
	return &GetPaymentServiceUnavailable{}
}

/* GetPaymentServiceUnavailable describes a response with status code 503, with default header values.

System is down for maintenance
*/
type GetPaymentServiceUnavailable struct {
	Payload *models.Error
}

func (o *GetPaymentServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /payments/{paymentId}][%d] getPaymentServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetPaymentServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPaymentServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
