// Code generated by go-swagger; DO NOT EDIT.

package account_statements

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/openbanking-quickstart/openbanking/fdx/models"
)

// SearchForAccountStatementsReader is a Reader for the SearchForAccountStatements structure.
type SearchForAccountStatementsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchForAccountStatementsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchForAccountStatementsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchForAccountStatementsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchForAccountStatementsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchForAccountStatementsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewSearchForAccountStatementsNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewSearchForAccountStatementsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchForAccountStatementsOK creates a SearchForAccountStatementsOK with default headers values
func NewSearchForAccountStatementsOK() *SearchForAccountStatementsOK {
	return &SearchForAccountStatementsOK{}
}

/* SearchForAccountStatementsOK describes a response with status code 200, with default header values.

Paginated list of available statements
*/
type SearchForAccountStatementsOK struct {
	Payload *models.Anarrayofstatements
}

func (o *SearchForAccountStatementsOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/statements][%d] searchForAccountStatementsOK  %+v", 200, o.Payload)
}
func (o *SearchForAccountStatementsOK) GetPayload() *models.Anarrayofstatements {
	return o.Payload
}

func (o *SearchForAccountStatementsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Anarrayofstatements)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForAccountStatementsBadRequest creates a SearchForAccountStatementsBadRequest with default headers values
func NewSearchForAccountStatementsBadRequest() *SearchForAccountStatementsBadRequest {
	return &SearchForAccountStatementsBadRequest{}
}

/* SearchForAccountStatementsBadRequest describes a response with status code 400, with default header values.

Start or end date value is not in the ISO 8601 format
*/
type SearchForAccountStatementsBadRequest struct {
	Payload *models.Error
}

func (o *SearchForAccountStatementsBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/statements][%d] searchForAccountStatementsBadRequest  %+v", 400, o.Payload)
}
func (o *SearchForAccountStatementsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForAccountStatementsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForAccountStatementsNotFound creates a SearchForAccountStatementsNotFound with default headers values
func NewSearchForAccountStatementsNotFound() *SearchForAccountStatementsNotFound {
	return &SearchForAccountStatementsNotFound{}
}

/* SearchForAccountStatementsNotFound describes a response with status code 404, with default header values.

Account with id not found
*/
type SearchForAccountStatementsNotFound struct {
	Payload *models.Error
}

func (o *SearchForAccountStatementsNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/statements][%d] searchForAccountStatementsNotFound  %+v", 404, o.Payload)
}
func (o *SearchForAccountStatementsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForAccountStatementsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForAccountStatementsInternalServerError creates a SearchForAccountStatementsInternalServerError with default headers values
func NewSearchForAccountStatementsInternalServerError() *SearchForAccountStatementsInternalServerError {
	return &SearchForAccountStatementsInternalServerError{}
}

/* SearchForAccountStatementsInternalServerError describes a response with status code 500, with default header values.

Catch all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error
*/
type SearchForAccountStatementsInternalServerError struct {
	Payload *models.Error
}

func (o *SearchForAccountStatementsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/statements][%d] searchForAccountStatementsInternalServerError  %+v", 500, o.Payload)
}
func (o *SearchForAccountStatementsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForAccountStatementsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForAccountStatementsNotImplemented creates a SearchForAccountStatementsNotImplemented with default headers values
func NewSearchForAccountStatementsNotImplemented() *SearchForAccountStatementsNotImplemented {
	return &SearchForAccountStatementsNotImplemented{}
}

/* SearchForAccountStatementsNotImplemented describes a response with status code 501, with default header values.

Error when FdxVersion in Header is not one of those implemented at backend
*/
type SearchForAccountStatementsNotImplemented struct {
	Payload *models.Error
}

func (o *SearchForAccountStatementsNotImplemented) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/statements][%d] searchForAccountStatementsNotImplemented  %+v", 501, o.Payload)
}
func (o *SearchForAccountStatementsNotImplemented) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForAccountStatementsNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForAccountStatementsServiceUnavailable creates a SearchForAccountStatementsServiceUnavailable with default headers values
func NewSearchForAccountStatementsServiceUnavailable() *SearchForAccountStatementsServiceUnavailable {
	return &SearchForAccountStatementsServiceUnavailable{}
}

/* SearchForAccountStatementsServiceUnavailable describes a response with status code 503, with default header values.

System is down for maintenance
*/
type SearchForAccountStatementsServiceUnavailable struct {
	Payload *models.Error
}

func (o *SearchForAccountStatementsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/statements][%d] searchForAccountStatementsServiceUnavailable  %+v", 503, o.Payload)
}
func (o *SearchForAccountStatementsServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForAccountStatementsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
