// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// InterestRateType InterestRateType
//
// The type of interest rate
//
// swagger:model InterestRateType
type InterestRateType string

func NewInterestRateType(value InterestRateType) *InterestRateType {
	v := value
	return &v
}

const (

	// InterestRateTypeFIXED captures enum value "FIXED"
	InterestRateTypeFIXED InterestRateType = "FIXED"

	// InterestRateTypeVARIABLE captures enum value "VARIABLE"
	InterestRateTypeVARIABLE InterestRateType = "VARIABLE"
)

// for schema
var interestRateTypeEnum []interface{}

func init() {
	var res []InterestRateType
	if err := json.Unmarshal([]byte(`["FIXED","VARIABLE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		interestRateTypeEnum = append(interestRateTypeEnum, v)
	}
}

func (m InterestRateType) validateInterestRateTypeEnum(path, location string, value InterestRateType) error {
	if err := validate.EnumCase(path, location, value, interestRateTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this interest rate type
func (m InterestRateType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateInterestRateTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this interest rate type based on context it is used
func (m InterestRateType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
