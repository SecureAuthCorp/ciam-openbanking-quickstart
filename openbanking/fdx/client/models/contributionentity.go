// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Contributionentity Contributionentity
//
// Contribution information to an investment account
//
// swagger:model Contributionentity
type Contributionentity struct {

	// Employee after tax contribution amount
	EmployeeAfterTaxAmount float64 `json:"employeeAfterTaxAmount,omitempty"`

	// Employee after tax contribution percentage
	EmployeeAfterTaxPercentage float64 `json:"employeeAfterTaxPercentage,omitempty"`

	// Employee defer pre-tax contribution match amount
	EmployeeDeferPreTaxAmount float64 `json:"employeeDeferPreTaxAmount,omitempty"`

	// Employee defer pre-tax contribution match percentage
	EmployeeDeferPreTaxPercentage float64 `json:"employeeDeferPreTaxPercentage,omitempty"`

	// Employee pre-tax contribution amount
	EmployeePreTaxAmount float64 `json:"employeePreTaxAmount,omitempty"`

	// Employee pre-tax contribution percentage
	EmployeePreTaxPercentage float64 `json:"employeePreTaxPercentage,omitempty"`

	// Employee total year to date contribution
	EmployeeYearToDate float64 `json:"employeeYearToDate,omitempty"`

	// Employer contribution match amount
	EmployerMatchAmount float64 `json:"employerMatchAmount,omitempty"`

	// Employer contribution match percentage
	EmployerMatchPercentage float64 `json:"employerMatchPercentage,omitempty"`

	// Employer total year to date contribution
	EmployerYearToDate float64 `json:"employerYearToDate,omitempty"`

	// Rollover contribution Amount
	RolloverContributionAmount float64 `json:"rolloverContributionAmount,omitempty"`

	// Rollover contribution percentage
	RolloverContributionPercentage float64 `json:"rolloverContributionPercentage,omitempty"`

	// Unique identifier of security
	SecurityID string `json:"securityId,omitempty"`

	// security Id type
	SecurityIDType SecurityIDType1 `json:"securityIdType,omitempty"`
}

// Validate validates this contributionentity
func (m *Contributionentity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSecurityIDType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Contributionentity) validateSecurityIDType(formats strfmt.Registry) error {
	if swag.IsZero(m.SecurityIDType) { // not required
		return nil
	}

	if err := m.SecurityIDType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("securityIdType")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("securityIdType")
		}
		return err
	}

	return nil
}

// ContextValidate validate this contributionentity based on the context it is used
func (m *Contributionentity) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateSecurityIDType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Contributionentity) contextValidateSecurityIDType(ctx context.Context, formats strfmt.Registry) error {

	if err := m.SecurityIDType.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("securityIdType")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("securityIdType")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Contributionentity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Contributionentity) UnmarshalBinary(b []byte) error {
	var res Contributionentity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
