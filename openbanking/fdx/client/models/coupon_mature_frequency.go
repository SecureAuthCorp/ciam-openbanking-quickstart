// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// CouponMatureFrequency CouponMatureFrequency
//
// The frequency of a bond's coupon maturity
//
// swagger:model CouponMatureFrequency
type CouponMatureFrequency string

func NewCouponMatureFrequency(value CouponMatureFrequency) *CouponMatureFrequency {
	v := value
	return &v
}

const (

	// CouponMatureFrequencyANNUAL captures enum value "ANNUAL"
	CouponMatureFrequencyANNUAL CouponMatureFrequency = "ANNUAL"

	// CouponMatureFrequencyMONTHLY captures enum value "MONTHLY"
	CouponMatureFrequencyMONTHLY CouponMatureFrequency = "MONTHLY"

	// CouponMatureFrequencyOTHER captures enum value "OTHER"
	CouponMatureFrequencyOTHER CouponMatureFrequency = "OTHER"

	// CouponMatureFrequencyQUARTERLY captures enum value "QUARTERLY"
	CouponMatureFrequencyQUARTERLY CouponMatureFrequency = "QUARTERLY"

	// CouponMatureFrequencySEMIANNUAL captures enum value "SEMIANNUAL"
	CouponMatureFrequencySEMIANNUAL CouponMatureFrequency = "SEMIANNUAL"
)

// for schema
var couponMatureFrequencyEnum []interface{}

func init() {
	var res []CouponMatureFrequency
	if err := json.Unmarshal([]byte(`["ANNUAL","MONTHLY","OTHER","QUARTERLY","SEMIANNUAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		couponMatureFrequencyEnum = append(couponMatureFrequencyEnum, v)
	}
}

func (m CouponMatureFrequency) validateCouponMatureFrequencyEnum(path, location string, value CouponMatureFrequency) error {
	if err := validate.EnumCase(path, location, value, couponMatureFrequencyEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this coupon mature frequency
func (m CouponMatureFrequency) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCouponMatureFrequencyEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this coupon mature frequency based on context it is used
func (m CouponMatureFrequency) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
