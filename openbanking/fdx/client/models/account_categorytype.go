// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AccountCategorytype AccountCategorytype
//
// The category of account
//
// swagger:model AccountCategorytype
type AccountCategorytype string

func NewAccountCategorytype(value AccountCategorytype) *AccountCategorytype {
	v := value
	return &v
}

const (

	// AccountCategorytypeANNUITYACCOUNT captures enum value "ANNUITY_ACCOUNT"
	AccountCategorytypeANNUITYACCOUNT AccountCategorytype = "ANNUITY_ACCOUNT"

	// AccountCategorytypeDEPOSITACCOUNT captures enum value "DEPOSIT_ACCOUNT"
	AccountCategorytypeDEPOSITACCOUNT AccountCategorytype = "DEPOSIT_ACCOUNT"

	// AccountCategorytypeLOANACCOUNT captures enum value "LOAN_ACCOUNT"
	AccountCategorytypeLOANACCOUNT AccountCategorytype = "LOAN_ACCOUNT"

	// AccountCategorytypeLOCACCOUNT captures enum value "LOC_ACCOUNT"
	AccountCategorytypeLOCACCOUNT AccountCategorytype = "LOC_ACCOUNT"

	// AccountCategorytypeINSURANCEACCOUNT captures enum value "INSURANCE_ACCOUNT"
	AccountCategorytypeINSURANCEACCOUNT AccountCategorytype = "INSURANCE_ACCOUNT"

	// AccountCategorytypeINVESTMENTACCOUNT captures enum value "INVESTMENT_ACCOUNT"
	AccountCategorytypeINVESTMENTACCOUNT AccountCategorytype = "INVESTMENT_ACCOUNT"
)

// for schema
var accountCategorytypeEnum []interface{}

func init() {
	var res []AccountCategorytype
	if err := json.Unmarshal([]byte(`["ANNUITY_ACCOUNT","DEPOSIT_ACCOUNT","LOAN_ACCOUNT","LOC_ACCOUNT","INSURANCE_ACCOUNT","INVESTMENT_ACCOUNT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		accountCategorytypeEnum = append(accountCategorytypeEnum, v)
	}
}

func (m AccountCategorytype) validateAccountCategorytypeEnum(path, location string, value AccountCategorytype) error {
	if err := validate.EnumCase(path, location, value, accountCategorytypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this account categorytype
func (m AccountCategorytype) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAccountCategorytypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this account categorytype based on context it is used
func (m AccountCategorytype) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
