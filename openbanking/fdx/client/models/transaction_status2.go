// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// TransactionStatus2 TransactionStatus2
//
// PENDING, MEMO, POSTED, AUTHORIZATION
//
// swagger:model TransactionStatus2
type TransactionStatus2 string

func NewTransactionStatus2(value TransactionStatus2) *TransactionStatus2 {
	v := value
	return &v
}

const (

	// TransactionStatus2AUTHORIZATION captures enum value "AUTHORIZATION"
	TransactionStatus2AUTHORIZATION TransactionStatus2 = "AUTHORIZATION"

	// TransactionStatus2MEMO captures enum value "MEMO"
	TransactionStatus2MEMO TransactionStatus2 = "MEMO"

	// TransactionStatus2PENDING captures enum value "PENDING"
	TransactionStatus2PENDING TransactionStatus2 = "PENDING"

	// TransactionStatus2POSTED captures enum value "POSTED"
	TransactionStatus2POSTED TransactionStatus2 = "POSTED"
)

// for schema
var transactionStatus2Enum []interface{}

func init() {
	var res []TransactionStatus2
	if err := json.Unmarshal([]byte(`["AUTHORIZATION","MEMO","PENDING","POSTED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		transactionStatus2Enum = append(transactionStatus2Enum, v)
	}
}

func (m TransactionStatus2) validateTransactionStatus2Enum(path, location string, value TransactionStatus2) error {
	if err := validate.EnumCase(path, location, value, transactionStatus2Enum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this transaction status2
func (m TransactionStatus2) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTransactionStatus2Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this transaction status2 based on context it is used
func (m TransactionStatus2) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
