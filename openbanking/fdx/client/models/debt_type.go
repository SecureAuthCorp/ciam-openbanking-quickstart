// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// DebtType DebtType
//
// The type of a debt instrument
//
// swagger:model DebtType
type DebtType string

func NewDebtType(value DebtType) *DebtType {
	v := value
	return &v
}

const (

	// DebtTypeCOUPON captures enum value "COUPON"
	DebtTypeCOUPON DebtType = "COUPON"

	// DebtTypeZERO captures enum value "ZERO"
	DebtTypeZERO DebtType = "ZERO"
)

// for schema
var debtTypeEnum []interface{}

func init() {
	var res []DebtType
	if err := json.Unmarshal([]byte(`["COUPON","ZERO"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		debtTypeEnum = append(debtTypeEnum, v)
	}
}

func (m DebtType) validateDebtTypeEnum(path, location string, value DebtType) error {
	if err := validate.EnumCase(path, location, value, debtTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this debt type
func (m DebtType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDebtTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this debt type based on context it is used
func (m DebtType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
