// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// InvestmentBalanceType InvestmentBalanceType
//
// The type of an investment balance
//
// swagger:model InvestmentBalanceType
type InvestmentBalanceType string

func NewInvestmentBalanceType(value InvestmentBalanceType) *InvestmentBalanceType {
	v := value
	return &v
}

const (

	// InvestmentBalanceTypeAMOUNT captures enum value "AMOUNT"
	InvestmentBalanceTypeAMOUNT InvestmentBalanceType = "AMOUNT"

	// InvestmentBalanceTypePERCENTAGE captures enum value "PERCENTAGE"
	InvestmentBalanceTypePERCENTAGE InvestmentBalanceType = "PERCENTAGE"
)

// for schema
var investmentBalanceTypeEnum []interface{}

func init() {
	var res []InvestmentBalanceType
	if err := json.Unmarshal([]byte(`["AMOUNT","PERCENTAGE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		investmentBalanceTypeEnum = append(investmentBalanceTypeEnum, v)
	}
}

func (m InvestmentBalanceType) validateInvestmentBalanceTypeEnum(path, location string, value InvestmentBalanceType) error {
	if err := validate.EnumCase(path, location, value, investmentBalanceTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this investment balance type
func (m InvestmentBalanceType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateInvestmentBalanceTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this investment balance type based on context it is used
func (m InvestmentBalanceType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
