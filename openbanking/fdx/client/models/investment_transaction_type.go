// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// InvestmentTransactionType InvestmentTransactionType
//
// The type of an investment transaction
//
// swagger:model InvestmentTransactionType
type InvestmentTransactionType string

func NewInvestmentTransactionType(value InvestmentTransactionType) *InvestmentTransactionType {
	v := value
	return &v
}

const (

	// InvestmentTransactionTypeADJUSTMENT captures enum value "ADJUSTMENT"
	InvestmentTransactionTypeADJUSTMENT InvestmentTransactionType = "ADJUSTMENT"

	// InvestmentTransactionTypeAIRDROP captures enum value "AIRDROP"
	InvestmentTransactionTypeAIRDROP InvestmentTransactionType = "AIRDROP"

	// InvestmentTransactionTypeATM captures enum value "ATM"
	InvestmentTransactionTypeATM InvestmentTransactionType = "ATM"

	// InvestmentTransactionTypeCASH captures enum value "CASH"
	InvestmentTransactionTypeCASH InvestmentTransactionType = "CASH"

	// InvestmentTransactionTypeCHECK captures enum value "CHECK"
	InvestmentTransactionTypeCHECK InvestmentTransactionType = "CHECK"

	// InvestmentTransactionTypeCLOSURE captures enum value "CLOSURE"
	InvestmentTransactionTypeCLOSURE InvestmentTransactionType = "CLOSURE"

	// InvestmentTransactionTypeCLOSUREOPT captures enum value "CLOSUREOPT"
	InvestmentTransactionTypeCLOSUREOPT InvestmentTransactionType = "CLOSUREOPT"

	// InvestmentTransactionTypeCONTRIBUTION captures enum value "CONTRIBUTION"
	InvestmentTransactionTypeCONTRIBUTION InvestmentTransactionType = "CONTRIBUTION"

	// InvestmentTransactionTypeDEP captures enum value "DEP"
	InvestmentTransactionTypeDEP InvestmentTransactionType = "DEP"

	// InvestmentTransactionTypeDEPOSIT captures enum value "DEPOSIT"
	InvestmentTransactionTypeDEPOSIT InvestmentTransactionType = "DEPOSIT"

	// InvestmentTransactionTypeDIRECTDEBIT captures enum value "DIRECTDEBIT"
	InvestmentTransactionTypeDIRECTDEBIT InvestmentTransactionType = "DIRECTDEBIT"

	// InvestmentTransactionTypeDIRECTDEP captures enum value "DIRECTDEP"
	InvestmentTransactionTypeDIRECTDEP InvestmentTransactionType = "DIRECTDEP"

	// InvestmentTransactionTypeDIV captures enum value "DIV"
	InvestmentTransactionTypeDIV InvestmentTransactionType = "DIV"

	// InvestmentTransactionTypeDIVIDEND captures enum value "DIVIDEND"
	InvestmentTransactionTypeDIVIDEND InvestmentTransactionType = "DIVIDEND"

	// InvestmentTransactionTypeDIVIDENDREINVEST captures enum value "DIVIDENDREINVEST"
	InvestmentTransactionTypeDIVIDENDREINVEST InvestmentTransactionType = "DIVIDENDREINVEST"

	// InvestmentTransactionTypeEXPENSE captures enum value "EXPENSE"
	InvestmentTransactionTypeEXPENSE InvestmentTransactionType = "EXPENSE"

	// InvestmentTransactionTypeFEE captures enum value "FEE"
	InvestmentTransactionTypeFEE InvestmentTransactionType = "FEE"

	// InvestmentTransactionTypeFORKED captures enum value "FORKED"
	InvestmentTransactionTypeFORKED InvestmentTransactionType = "FORKED"

	// InvestmentTransactionTypeINCOME captures enum value "INCOME"
	InvestmentTransactionTypeINCOME InvestmentTransactionType = "INCOME"

	// InvestmentTransactionTypeINTEREST captures enum value "INTEREST"
	InvestmentTransactionTypeINTEREST InvestmentTransactionType = "INTEREST"

	// InvestmentTransactionTypeINVEXPENSE captures enum value "INVEXPENSE"
	InvestmentTransactionTypeINVEXPENSE InvestmentTransactionType = "INVEXPENSE"

	// InvestmentTransactionTypeJRNLFUND captures enum value "JRNLFUND"
	InvestmentTransactionTypeJRNLFUND InvestmentTransactionType = "JRNLFUND"

	// InvestmentTransactionTypeJRNLSEC captures enum value "JRNLSEC"
	InvestmentTransactionTypeJRNLSEC InvestmentTransactionType = "JRNLSEC"

	// InvestmentTransactionTypeMARGININTEREST captures enum value "MARGININTEREST"
	InvestmentTransactionTypeMARGININTEREST InvestmentTransactionType = "MARGININTEREST"

	// InvestmentTransactionTypeMINED captures enum value "MINED"
	InvestmentTransactionTypeMINED InvestmentTransactionType = "MINED"

	// InvestmentTransactionTypeOPTIONEXERCISE captures enum value "OPTIONEXERCISE"
	InvestmentTransactionTypeOPTIONEXERCISE InvestmentTransactionType = "OPTIONEXERCISE"

	// InvestmentTransactionTypeOPTIONEXPIRATION captures enum value "OPTIONEXPIRATION"
	InvestmentTransactionTypeOPTIONEXPIRATION InvestmentTransactionType = "OPTIONEXPIRATION"

	// InvestmentTransactionTypeOTHER captures enum value "OTHER"
	InvestmentTransactionTypeOTHER InvestmentTransactionType = "OTHER"

	// InvestmentTransactionTypePAYMENT captures enum value "PAYMENT"
	InvestmentTransactionTypePAYMENT InvestmentTransactionType = "PAYMENT"

	// InvestmentTransactionTypePOS captures enum value "POS"
	InvestmentTransactionTypePOS InvestmentTransactionType = "POS"

	// InvestmentTransactionTypePURCHASED captures enum value "PURCHASED"
	InvestmentTransactionTypePURCHASED InvestmentTransactionType = "PURCHASED"

	// InvestmentTransactionTypePURCHASEDTOCOVER captures enum value "PURCHASEDTOCOVER"
	InvestmentTransactionTypePURCHASEDTOCOVER InvestmentTransactionType = "PURCHASEDTOCOVER"

	// InvestmentTransactionTypePURCHASETOCLOSE captures enum value "PURCHASETOCLOSE"
	InvestmentTransactionTypePURCHASETOCLOSE InvestmentTransactionType = "PURCHASETOCLOSE"

	// InvestmentTransactionTypePURCHASETOOPEN captures enum value "PURCHASETOOPEN"
	InvestmentTransactionTypePURCHASETOOPEN InvestmentTransactionType = "PURCHASETOOPEN"

	// InvestmentTransactionTypeREINVESTOFINCOME captures enum value "REINVESTOFINCOME"
	InvestmentTransactionTypeREINVESTOFINCOME InvestmentTransactionType = "REINVESTOFINCOME"

	// InvestmentTransactionTypeREPEATPMT captures enum value "REPEATPMT"
	InvestmentTransactionTypeREPEATPMT InvestmentTransactionType = "REPEATPMT"

	// InvestmentTransactionTypeRETURNOFCAPITAL captures enum value "RETURNOFCAPITAL"
	InvestmentTransactionTypeRETURNOFCAPITAL InvestmentTransactionType = "RETURNOFCAPITAL"

	// InvestmentTransactionTypeSOLD captures enum value "SOLD"
	InvestmentTransactionTypeSOLD InvestmentTransactionType = "SOLD"

	// InvestmentTransactionTypeSOLDTOCLOSE captures enum value "SOLDTOCLOSE"
	InvestmentTransactionTypeSOLDTOCLOSE InvestmentTransactionType = "SOLDTOCLOSE"

	// InvestmentTransactionTypeSOLDTOOPEN captures enum value "SOLDTOOPEN"
	InvestmentTransactionTypeSOLDTOOPEN InvestmentTransactionType = "SOLDTOOPEN"

	// InvestmentTransactionTypeSPLIT captures enum value "SPLIT"
	InvestmentTransactionTypeSPLIT InvestmentTransactionType = "SPLIT"

	// InvestmentTransactionTypeSRVCHG captures enum value "SRVCHG"
	InvestmentTransactionTypeSRVCHG InvestmentTransactionType = "SRVCHG"

	// InvestmentTransactionTypeSTAKED captures enum value "STAKED"
	InvestmentTransactionTypeSTAKED InvestmentTransactionType = "STAKED"

	// InvestmentTransactionTypeTRANSFER captures enum value "TRANSFER"
	InvestmentTransactionTypeTRANSFER InvestmentTransactionType = "TRANSFER"

	// InvestmentTransactionTypeWITHDRAWAL captures enum value "WITHDRAWAL"
	InvestmentTransactionTypeWITHDRAWAL InvestmentTransactionType = "WITHDRAWAL"

	// InvestmentTransactionTypeXFER captures enum value "XFER"
	InvestmentTransactionTypeXFER InvestmentTransactionType = "XFER"
)

// for schema
var investmentTransactionTypeEnum []interface{}

func init() {
	var res []InvestmentTransactionType
	if err := json.Unmarshal([]byte(`["ADJUSTMENT","AIRDROP","ATM","CASH","CHECK","CLOSURE","CLOSUREOPT","CONTRIBUTION","DEP","DEPOSIT","DIRECTDEBIT","DIRECTDEP","DIV","DIVIDEND","DIVIDENDREINVEST","EXPENSE","FEE","FORKED","INCOME","INTEREST","INVEXPENSE","JRNLFUND","JRNLSEC","MARGININTEREST","MINED","OPTIONEXERCISE","OPTIONEXPIRATION","OTHER","PAYMENT","POS","PURCHASED","PURCHASEDTOCOVER","PURCHASETOCLOSE","PURCHASETOOPEN","REINVESTOFINCOME","REPEATPMT","RETURNOFCAPITAL","SOLD","SOLDTOCLOSE","SOLDTOOPEN","SPLIT","SRVCHG","STAKED","TRANSFER","WITHDRAWAL","XFER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		investmentTransactionTypeEnum = append(investmentTransactionTypeEnum, v)
	}
}

func (m InvestmentTransactionType) validateInvestmentTransactionTypeEnum(path, location string, value InvestmentTransactionType) error {
	if err := validate.EnumCase(path, location, value, investmentTransactionTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this investment transaction type
func (m InvestmentTransactionType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateInvestmentTransactionTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this investment transaction type based on context it is used
func (m InvestmentTransactionType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
