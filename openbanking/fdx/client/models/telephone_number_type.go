// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// TelephoneNumberType TelephoneNumberType
//
// Purpose or type of telephone number
//
// swagger:model TelephoneNumberType
type TelephoneNumberType string

func NewTelephoneNumberType(value TelephoneNumberType) *TelephoneNumberType {
	v := value
	return &v
}

const (

	// TelephoneNumberTypeHOME captures enum value "HOME"
	TelephoneNumberTypeHOME TelephoneNumberType = "HOME"

	// TelephoneNumberTypeBUSINESS captures enum value "BUSINESS"
	TelephoneNumberTypeBUSINESS TelephoneNumberType = "BUSINESS"

	// TelephoneNumberTypeCELL captures enum value "CELL"
	TelephoneNumberTypeCELL TelephoneNumberType = "CELL"

	// TelephoneNumberTypeFAX captures enum value "FAX"
	TelephoneNumberTypeFAX TelephoneNumberType = "FAX"
)

// for schema
var telephoneNumberTypeEnum []interface{}

func init() {
	var res []TelephoneNumberType
	if err := json.Unmarshal([]byte(`["HOME","BUSINESS","CELL","FAX"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		telephoneNumberTypeEnum = append(telephoneNumberTypeEnum, v)
	}
}

func (m TelephoneNumberType) validateTelephoneNumberTypeEnum(path, location string, value TelephoneNumberType) error {
	if err := validate.EnumCase(path, location, value, telephoneNumberTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this telephone number type
func (m TelephoneNumberType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTelephoneNumberTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this telephone number type based on context it is used
func (m TelephoneNumberType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
