// Code generated by go-swagger; DO NOT EDIT.

package recurring_payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/openbanking-quickstart/openbanking/fdx/client/models"
)

// SearchForRecurringPaymentsReader is a Reader for the SearchForRecurringPayments structure.
type SearchForRecurringPaymentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchForRecurringPaymentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchForRecurringPaymentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewSearchForRecurringPaymentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchForRecurringPaymentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewSearchForRecurringPaymentsNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewSearchForRecurringPaymentsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchForRecurringPaymentsOK creates a SearchForRecurringPaymentsOK with default headers values
func NewSearchForRecurringPaymentsOK() *SearchForRecurringPaymentsOK {
	return &SearchForRecurringPaymentsOK{}
}

/* SearchForRecurringPaymentsOK describes a response with status code 200, with default header values.

Ok
*/
type SearchForRecurringPaymentsOK struct {
	Payload *models.RecurringPaymentsentity
}

func (o *SearchForRecurringPaymentsOK) Error() string {
	return fmt.Sprintf("[GET /recurring-payments][%d] searchForRecurringPaymentsOK  %+v", 200, o.Payload)
}
func (o *SearchForRecurringPaymentsOK) GetPayload() *models.RecurringPaymentsentity {
	return o.Payload
}

func (o *SearchForRecurringPaymentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RecurringPaymentsentity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForRecurringPaymentsNotFound creates a SearchForRecurringPaymentsNotFound with default headers values
func NewSearchForRecurringPaymentsNotFound() *SearchForRecurringPaymentsNotFound {
	return &SearchForRecurringPaymentsNotFound{}
}

/* SearchForRecurringPaymentsNotFound describes a response with status code 404, with default header values.

Data not found for request parameters
*/
type SearchForRecurringPaymentsNotFound struct {
	Payload *models.Error
}

func (o *SearchForRecurringPaymentsNotFound) Error() string {
	return fmt.Sprintf("[GET /recurring-payments][%d] searchForRecurringPaymentsNotFound  %+v", 404, o.Payload)
}
func (o *SearchForRecurringPaymentsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForRecurringPaymentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForRecurringPaymentsInternalServerError creates a SearchForRecurringPaymentsInternalServerError with default headers values
func NewSearchForRecurringPaymentsInternalServerError() *SearchForRecurringPaymentsInternalServerError {
	return &SearchForRecurringPaymentsInternalServerError{}
}

/* SearchForRecurringPaymentsInternalServerError describes a response with status code 500, with default header values.

Catch all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error
*/
type SearchForRecurringPaymentsInternalServerError struct {
	Payload *models.Error
}

func (o *SearchForRecurringPaymentsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /recurring-payments][%d] searchForRecurringPaymentsInternalServerError  %+v", 500, o.Payload)
}
func (o *SearchForRecurringPaymentsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForRecurringPaymentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForRecurringPaymentsNotImplemented creates a SearchForRecurringPaymentsNotImplemented with default headers values
func NewSearchForRecurringPaymentsNotImplemented() *SearchForRecurringPaymentsNotImplemented {
	return &SearchForRecurringPaymentsNotImplemented{}
}

/* SearchForRecurringPaymentsNotImplemented describes a response with status code 501, with default header values.

Error when FdxVersion in Header is not one of those implemented at backend
*/
type SearchForRecurringPaymentsNotImplemented struct {
	Payload *models.Error
}

func (o *SearchForRecurringPaymentsNotImplemented) Error() string {
	return fmt.Sprintf("[GET /recurring-payments][%d] searchForRecurringPaymentsNotImplemented  %+v", 501, o.Payload)
}
func (o *SearchForRecurringPaymentsNotImplemented) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForRecurringPaymentsNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForRecurringPaymentsServiceUnavailable creates a SearchForRecurringPaymentsServiceUnavailable with default headers values
func NewSearchForRecurringPaymentsServiceUnavailable() *SearchForRecurringPaymentsServiceUnavailable {
	return &SearchForRecurringPaymentsServiceUnavailable{}
}

/* SearchForRecurringPaymentsServiceUnavailable describes a response with status code 503, with default header values.

System is down for maintenance
*/
type SearchForRecurringPaymentsServiceUnavailable struct {
	Payload *models.Error
}

func (o *SearchForRecurringPaymentsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /recurring-payments][%d] searchForRecurringPaymentsServiceUnavailable  %+v", 503, o.Payload)
}
func (o *SearchForRecurringPaymentsServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForRecurringPaymentsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
