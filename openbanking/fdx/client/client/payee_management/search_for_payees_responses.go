// Code generated by go-swagger; DO NOT EDIT.

package payee_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/openbanking-quickstart/openbanking/fdx/client/models"
)

// SearchForPayeesReader is a Reader for the SearchForPayees structure.
type SearchForPayeesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchForPayeesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchForPayeesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewSearchForPayeesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchForPayeesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewSearchForPayeesNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewSearchForPayeesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchForPayeesOK creates a SearchForPayeesOK with default headers values
func NewSearchForPayeesOK() *SearchForPayeesOK {
	return &SearchForPayeesOK{}
}

/* SearchForPayeesOK describes a response with status code 200, with default header values.

Ok
*/
type SearchForPayeesOK struct {
	Payload *models.Payeesentity
}

func (o *SearchForPayeesOK) Error() string {
	return fmt.Sprintf("[GET /payees][%d] searchForPayeesOK  %+v", 200, o.Payload)
}
func (o *SearchForPayeesOK) GetPayload() *models.Payeesentity {
	return o.Payload
}

func (o *SearchForPayeesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Payeesentity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForPayeesNotFound creates a SearchForPayeesNotFound with default headers values
func NewSearchForPayeesNotFound() *SearchForPayeesNotFound {
	return &SearchForPayeesNotFound{}
}

/* SearchForPayeesNotFound describes a response with status code 404, with default header values.

Data not found for request parameters
*/
type SearchForPayeesNotFound struct {
	Payload *models.Error
}

func (o *SearchForPayeesNotFound) Error() string {
	return fmt.Sprintf("[GET /payees][%d] searchForPayeesNotFound  %+v", 404, o.Payload)
}
func (o *SearchForPayeesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForPayeesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForPayeesInternalServerError creates a SearchForPayeesInternalServerError with default headers values
func NewSearchForPayeesInternalServerError() *SearchForPayeesInternalServerError {
	return &SearchForPayeesInternalServerError{}
}

/* SearchForPayeesInternalServerError describes a response with status code 500, with default header values.

Catch all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error
*/
type SearchForPayeesInternalServerError struct {
	Payload *models.Error
}

func (o *SearchForPayeesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /payees][%d] searchForPayeesInternalServerError  %+v", 500, o.Payload)
}
func (o *SearchForPayeesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForPayeesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForPayeesNotImplemented creates a SearchForPayeesNotImplemented with default headers values
func NewSearchForPayeesNotImplemented() *SearchForPayeesNotImplemented {
	return &SearchForPayeesNotImplemented{}
}

/* SearchForPayeesNotImplemented describes a response with status code 501, with default header values.

Error when FdxVersion in Header is not one of those implemented at backend
*/
type SearchForPayeesNotImplemented struct {
	Payload *models.Error
}

func (o *SearchForPayeesNotImplemented) Error() string {
	return fmt.Sprintf("[GET /payees][%d] searchForPayeesNotImplemented  %+v", 501, o.Payload)
}
func (o *SearchForPayeesNotImplemented) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForPayeesNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForPayeesServiceUnavailable creates a SearchForPayeesServiceUnavailable with default headers values
func NewSearchForPayeesServiceUnavailable() *SearchForPayeesServiceUnavailable {
	return &SearchForPayeesServiceUnavailable{}
}

/* SearchForPayeesServiceUnavailable describes a response with status code 503, with default header values.

System is down for maintenance
*/
type SearchForPayeesServiceUnavailable struct {
	Payload *models.Error
}

func (o *SearchForPayeesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /payees][%d] searchForPayeesServiceUnavailable  %+v", 503, o.Payload)
}
func (o *SearchForPayeesServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForPayeesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
