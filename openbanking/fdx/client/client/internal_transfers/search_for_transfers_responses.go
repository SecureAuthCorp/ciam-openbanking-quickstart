// Code generated by go-swagger; DO NOT EDIT.

package internal_transfers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/openbanking-quickstart/openbanking/fdx/client/models"
)

// SearchForTransfersReader is a Reader for the SearchForTransfers structure.
type SearchForTransfersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchForTransfersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchForTransfersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchForTransfersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchForTransfersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchForTransfersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewSearchForTransfersNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewSearchForTransfersServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchForTransfersOK creates a SearchForTransfersOK with default headers values
func NewSearchForTransfersOK() *SearchForTransfersOK {
	return &SearchForTransfersOK{}
}

/* SearchForTransfersOK describes a response with status code 200, with default header values.

Success
*/
type SearchForTransfersOK struct {
	Payload *models.Transfersentity
}

func (o *SearchForTransfersOK) Error() string {
	return fmt.Sprintf("[GET /transfers][%d] searchForTransfersOK  %+v", 200, o.Payload)
}
func (o *SearchForTransfersOK) GetPayload() *models.Transfersentity {
	return o.Payload
}

func (o *SearchForTransfersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Transfersentity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForTransfersBadRequest creates a SearchForTransfersBadRequest with default headers values
func NewSearchForTransfersBadRequest() *SearchForTransfersBadRequest {
	return &SearchForTransfersBadRequest{}
}

/* SearchForTransfersBadRequest describes a response with status code 400, with default header values.

Start or end date value is not in the ISO 8601 format
*/
type SearchForTransfersBadRequest struct {
	Payload *models.Error
}

func (o *SearchForTransfersBadRequest) Error() string {
	return fmt.Sprintf("[GET /transfers][%d] searchForTransfersBadRequest  %+v", 400, o.Payload)
}
func (o *SearchForTransfersBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForTransfersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForTransfersNotFound creates a SearchForTransfersNotFound with default headers values
func NewSearchForTransfersNotFound() *SearchForTransfersNotFound {
	return &SearchForTransfersNotFound{}
}

/* SearchForTransfersNotFound describes a response with status code 404, with default header values.

Data not found for request parameters
*/
type SearchForTransfersNotFound struct {
	Payload *models.Error
}

func (o *SearchForTransfersNotFound) Error() string {
	return fmt.Sprintf("[GET /transfers][%d] searchForTransfersNotFound  %+v", 404, o.Payload)
}
func (o *SearchForTransfersNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForTransfersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForTransfersInternalServerError creates a SearchForTransfersInternalServerError with default headers values
func NewSearchForTransfersInternalServerError() *SearchForTransfersInternalServerError {
	return &SearchForTransfersInternalServerError{}
}

/* SearchForTransfersInternalServerError describes a response with status code 500, with default header values.

Catch all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error
*/
type SearchForTransfersInternalServerError struct {
	Payload *models.Error
}

func (o *SearchForTransfersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /transfers][%d] searchForTransfersInternalServerError  %+v", 500, o.Payload)
}
func (o *SearchForTransfersInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForTransfersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForTransfersNotImplemented creates a SearchForTransfersNotImplemented with default headers values
func NewSearchForTransfersNotImplemented() *SearchForTransfersNotImplemented {
	return &SearchForTransfersNotImplemented{}
}

/* SearchForTransfersNotImplemented describes a response with status code 501, with default header values.

Error when FdxVersion in Header is not one of those implemented at backend
*/
type SearchForTransfersNotImplemented struct {
	Payload *models.Error
}

func (o *SearchForTransfersNotImplemented) Error() string {
	return fmt.Sprintf("[GET /transfers][%d] searchForTransfersNotImplemented  %+v", 501, o.Payload)
}
func (o *SearchForTransfersNotImplemented) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForTransfersNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForTransfersServiceUnavailable creates a SearchForTransfersServiceUnavailable with default headers values
func NewSearchForTransfersServiceUnavailable() *SearchForTransfersServiceUnavailable {
	return &SearchForTransfersServiceUnavailable{}
}

/* SearchForTransfersServiceUnavailable describes a response with status code 503, with default header values.

System is down for maintenance
*/
type SearchForTransfersServiceUnavailable struct {
	Payload *models.Error
}

func (o *SearchForTransfersServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /transfers][%d] searchForTransfersServiceUnavailable  %+v", 503, o.Payload)
}
func (o *SearchForTransfersServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForTransfersServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
