// Code generated by go-swagger; DO NOT EDIT.

package account_statements

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/openbanking-quickstart/openbanking/fdx/client/models"
)

// GetAccountStatementReader is a Reader for the GetAccountStatement structure.
type GetAccountStatementReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountStatementReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccountStatementOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 302:
		result := NewGetAccountStatementFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetAccountStatementBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAccountStatementNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetAccountStatementNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAccountStatementInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewGetAccountStatementNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAccountStatementServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAccountStatementOK creates a GetAccountStatementOK with default headers values
func NewGetAccountStatementOK() *GetAccountStatementOK {
	return &GetAccountStatementOK{}
}

/* GetAccountStatementOK describes a response with status code 200, with default header values.

An image of an account statement
*/
type GetAccountStatementOK struct {
	Payload interface{}
}

func (o *GetAccountStatementOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/statements/{statementId}][%d] getAccountStatementOK  %+v", 200, o.Payload)
}
func (o *GetAccountStatementOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetAccountStatementOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountStatementFound creates a GetAccountStatementFound with default headers values
func NewGetAccountStatementFound() *GetAccountStatementFound {
	return &GetAccountStatementFound{}
}

/* GetAccountStatementFound describes a response with status code 302, with default header values.

Statement is available at specified location. URL is returned via the `Location` HTTP header
*/
type GetAccountStatementFound struct {
}

func (o *GetAccountStatementFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/statements/{statementId}][%d] getAccountStatementFound ", 302)
}

func (o *GetAccountStatementFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAccountStatementBadRequest creates a GetAccountStatementBadRequest with default headers values
func NewGetAccountStatementBadRequest() *GetAccountStatementBadRequest {
	return &GetAccountStatementBadRequest{}
}

/* GetAccountStatementBadRequest describes a response with status code 400, with default header values.

Statement is processing and is not yet available
*/
type GetAccountStatementBadRequest struct {
	Payload *models.Error
}

func (o *GetAccountStatementBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/statements/{statementId}][%d] getAccountStatementBadRequest  %+v", 400, o.Payload)
}
func (o *GetAccountStatementBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAccountStatementBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountStatementNotFound creates a GetAccountStatementNotFound with default headers values
func NewGetAccountStatementNotFound() *GetAccountStatementNotFound {
	return &GetAccountStatementNotFound{}
}

/* GetAccountStatementNotFound describes a response with status code 404, with default header values.

When account is present with no statements in it
*/
type GetAccountStatementNotFound struct {
	Payload *models.Error
}

func (o *GetAccountStatementNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/statements/{statementId}][%d] getAccountStatementNotFound  %+v", 404, o.Payload)
}
func (o *GetAccountStatementNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAccountStatementNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountStatementNotAcceptable creates a GetAccountStatementNotAcceptable with default headers values
func NewGetAccountStatementNotAcceptable() *GetAccountStatementNotAcceptable {
	return &GetAccountStatementNotAcceptable{}
}

/* GetAccountStatementNotAcceptable describes a response with status code 406, with default header values.

Content Type not Supported
*/
type GetAccountStatementNotAcceptable struct {
	Payload *models.Error
}

func (o *GetAccountStatementNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/statements/{statementId}][%d] getAccountStatementNotAcceptable  %+v", 406, o.Payload)
}
func (o *GetAccountStatementNotAcceptable) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAccountStatementNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountStatementInternalServerError creates a GetAccountStatementInternalServerError with default headers values
func NewGetAccountStatementInternalServerError() *GetAccountStatementInternalServerError {
	return &GetAccountStatementInternalServerError{}
}

/* GetAccountStatementInternalServerError describes a response with status code 500, with default header values.

Catch all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error
*/
type GetAccountStatementInternalServerError struct {
	Payload *models.Error
}

func (o *GetAccountStatementInternalServerError) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/statements/{statementId}][%d] getAccountStatementInternalServerError  %+v", 500, o.Payload)
}
func (o *GetAccountStatementInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAccountStatementInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountStatementNotImplemented creates a GetAccountStatementNotImplemented with default headers values
func NewGetAccountStatementNotImplemented() *GetAccountStatementNotImplemented {
	return &GetAccountStatementNotImplemented{}
}

/* GetAccountStatementNotImplemented describes a response with status code 501, with default header values.

Error when FdxVersion in Header is not one of those implemented at backend
*/
type GetAccountStatementNotImplemented struct {
	Payload *models.Error
}

func (o *GetAccountStatementNotImplemented) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/statements/{statementId}][%d] getAccountStatementNotImplemented  %+v", 501, o.Payload)
}
func (o *GetAccountStatementNotImplemented) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAccountStatementNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountStatementServiceUnavailable creates a GetAccountStatementServiceUnavailable with default headers values
func NewGetAccountStatementServiceUnavailable() *GetAccountStatementServiceUnavailable {
	return &GetAccountStatementServiceUnavailable{}
}

/* GetAccountStatementServiceUnavailable describes a response with status code 503, with default header values.

System is down for maintenance
*/
type GetAccountStatementServiceUnavailable struct {
	Payload *models.Error
}

func (o *GetAccountStatementServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/statements/{statementId}][%d] getAccountStatementServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetAccountStatementServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAccountStatementServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
