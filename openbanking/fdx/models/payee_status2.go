// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PayeeStatus2 PayeeStatus2
//
// Defines the Payeeâ€™s lifecycle
//
// swagger:model PayeeStatus2
type PayeeStatus2 string

func NewPayeeStatus2(value PayeeStatus2) *PayeeStatus2 {
	v := value
	return &v
}

const (

	// PayeeStatus2ACTIVE captures enum value "ACTIVE"
	PayeeStatus2ACTIVE PayeeStatus2 = "ACTIVE"

	// PayeeStatus2DELETED captures enum value "DELETED"
	PayeeStatus2DELETED PayeeStatus2 = "DELETED"

	// PayeeStatus2PENDING captures enum value "PENDING"
	PayeeStatus2PENDING PayeeStatus2 = "PENDING"

	// PayeeStatus2REJECTED captures enum value "REJECTED"
	PayeeStatus2REJECTED PayeeStatus2 = "REJECTED"
)

// for schema
var payeeStatus2Enum []interface{}

func init() {
	var res []PayeeStatus2
	if err := json.Unmarshal([]byte(`["ACTIVE","DELETED","PENDING","REJECTED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		payeeStatus2Enum = append(payeeStatus2Enum, v)
	}
}

func (m PayeeStatus2) validatePayeeStatus2Enum(path, location string, value PayeeStatus2) error {
	if err := validate.EnumCase(path, location, value, payeeStatus2Enum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this payee status2
func (m PayeeStatus2) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePayeeStatus2Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this payee status2 based on context it is used
func (m PayeeStatus2) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
