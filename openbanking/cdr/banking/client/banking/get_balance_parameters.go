// Code generated by go-swagger; DO NOT EDIT.

package banking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetBalanceParams creates a new GetBalanceParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetBalanceParams() *GetBalanceParams {
	return &GetBalanceParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetBalanceParamsWithTimeout creates a new GetBalanceParams object
// with the ability to set a timeout on a request.
func NewGetBalanceParamsWithTimeout(timeout time.Duration) *GetBalanceParams {
	return &GetBalanceParams{
		timeout: timeout,
	}
}

// NewGetBalanceParamsWithContext creates a new GetBalanceParams object
// with the ability to set a context for a request.
func NewGetBalanceParamsWithContext(ctx context.Context) *GetBalanceParams {
	return &GetBalanceParams{
		Context: ctx,
	}
}

// NewGetBalanceParamsWithHTTPClient creates a new GetBalanceParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetBalanceParamsWithHTTPClient(client *http.Client) *GetBalanceParams {
	return &GetBalanceParams{
		HTTPClient: client,
	}
}

/* GetBalanceParams contains all the parameters to send to the API endpoint
   for the get balance operation.

   Typically these are written to a http.Request.
*/
type GetBalanceParams struct {

	/* AccountID.

	   ID of the specific account requested
	*/
	AccountID string

	/* XCdsClientHeaders.

	   The customer's original standard http headers [Base64](#common-field-types) encoded, including the original User Agent header, if the customer is currently logged in to the Data Recipient Software Product. Mandatory for customer present calls.  Not required for unattended or unauthenticated calls.
	*/
	XCdsClientHeaders *string

	/* XFapiAuthDate.

	   The time when the customer last logged in to the Data Recipient Software Product. Required for all resource calls (customer present and unattended) if the customer has logged in. Not to be included for unauthenticated calls.
	*/
	XFapiAuthDate *string

	/* XFapiCustomerIPAddress.

	   The customer's original IP address if the customer is currently logged in to the Data Recipient Software Product. The presence of this header indicates that the API is being called in a customer present context. Not to be included for unauthenticated calls.
	*/
	XFapiCustomerIPAddress *string

	/* XFapiInteractionID.

	   An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction.
	*/
	XFapiInteractionID *string

	/* XMinv.

	   Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.
	*/
	XMinv *string

	/* Xv.

	   Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)
	*/
	Xv string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get balance params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetBalanceParams) WithDefaults() *GetBalanceParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get balance params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetBalanceParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get balance params
func (o *GetBalanceParams) WithTimeout(timeout time.Duration) *GetBalanceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get balance params
func (o *GetBalanceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get balance params
func (o *GetBalanceParams) WithContext(ctx context.Context) *GetBalanceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get balance params
func (o *GetBalanceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get balance params
func (o *GetBalanceParams) WithHTTPClient(client *http.Client) *GetBalanceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get balance params
func (o *GetBalanceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the get balance params
func (o *GetBalanceParams) WithAccountID(accountID string) *GetBalanceParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the get balance params
func (o *GetBalanceParams) SetAccountID(accountID string) {
	o.AccountID = accountID
}

// WithXCdsClientHeaders adds the xCdsClientHeaders to the get balance params
func (o *GetBalanceParams) WithXCdsClientHeaders(xCdsClientHeaders *string) *GetBalanceParams {
	o.SetXCdsClientHeaders(xCdsClientHeaders)
	return o
}

// SetXCdsClientHeaders adds the xCdsClientHeaders to the get balance params
func (o *GetBalanceParams) SetXCdsClientHeaders(xCdsClientHeaders *string) {
	o.XCdsClientHeaders = xCdsClientHeaders
}

// WithXFapiAuthDate adds the xFapiAuthDate to the get balance params
func (o *GetBalanceParams) WithXFapiAuthDate(xFapiAuthDate *string) *GetBalanceParams {
	o.SetXFapiAuthDate(xFapiAuthDate)
	return o
}

// SetXFapiAuthDate adds the xFapiAuthDate to the get balance params
func (o *GetBalanceParams) SetXFapiAuthDate(xFapiAuthDate *string) {
	o.XFapiAuthDate = xFapiAuthDate
}

// WithXFapiCustomerIPAddress adds the xFapiCustomerIPAddress to the get balance params
func (o *GetBalanceParams) WithXFapiCustomerIPAddress(xFapiCustomerIPAddress *string) *GetBalanceParams {
	o.SetXFapiCustomerIPAddress(xFapiCustomerIPAddress)
	return o
}

// SetXFapiCustomerIPAddress adds the xFapiCustomerIpAddress to the get balance params
func (o *GetBalanceParams) SetXFapiCustomerIPAddress(xFapiCustomerIPAddress *string) {
	o.XFapiCustomerIPAddress = xFapiCustomerIPAddress
}

// WithXFapiInteractionID adds the xFapiInteractionID to the get balance params
func (o *GetBalanceParams) WithXFapiInteractionID(xFapiInteractionID *string) *GetBalanceParams {
	o.SetXFapiInteractionID(xFapiInteractionID)
	return o
}

// SetXFapiInteractionID adds the xFapiInteractionId to the get balance params
func (o *GetBalanceParams) SetXFapiInteractionID(xFapiInteractionID *string) {
	o.XFapiInteractionID = xFapiInteractionID
}

// WithXMinv adds the xMinv to the get balance params
func (o *GetBalanceParams) WithXMinv(xMinv *string) *GetBalanceParams {
	o.SetXMinv(xMinv)
	return o
}

// SetXMinv adds the xMinV to the get balance params
func (o *GetBalanceParams) SetXMinv(xMinv *string) {
	o.XMinv = xMinv
}

// WithXv adds the xv to the get balance params
func (o *GetBalanceParams) WithXv(xv string) *GetBalanceParams {
	o.SetXv(xv)
	return o
}

// SetXv adds the xV to the get balance params
func (o *GetBalanceParams) SetXv(xv string) {
	o.Xv = xv
}

// WriteToRequest writes these params to a swagger request
func (o *GetBalanceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param accountId
	if err := r.SetPathParam("accountId", o.AccountID); err != nil {
		return err
	}

	if o.XCdsClientHeaders != nil {

		// header param x-cds-client-headers
		if err := r.SetHeaderParam("x-cds-client-headers", *o.XCdsClientHeaders); err != nil {
			return err
		}
	}

	if o.XFapiAuthDate != nil {

		// header param x-fapi-auth-date
		if err := r.SetHeaderParam("x-fapi-auth-date", *o.XFapiAuthDate); err != nil {
			return err
		}
	}

	if o.XFapiCustomerIPAddress != nil {

		// header param x-fapi-customer-ip-address
		if err := r.SetHeaderParam("x-fapi-customer-ip-address", *o.XFapiCustomerIPAddress); err != nil {
			return err
		}
	}

	if o.XFapiInteractionID != nil {

		// header param x-fapi-interaction-id
		if err := r.SetHeaderParam("x-fapi-interaction-id", *o.XFapiInteractionID); err != nil {
			return err
		}
	}

	if o.XMinv != nil {

		// header param x-min-v
		if err := r.SetHeaderParam("x-min-v", *o.XMinv); err != nil {
			return err
		}
	}

	// header param x-v
	if err := r.SetHeaderParam("x-v", o.Xv); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
