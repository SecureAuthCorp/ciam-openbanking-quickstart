// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// FeatureType FeatureType
//
// The type of feature described
// Example: ADDITIONAL_CARDS
//
// swagger:model FeatureType
type FeatureType string

const (

	// FeatureTypeADDITIONALCARDS captures enum value "ADDITIONAL_CARDS"
	FeatureTypeADDITIONALCARDS FeatureType = "ADDITIONAL_CARDS"

	// FeatureTypeBALANCETRANSFERS captures enum value "BALANCE_TRANSFERS"
	FeatureTypeBALANCETRANSFERS FeatureType = "BALANCE_TRANSFERS"

	// FeatureTypeBILLPAYMENT captures enum value "BILL_PAYMENT"
	FeatureTypeBILLPAYMENT FeatureType = "BILL_PAYMENT"

	// FeatureTypeBONUSREWARDS captures enum value "BONUS_REWARDS"
	FeatureTypeBONUSREWARDS FeatureType = "BONUS_REWARDS"

	// FeatureTypeCARDACCESS captures enum value "CARD_ACCESS"
	FeatureTypeCARDACCESS FeatureType = "CARD_ACCESS"

	// FeatureTypeCASHBACKOFFER captures enum value "CASHBACK_OFFER"
	FeatureTypeCASHBACKOFFER FeatureType = "CASHBACK_OFFER"

	// FeatureTypeCOMPLEMENTARYPRODUCTDISCOUNTS captures enum value "COMPLEMENTARY_PRODUCT_DISCOUNTS"
	FeatureTypeCOMPLEMENTARYPRODUCTDISCOUNTS FeatureType = "COMPLEMENTARY_PRODUCT_DISCOUNTS"

	// FeatureTypeDIGITALBANKING captures enum value "DIGITAL_BANKING"
	FeatureTypeDIGITALBANKING FeatureType = "DIGITAL_BANKING"

	// FeatureTypeDIGITALWALLET captures enum value "DIGITAL_WALLET"
	FeatureTypeDIGITALWALLET FeatureType = "DIGITAL_WALLET"

	// FeatureTypeDONATEINTEREST captures enum value "DONATE_INTEREST"
	FeatureTypeDONATEINTEREST FeatureType = "DONATE_INTEREST"

	// FeatureTypeEXTRAREPAYMENTS captures enum value "EXTRA_REPAYMENTS"
	FeatureTypeEXTRAREPAYMENTS FeatureType = "EXTRA_REPAYMENTS"

	// FeatureTypeFRAUDPROTECTION captures enum value "FRAUD_PROTECTION"
	FeatureTypeFRAUDPROTECTION FeatureType = "FRAUD_PROTECTION"

	// FeatureTypeFREETXNS captures enum value "FREE_TXNS"
	FeatureTypeFREETXNS FeatureType = "FREE_TXNS"

	// FeatureTypeFREETXNSALLOWANCE captures enum value "FREE_TXNS_ALLOWANCE"
	FeatureTypeFREETXNSALLOWANCE FeatureType = "FREE_TXNS_ALLOWANCE"

	// FeatureTypeGUARANTOR captures enum value "GUARANTOR"
	FeatureTypeGUARANTOR FeatureType = "GUARANTOR"

	// FeatureTypeINSURANCE captures enum value "INSURANCE"
	FeatureTypeINSURANCE FeatureType = "INSURANCE"

	// FeatureTypeINSTALMENTPLAN captures enum value "INSTALMENT_PLAN"
	FeatureTypeINSTALMENTPLAN FeatureType = "INSTALMENT_PLAN"

	// FeatureTypeINTERESTFREE captures enum value "INTEREST_FREE"
	FeatureTypeINTERESTFREE FeatureType = "INTEREST_FREE"

	// FeatureTypeINTERESTFREETRANSFERS captures enum value "INTEREST_FREE_TRANSFERS"
	FeatureTypeINTERESTFREETRANSFERS FeatureType = "INTEREST_FREE_TRANSFERS"

	// FeatureTypeLOYALTYPROGRAM captures enum value "LOYALTY_PROGRAM"
	FeatureTypeLOYALTYPROGRAM FeatureType = "LOYALTY_PROGRAM"

	// FeatureTypeNOTIFICATIONS captures enum value "NOTIFICATIONS"
	FeatureTypeNOTIFICATIONS FeatureType = "NOTIFICATIONS"

	// FeatureTypeNPPENABLED captures enum value "NPP_ENABLED"
	FeatureTypeNPPENABLED FeatureType = "NPP_ENABLED"

	// FeatureTypeNPPPAYID captures enum value "NPP_PAYID"
	FeatureTypeNPPPAYID FeatureType = "NPP_PAYID"

	// FeatureTypeOFFSET captures enum value "OFFSET"
	FeatureTypeOFFSET FeatureType = "OFFSET"

	// FeatureTypeOTHER captures enum value "OTHER"
	FeatureTypeOTHER FeatureType = "OTHER"

	// FeatureTypeOVERDRAFT captures enum value "OVERDRAFT"
	FeatureTypeOVERDRAFT FeatureType = "OVERDRAFT"

	// FeatureTypeREDRAW captures enum value "REDRAW"
	FeatureTypeREDRAW FeatureType = "REDRAW"

	// FeatureTypeRELATIONSHIPMANAGEMENT captures enum value "RELATIONSHIP_MANAGEMENT"
	FeatureTypeRELATIONSHIPMANAGEMENT FeatureType = "RELATIONSHIP_MANAGEMENT"

	// FeatureTypeUNLIMITEDTXNS captures enum value "UNLIMITED_TXNS"
	FeatureTypeUNLIMITEDTXNS FeatureType = "UNLIMITED_TXNS"
)

// for schema
var featureTypeEnum []interface{}

func init() {
	var res []FeatureType
	if err := json.Unmarshal([]byte(`["ADDITIONAL_CARDS","BALANCE_TRANSFERS","BILL_PAYMENT","BONUS_REWARDS","CARD_ACCESS","CASHBACK_OFFER","COMPLEMENTARY_PRODUCT_DISCOUNTS","DIGITAL_BANKING","DIGITAL_WALLET","DONATE_INTEREST","EXTRA_REPAYMENTS","FRAUD_PROTECTION","FREE_TXNS","FREE_TXNS_ALLOWANCE","GUARANTOR","INSURANCE","INSTALMENT_PLAN","INTEREST_FREE","INTEREST_FREE_TRANSFERS","LOYALTY_PROGRAM","NOTIFICATIONS","NPP_ENABLED","NPP_PAYID","OFFSET","OTHER","OVERDRAFT","REDRAW","RELATIONSHIP_MANAGEMENT","UNLIMITED_TXNS"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		featureTypeEnum = append(featureTypeEnum, v)
	}
}

func (m FeatureType) validateFeatureTypeEnum(path, location string, value FeatureType) error {
	if err := validate.EnumCase(path, location, value, featureTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this feature type
func (m FeatureType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateFeatureTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this feature type based on context it is used
func (m FeatureType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
