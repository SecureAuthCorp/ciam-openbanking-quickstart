// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// X2p101Payload X2p101Payload
//
// swagger:model X2p101Payload
type X2p101Payload struct {

	// An end to end ID for the payment created at initiation
	EndToEndID string `json:"endToEndId,omitempty"`

	// An extended string description. Only present if specified by the extensionUType field
	// Required: true
	ExtendedDescription *string `json:"extendedDescription"`

	// Purpose of the payment.  Format is defined by NPP standards for the x2p1.01 overlay service
	PurposeCode string `json:"purposeCode,omitempty"`
}

// Validate validates this x2p101 payload
func (m *X2p101Payload) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExtendedDescription(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *X2p101Payload) validateExtendedDescription(formats strfmt.Registry) error {

	if err := validate.Required("extendedDescription", "body", m.ExtendedDescription); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this x2p101 payload based on context it is used
func (m *X2p101Payload) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *X2p101Payload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *X2p101Payload) UnmarshalBinary(b []byte) error {
	var res X2p101Payload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
