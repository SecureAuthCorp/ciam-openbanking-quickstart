################################################################################
# Add the following to your hosts file, eg C:\Windows\System32\drivers\etc\hosts
#
# 127.0.0.1 mock-data-holder
# 127.0.0.1 mock-data-recipient
# 127.0.0.1 mock-register
#
# Then flush the DNS cache, on Windows use: ipconfig /flushdns
################################################################################

version: '3.0'

services:
  mock-register:
    container_name: mock-register
    image: docker.cloudentity.io/cdr-mock-register:0.5.0
    platform: linux/x86_64
    volumes:
      - ./mount/cdr/registry-seed.json:/app/admin/Data/seed-data.Release.json
    ports:
      - "7000:7000"
      - "7001:7001"
      - "7005:7005"
      - "7006:7006"
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
    depends_on:
      mssql:
        condition: service_healthy

  mssql:
    container_name: sql1
    image: 'mcr.microsoft.com/mssql/server:2019-latest'
    platform: linux/x86_64
    ports:
      - '1433:1433'
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Pa{}w0rd2019
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S . -U sa -P "Pa{}w0rd2019" -Q "SELECT 1" || exit 1
      timeout: 10s
      interval: 10s
      retries: 10

  mock-data-holder:
    container_name: mock-data-holder
    image: docker.cloudentity.io/cdr-mock-data-holder:0.0.3
    platform: linux/x86_64
    volumes:
      - ./mount/cdr/holder.json:/app/idsvr/appsettings.Production.json
      #- ./mount/cdr/holder-seed.json:/app/manage/Data/seed-data.json
      - ./mount/cdr/holder-resource-api-appsettings.json:/app/resource/appsettings.Production.json
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
      - "8003:8003"
      - "8004:8004"
      - "8005:8005"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production

  mock-data-recipient:
    container_name: mock-data-recipient
    image: docker.cloudentity.io/cdr-mock-data-recipient:0.0.14
    platform: linux/x86_64
    networks:
      default:
        aliases:
          - mock-data-recipient
    volumes:
      - ./mount/cdr/recipient.json:/app/web/appsettings.Production.json
    ports:
      - "9001:9001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
    depends_on:
      mssql:
        condition: service_healthy

  consent-page:
    image: cloudentity/openbanking-quickstart-consent-page:${VERSION}
    container_name: consent-page
    platform: linux/x86_64
    restart: always
    ports:
      - "7080:8080"
    volumes:
      - ./mount/consent-page:/data
      - ./data/ca.pem:/ca.pem
      - ./data/bank_cert.pem:/bank_cert.pem
      - ./data/bank_key.pem:/bank_key.pem
      - ./data/tpp_cert.pem:/tpp_cert.pem
      - ./data/tpp_key.pem:/tpp_key.pem
    env_file:
      - .env
    environment:
      - ISSUER_URL=${ACP_MTLS_URL}/${TENANT}/system
      - LOG_LEVEL=debug
      - SPEC=cdr
      - GIN_MODE=debug # change to release to disable gin debug
      - OTP_MODE=mock # change to custom to enable custom OTP handling
      - MFA_CLAIM=sub # for mobile use mobile_verified
      - BANK_ID_CLAIM=customer_id
      - BANK_URL=http://bank:8070
      - BANK_CLIENT_TOKEN_URL=${ACP_URL}/${TENANT}/${SERVER}/oauth2/token
      - BANK_CLIENT_ID=${INTERNAL_BANK_CLIENT_ID}
      - BANK_CLIENT_SECRET=pMPBmv62z3Jt1S4sWl2qRhOhEGPVZ9EcujGL7Xy0-E0
      - BANK_CLIENT_SCOPES=bank:accounts.basic:read,bank:accounts.detail:read
      - BANK_ACCOUNTS_ENDPOINT=http://bank:8070/internal/accounts
      - CLIENT_ID=${CONSENT_PAGE_CLIENT_ID}

    depends_on:
      configuration:
        condition: service_completed_successfully

  consent-self-service-portal:
    image: cloudentity/openbanking-quickstart-consent-self-service-portal:${VERSION}
    container_name: consent-self-service-portal
    platform: linux/x86_64
    restart: always
    ports:
      - "8085:8085"
    env_file:
      - .env
    volumes:
      - ./data/ca.pem:/ca.pem
      - ./data/bank_cert.pem:/bank_cert.pem
      - ./data/bank_key.pem:/bank_key.pem
    environment:
      - SYSTEM_CLIENT_ID=${SYSTEM_BANK_CLIENT_ID}
      - LOGIN_CLIENT_ID=${CONSENT_SELF_SERVICE_CLIENT_ID}
      - INTROSPECT_CLIENT_ID=${CONSENT_SELF_SERVICE_BACKEND_CLIENT_ID}
      - SYSTEM_ISSUER_URL=${ACP_MTLS_URL}/${TENANT}/system
      - BANK_URL=http://bank:8070
      - LOGIN_AUTHORIZATION_SERVER_URL=${ACP_URL}
      - LOGIN_AUTHORIZATION_SERVER_ID=${BANK_CUSTOMERS_SERVER}
      - LOGIN_TENANT_ID=${TENANT}
      - INTROSPECT_ISSUER_URL=${ACP_MTLS_URL}/${TENANT}/${BANK_CUSTOMERS_SERVER}
      - OPENBANKING_SERVER_ID=${SERVER}
      - SPEC=cdr
      - BANK_CLIENT_TOKEN_URL=${ACP_URL}/${TENANT}/${SERVER}/oauth2/token
      - BANK_CLIENT_ID=${INTERNAL_BANK_CLIENT_ID}
      - BANK_CLIENT_SECRET=pMPBmv62z3Jt1S4sWl2qRhOhEGPVZ9EcujGL7Xy0-E0
      - BANK_CLIENT_SCOPES=bank:accounts.basic:read,bank:accounts.detail:read
      - BANK_ACCOUNTS_ENDPOINT=http://bank:8070/internal/accounts
    depends_on:
      configuration:
        condition: service_completed_successfully

  consent-admin-portal:
    image: cloudentity/openbanking-quickstart-consent-admin-portal:${VERSION}
    container_name: consent-admin-portal
    platform: linux/x86_64
    restart: always
    ports:
      - "8086:8086"
    volumes:
      - ./data/ca.pem:/ca.pem
      - ./data/bank_cert.pem:/bank_cert.pem
      - ./data/bank_key.pem:/bank_key.pem
    environment:
      - SYSTEM_CLIENT_ID=${SYSTEM_ADMIN_CONSENT_CLIENT_ID}
      - SYSTEM_ISSUER_URL=${ACP_MTLS_URL}/${TENANT}/system
      - OPENBANKING_WORKSPACE_ID=${SERVER}
      - SPEC=cdr
      - INTROSPECT_ISSUER_URL=${ACP_MTLS_URL}/${TENANT}/bank-admins
    depends_on:
      configuration:
        condition: service_completed_successfully

  financroo-tpp:
    image: cloudentity/openbanking-quickstart-financroo-tpp:${VERSION}
    container_name: financroo-tpp
    platform: linux/x86_64
    restart: always
    ports:
      - "8091:8091"
    volumes:
      - ./data:/certs
      - ./mount/financroo-tpp:/app/data
    env_file:
      - .env
    environment:
      - UI_URL=https://${APP_HOST}:8091
      - TENANT=${TENANT}
      - GIN_MODE=debug # change to release to disable gin debug
      - SPEC=cdr
      - OPENBANKING_SERVER_ID=${SERVER}
      - BANK_URL=http://bank:8070
      - ENABLE_TLS_SERVER=true
      - CLIENT_ID=${FINANCROO_TPP_CLIENT_ID}
    depends_on:
      configuration:
        condition: service_completed_successfully

  bank:
    image: cloudentity/openbanking-quickstart-bank:${VERSION}
    container_name: bank
    platform: linux/x86_64
    restart: always
    ports:
      - "8070:8070"
    volumes:
      - ./data/ca.pem:/ca.pem
      - ./data/bank_cert.pem:/bank_cert.pem
      - ./data/bank_key.pem:/bank_key.pem
      - ./mount/bank-cdr:/app/data
    environment:
      - ISSUER_URL=${ACP_MTLS_URL}/${TENANT}/${SERVER}
      - SPEC=cdr
      - GIN_MODE=debug
      - USER_IDENTIFIER_CLAIM=customer_id
      - CLIENT_ID=${BANK_CLIENT_ID}
    depends_on:
      configuration:
        condition: service_completed_successfully

  configuration:
    container_name: configuration
    image: cloudentity/openbanking-quickstart-configuration:${VERSION}
    platform: linux/x86_64
    restart: on-failure
    volumes:
      - ./data/tpp_cert.pem:/certs/tpp_cert.pem
      - ./data/cert.ps.pem:/certs/cert.ps.pem
      - ./data/cert.es.pem:/certs/cert.es.pem
      - ./data/ca.pem:/certs/ca.pem
      - ./data/variables.yaml:/variables.yaml
      - ./data/imports/system.tmpl:/app/imports-cdr/system.tmpl
      - ./data/imports/bank-customers.tmpl:/app/imports-cdr/bank-customers.tmpl
      - ./data/imports/cdr.tmpl:/app/imports-cdr/cdr.tmpl
    command:
      - /app/main
      - --tenant-url
      - ${CONFIGURATION_TENANT_URL}
      - --tenant
      - ${CONFIGURATION_TENANT}
      - --client-id
      - ${CONFIGURATION_CLIENT_ID}
      - --client-secret
      - ${CONFIGURATION_CLIENT_SECRET}
      - --templates-dirs
      - /app/imports-cdr
      - --variables-file
      - /variables.yaml
      - --verbose


