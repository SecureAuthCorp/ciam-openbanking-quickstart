// Code generated by go-swagger; DO NOT EDIT.

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/openbanking-quickstart/generated/fdx/models"
)

// UpdatePaymentReader is a Reader for the UpdatePayment structure.
type UpdatePaymentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePaymentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePaymentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdatePaymentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdatePaymentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdatePaymentConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdatePaymentUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdatePaymentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewUpdatePaymentNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewUpdatePaymentServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdatePaymentOK creates a UpdatePaymentOK with default headers values
func NewUpdatePaymentOK() *UpdatePaymentOK {
	return &UpdatePaymentOK{}
}

/* UpdatePaymentOK describes a response with status code 200, with default header values.

Ok
*/
type UpdatePaymentOK struct {
	Payload *models.Paymententity
}

func (o *UpdatePaymentOK) Error() string {
	return fmt.Sprintf("[PATCH /payments/{paymentId}][%d] updatePaymentOK  %+v", 200, o.Payload)
}
func (o *UpdatePaymentOK) GetPayload() *models.Paymententity {
	return o.Payload
}

func (o *UpdatePaymentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Paymententity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePaymentBadRequest creates a UpdatePaymentBadRequest with default headers values
func NewUpdatePaymentBadRequest() *UpdatePaymentBadRequest {
	return &UpdatePaymentBadRequest{}
}

/* UpdatePaymentBadRequest describes a response with status code 400, with default header values.

Request is invalid
*/
type UpdatePaymentBadRequest struct {
	Payload *models.Error
}

func (o *UpdatePaymentBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /payments/{paymentId}][%d] updatePaymentBadRequest  %+v", 400, o.Payload)
}
func (o *UpdatePaymentBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdatePaymentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePaymentNotFound creates a UpdatePaymentNotFound with default headers values
func NewUpdatePaymentNotFound() *UpdatePaymentNotFound {
	return &UpdatePaymentNotFound{}
}

/* UpdatePaymentNotFound describes a response with status code 404, with default header values.

Requested payment change is invalid
*/
type UpdatePaymentNotFound struct {
	Payload *models.Error
}

func (o *UpdatePaymentNotFound) Error() string {
	return fmt.Sprintf("[PATCH /payments/{paymentId}][%d] updatePaymentNotFound  %+v", 404, o.Payload)
}
func (o *UpdatePaymentNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdatePaymentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePaymentConflict creates a UpdatePaymentConflict with default headers values
func NewUpdatePaymentConflict() *UpdatePaymentConflict {
	return &UpdatePaymentConflict{}
}

/* UpdatePaymentConflict describes a response with status code 409, with default header values.

Duplicate Request
*/
type UpdatePaymentConflict struct {
	Payload *models.Paymententity
}

func (o *UpdatePaymentConflict) Error() string {
	return fmt.Sprintf("[PATCH /payments/{paymentId}][%d] updatePaymentConflict  %+v", 409, o.Payload)
}
func (o *UpdatePaymentConflict) GetPayload() *models.Paymententity {
	return o.Payload
}

func (o *UpdatePaymentConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Paymententity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePaymentUnprocessableEntity creates a UpdatePaymentUnprocessableEntity with default headers values
func NewUpdatePaymentUnprocessableEntity() *UpdatePaymentUnprocessableEntity {
	return &UpdatePaymentUnprocessableEntity{}
}

/* UpdatePaymentUnprocessableEntity describes a response with status code 422, with default header values.

Account type not supported
*/
type UpdatePaymentUnprocessableEntity struct {
	Payload *models.Error
}

func (o *UpdatePaymentUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /payments/{paymentId}][%d] updatePaymentUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *UpdatePaymentUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdatePaymentUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePaymentInternalServerError creates a UpdatePaymentInternalServerError with default headers values
func NewUpdatePaymentInternalServerError() *UpdatePaymentInternalServerError {
	return &UpdatePaymentInternalServerError{}
}

/* UpdatePaymentInternalServerError describes a response with status code 500, with default header values.

Catch all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error
*/
type UpdatePaymentInternalServerError struct {
	Payload *models.Error
}

func (o *UpdatePaymentInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /payments/{paymentId}][%d] updatePaymentInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdatePaymentInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdatePaymentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePaymentNotImplemented creates a UpdatePaymentNotImplemented with default headers values
func NewUpdatePaymentNotImplemented() *UpdatePaymentNotImplemented {
	return &UpdatePaymentNotImplemented{}
}

/* UpdatePaymentNotImplemented describes a response with status code 501, with default header values.

Error when FdxVersion in Header is not one of those implemented at backend
*/
type UpdatePaymentNotImplemented struct {
	Payload *models.Error
}

func (o *UpdatePaymentNotImplemented) Error() string {
	return fmt.Sprintf("[PATCH /payments/{paymentId}][%d] updatePaymentNotImplemented  %+v", 501, o.Payload)
}
func (o *UpdatePaymentNotImplemented) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdatePaymentNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePaymentServiceUnavailable creates a UpdatePaymentServiceUnavailable with default headers values
func NewUpdatePaymentServiceUnavailable() *UpdatePaymentServiceUnavailable {
	return &UpdatePaymentServiceUnavailable{}
}

/* UpdatePaymentServiceUnavailable describes a response with status code 503, with default header values.

System is down for maintenance
*/
type UpdatePaymentServiceUnavailable struct {
	Payload *models.Error
}

func (o *UpdatePaymentServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /payments/{paymentId}][%d] updatePaymentServiceUnavailable  %+v", 503, o.Payload)
}
func (o *UpdatePaymentServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdatePaymentServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
