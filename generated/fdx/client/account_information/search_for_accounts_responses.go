// Code generated by go-swagger; DO NOT EDIT.

package account_information

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/openbanking-quickstart/generated/fdx/models"
)

// SearchForAccountsReader is a Reader for the SearchForAccounts structure.
type SearchForAccountsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchForAccountsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchForAccountsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchForAccountsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchForAccountsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchForAccountsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewSearchForAccountsNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewSearchForAccountsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchForAccountsOK creates a SearchForAccountsOK with default headers values
func NewSearchForAccountsOK() *SearchForAccountsOK {
	return &SearchForAccountsOK{}
}

/* SearchForAccountsOK describes a response with status code 200, with default header values.

Array of accounts (DepositAccount, LoanAccount, LocAccount, InvestmentAccount, InsuranceAccount or AnnuityAccount)
*/
type SearchForAccountsOK struct {
	Payload *models.Accountsentity
}

func (o *SearchForAccountsOK) Error() string {
	return fmt.Sprintf("[GET /accounts][%d] searchForAccountsOK  %+v", 200, o.Payload)
}
func (o *SearchForAccountsOK) GetPayload() *models.Accountsentity {
	return o.Payload
}

func (o *SearchForAccountsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Accountsentity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForAccountsBadRequest creates a SearchForAccountsBadRequest with default headers values
func NewSearchForAccountsBadRequest() *SearchForAccountsBadRequest {
	return &SearchForAccountsBadRequest{}
}

/* SearchForAccountsBadRequest describes a response with status code 400, with default header values.

Start or end date value is not in the ISO 8601 format
*/
type SearchForAccountsBadRequest struct {
	Payload *models.Error
}

func (o *SearchForAccountsBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts][%d] searchForAccountsBadRequest  %+v", 400, o.Payload)
}
func (o *SearchForAccountsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForAccountsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForAccountsNotFound creates a SearchForAccountsNotFound with default headers values
func NewSearchForAccountsNotFound() *SearchForAccountsNotFound {
	return &SearchForAccountsNotFound{}
}

/* SearchForAccountsNotFound describes a response with status code 404, with default header values.

Data not found for request parameters
*/
type SearchForAccountsNotFound struct {
	Payload *models.Error
}

func (o *SearchForAccountsNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts][%d] searchForAccountsNotFound  %+v", 404, o.Payload)
}
func (o *SearchForAccountsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForAccountsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForAccountsInternalServerError creates a SearchForAccountsInternalServerError with default headers values
func NewSearchForAccountsInternalServerError() *SearchForAccountsInternalServerError {
	return &SearchForAccountsInternalServerError{}
}

/* SearchForAccountsInternalServerError describes a response with status code 500, with default header values.

Catch all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error
*/
type SearchForAccountsInternalServerError struct {
	Payload *models.Error
}

func (o *SearchForAccountsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /accounts][%d] searchForAccountsInternalServerError  %+v", 500, o.Payload)
}
func (o *SearchForAccountsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForAccountsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForAccountsNotImplemented creates a SearchForAccountsNotImplemented with default headers values
func NewSearchForAccountsNotImplemented() *SearchForAccountsNotImplemented {
	return &SearchForAccountsNotImplemented{}
}

/* SearchForAccountsNotImplemented describes a response with status code 501, with default header values.

Error when FdxVersion in Header is not one of those implemented at backend
*/
type SearchForAccountsNotImplemented struct {
	Payload *models.Error
}

func (o *SearchForAccountsNotImplemented) Error() string {
	return fmt.Sprintf("[GET /accounts][%d] searchForAccountsNotImplemented  %+v", 501, o.Payload)
}
func (o *SearchForAccountsNotImplemented) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForAccountsNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchForAccountsServiceUnavailable creates a SearchForAccountsServiceUnavailable with default headers values
func NewSearchForAccountsServiceUnavailable() *SearchForAccountsServiceUnavailable {
	return &SearchForAccountsServiceUnavailable{}
}

/* SearchForAccountsServiceUnavailable describes a response with status code 503, with default header values.

System is down for maintenance
*/
type SearchForAccountsServiceUnavailable struct {
	Payload *models.Error
}

func (o *SearchForAccountsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /accounts][%d] searchForAccountsServiceUnavailable  %+v", 503, o.Payload)
}
func (o *SearchForAccountsServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchForAccountsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
