// Code generated by go-swagger; DO NOT EDIT.

package payee_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/openbanking-quickstart/generated/fdx/models"
)

// GetPayeeReader is a Reader for the GetPayee structure.
type GetPayeeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPayeeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPayeeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetPayeeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPayeeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewGetPayeeNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetPayeeServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPayeeOK creates a GetPayeeOK with default headers values
func NewGetPayeeOK() *GetPayeeOK {
	return &GetPayeeOK{}
}

/* GetPayeeOK describes a response with status code 200, with default header values.

Ok
*/
type GetPayeeOK struct {
	Payload *models.Payeeentity
}

func (o *GetPayeeOK) Error() string {
	return fmt.Sprintf("[GET /payees/{payeeId}][%d] getPayeeOK  %+v", 200, o.Payload)
}
func (o *GetPayeeOK) GetPayload() *models.Payeeentity {
	return o.Payload
}

func (o *GetPayeeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Payeeentity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPayeeNotFound creates a GetPayeeNotFound with default headers values
func NewGetPayeeNotFound() *GetPayeeNotFound {
	return &GetPayeeNotFound{}
}

/* GetPayeeNotFound describes a response with status code 404, with default header values.

Payee with provided ID was not found
*/
type GetPayeeNotFound struct {
	Payload *models.Error
}

func (o *GetPayeeNotFound) Error() string {
	return fmt.Sprintf("[GET /payees/{payeeId}][%d] getPayeeNotFound  %+v", 404, o.Payload)
}
func (o *GetPayeeNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPayeeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPayeeInternalServerError creates a GetPayeeInternalServerError with default headers values
func NewGetPayeeInternalServerError() *GetPayeeInternalServerError {
	return &GetPayeeInternalServerError{}
}

/* GetPayeeInternalServerError describes a response with status code 500, with default header values.

Catch all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error
*/
type GetPayeeInternalServerError struct {
	Payload *models.Error
}

func (o *GetPayeeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /payees/{payeeId}][%d] getPayeeInternalServerError  %+v", 500, o.Payload)
}
func (o *GetPayeeInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPayeeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPayeeNotImplemented creates a GetPayeeNotImplemented with default headers values
func NewGetPayeeNotImplemented() *GetPayeeNotImplemented {
	return &GetPayeeNotImplemented{}
}

/* GetPayeeNotImplemented describes a response with status code 501, with default header values.

Error when FdxVersion in Header is not one of those implemented at backend
*/
type GetPayeeNotImplemented struct {
	Payload *models.Error
}

func (o *GetPayeeNotImplemented) Error() string {
	return fmt.Sprintf("[GET /payees/{payeeId}][%d] getPayeeNotImplemented  %+v", 501, o.Payload)
}
func (o *GetPayeeNotImplemented) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPayeeNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPayeeServiceUnavailable creates a GetPayeeServiceUnavailable with default headers values
func NewGetPayeeServiceUnavailable() *GetPayeeServiceUnavailable {
	return &GetPayeeServiceUnavailable{}
}

/* GetPayeeServiceUnavailable describes a response with status code 503, with default header values.

System is down for maintenance
*/
type GetPayeeServiceUnavailable struct {
	Payload *models.Error
}

func (o *GetPayeeServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /payees/{payeeId}][%d] getPayeeServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetPayeeServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPayeeServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
