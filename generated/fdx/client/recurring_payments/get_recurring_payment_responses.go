// Code generated by go-swagger; DO NOT EDIT.

package recurring_payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/openbanking-quickstart/generated/fdx/models"
)

// GetRecurringPaymentReader is a Reader for the GetRecurringPayment structure.
type GetRecurringPaymentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRecurringPaymentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRecurringPaymentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetRecurringPaymentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRecurringPaymentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewGetRecurringPaymentNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRecurringPaymentServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRecurringPaymentOK creates a GetRecurringPaymentOK with default headers values
func NewGetRecurringPaymentOK() *GetRecurringPaymentOK {
	return &GetRecurringPaymentOK{}
}

/* GetRecurringPaymentOK describes a response with status code 200, with default header values.

Ok
*/
type GetRecurringPaymentOK struct {
	Payload *models.RecurringPaymententity
}

func (o *GetRecurringPaymentOK) Error() string {
	return fmt.Sprintf("[GET /recurring-payments/{recurringPaymentId}][%d] getRecurringPaymentOK  %+v", 200, o.Payload)
}
func (o *GetRecurringPaymentOK) GetPayload() *models.RecurringPaymententity {
	return o.Payload
}

func (o *GetRecurringPaymentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RecurringPaymententity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecurringPaymentNotFound creates a GetRecurringPaymentNotFound with default headers values
func NewGetRecurringPaymentNotFound() *GetRecurringPaymentNotFound {
	return &GetRecurringPaymentNotFound{}
}

/* GetRecurringPaymentNotFound describes a response with status code 404, with default header values.

A recurring payment with provided ID was not found
*/
type GetRecurringPaymentNotFound struct {
	Payload *models.Error
}

func (o *GetRecurringPaymentNotFound) Error() string {
	return fmt.Sprintf("[GET /recurring-payments/{recurringPaymentId}][%d] getRecurringPaymentNotFound  %+v", 404, o.Payload)
}
func (o *GetRecurringPaymentNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRecurringPaymentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecurringPaymentInternalServerError creates a GetRecurringPaymentInternalServerError with default headers values
func NewGetRecurringPaymentInternalServerError() *GetRecurringPaymentInternalServerError {
	return &GetRecurringPaymentInternalServerError{}
}

/* GetRecurringPaymentInternalServerError describes a response with status code 500, with default header values.

Catch all exception where request was not processed due to an internal outage/issue. Consider other more specific errors before using this error
*/
type GetRecurringPaymentInternalServerError struct {
	Payload *models.Error
}

func (o *GetRecurringPaymentInternalServerError) Error() string {
	return fmt.Sprintf("[GET /recurring-payments/{recurringPaymentId}][%d] getRecurringPaymentInternalServerError  %+v", 500, o.Payload)
}
func (o *GetRecurringPaymentInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRecurringPaymentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecurringPaymentNotImplemented creates a GetRecurringPaymentNotImplemented with default headers values
func NewGetRecurringPaymentNotImplemented() *GetRecurringPaymentNotImplemented {
	return &GetRecurringPaymentNotImplemented{}
}

/* GetRecurringPaymentNotImplemented describes a response with status code 501, with default header values.

Error when FdxVersion in Header is not one of those implemented at backend
*/
type GetRecurringPaymentNotImplemented struct {
	Payload *models.Error
}

func (o *GetRecurringPaymentNotImplemented) Error() string {
	return fmt.Sprintf("[GET /recurring-payments/{recurringPaymentId}][%d] getRecurringPaymentNotImplemented  %+v", 501, o.Payload)
}
func (o *GetRecurringPaymentNotImplemented) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRecurringPaymentNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecurringPaymentServiceUnavailable creates a GetRecurringPaymentServiceUnavailable with default headers values
func NewGetRecurringPaymentServiceUnavailable() *GetRecurringPaymentServiceUnavailable {
	return &GetRecurringPaymentServiceUnavailable{}
}

/* GetRecurringPaymentServiceUnavailable describes a response with status code 503, with default header values.

System is down for maintenance
*/
type GetRecurringPaymentServiceUnavailable struct {
	Payload *models.Error
}

func (o *GetRecurringPaymentServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /recurring-payments/{recurringPaymentId}][%d] getRecurringPaymentServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetRecurringPaymentServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRecurringPaymentServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
