// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// CouponMatureFrequency2 CouponMatureFrequency2
//
// When coupons mature. One of MONTHLY, QUARTERLY,  SEMIANNUAL, ANNUAL, OTHER
//
// swagger:model CouponMatureFrequency2
type CouponMatureFrequency2 string

func NewCouponMatureFrequency2(value CouponMatureFrequency2) *CouponMatureFrequency2 {
	v := value
	return &v
}

const (

	// CouponMatureFrequency2ANNUAL captures enum value "ANNUAL"
	CouponMatureFrequency2ANNUAL CouponMatureFrequency2 = "ANNUAL"

	// CouponMatureFrequency2MONTHLY captures enum value "MONTHLY"
	CouponMatureFrequency2MONTHLY CouponMatureFrequency2 = "MONTHLY"

	// CouponMatureFrequency2OTHER captures enum value "OTHER"
	CouponMatureFrequency2OTHER CouponMatureFrequency2 = "OTHER"

	// CouponMatureFrequency2QUARTERLY captures enum value "QUARTERLY"
	CouponMatureFrequency2QUARTERLY CouponMatureFrequency2 = "QUARTERLY"

	// CouponMatureFrequency2SEMIANNUAL captures enum value "SEMIANNUAL"
	CouponMatureFrequency2SEMIANNUAL CouponMatureFrequency2 = "SEMIANNUAL"
)

// for schema
var couponMatureFrequency2Enum []interface{}

func init() {
	var res []CouponMatureFrequency2
	if err := json.Unmarshal([]byte(`["ANNUAL","MONTHLY","OTHER","QUARTERLY","SEMIANNUAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		couponMatureFrequency2Enum = append(couponMatureFrequency2Enum, v)
	}
}

func (m CouponMatureFrequency2) validateCouponMatureFrequency2Enum(path, location string, value CouponMatureFrequency2) error {
	if err := validate.EnumCase(path, location, value, couponMatureFrequency2Enum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this coupon mature frequency2
func (m CouponMatureFrequency2) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCouponMatureFrequency2Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this coupon mature frequency2 based on context it is used
func (m CouponMatureFrequency2) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
