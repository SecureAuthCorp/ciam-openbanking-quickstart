// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// DebtType2 DebtType2
//
// Debt type. One of COUPON, ZERO
//
// swagger:model DebtType2
type DebtType2 string

func NewDebtType2(value DebtType2) *DebtType2 {
	v := value
	return &v
}

const (

	// DebtType2COUPON captures enum value "COUPON"
	DebtType2COUPON DebtType2 = "COUPON"

	// DebtType2ZERO captures enum value "ZERO"
	DebtType2ZERO DebtType2 = "ZERO"
)

// for schema
var debtType2Enum []interface{}

func init() {
	var res []DebtType2
	if err := json.Unmarshal([]byte(`["COUPON","ZERO"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		debtType2Enum = append(debtType2Enum, v)
	}
}

func (m DebtType2) validateDebtType2Enum(path, location string, value DebtType2) error {
	if err := validate.EnumCase(path, location, value, debtType2Enum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this debt type2
func (m DebtType2) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDebtType2Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this debt type2 based on context it is used
func (m DebtType2) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
