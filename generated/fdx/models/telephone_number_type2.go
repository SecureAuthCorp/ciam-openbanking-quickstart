// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// TelephoneNumberType2 TelephoneNumberType2
//
// Type of phone number: HOME, BUSINESS, CELL, FAX
//
// swagger:model TelephoneNumberType2
type TelephoneNumberType2 string

func NewTelephoneNumberType2(value TelephoneNumberType2) *TelephoneNumberType2 {
	v := value
	return &v
}

const (

	// TelephoneNumberType2HOME captures enum value "HOME"
	TelephoneNumberType2HOME TelephoneNumberType2 = "HOME"

	// TelephoneNumberType2BUSINESS captures enum value "BUSINESS"
	TelephoneNumberType2BUSINESS TelephoneNumberType2 = "BUSINESS"

	// TelephoneNumberType2CELL captures enum value "CELL"
	TelephoneNumberType2CELL TelephoneNumberType2 = "CELL"

	// TelephoneNumberType2FAX captures enum value "FAX"
	TelephoneNumberType2FAX TelephoneNumberType2 = "FAX"
)

// for schema
var telephoneNumberType2Enum []interface{}

func init() {
	var res []TelephoneNumberType2
	if err := json.Unmarshal([]byte(`["HOME","BUSINESS","CELL","FAX"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		telephoneNumberType2Enum = append(telephoneNumberType2Enum, v)
	}
}

func (m TelephoneNumberType2) validateTelephoneNumberType2Enum(path, location string, value TelephoneNumberType2) error {
	if err := validate.EnumCase(path, location, value, telephoneNumberType2Enum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this telephone number type2
func (m TelephoneNumberType2) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTelephoneNumberType2Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this telephone number type2 based on context it is used
func (m TelephoneNumberType2) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
