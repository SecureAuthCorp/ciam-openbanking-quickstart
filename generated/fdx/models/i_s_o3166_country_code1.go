// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ISO3166CountryCode1 ISO3166CountryCode1
//
// Country originating the Customerâ€™s taxId element
//
// swagger:model ISO3166CountryCode1
type ISO3166CountryCode1 string

func NewISO3166CountryCode1(value ISO3166CountryCode1) *ISO3166CountryCode1 {
	v := value
	return &v
}

const (

	// ISO3166CountryCode1AD captures enum value "AD"
	ISO3166CountryCode1AD ISO3166CountryCode1 = "AD"

	// ISO3166CountryCode1AE captures enum value "AE"
	ISO3166CountryCode1AE ISO3166CountryCode1 = "AE"

	// ISO3166CountryCode1AF captures enum value "AF"
	ISO3166CountryCode1AF ISO3166CountryCode1 = "AF"

	// ISO3166CountryCode1AG captures enum value "AG"
	ISO3166CountryCode1AG ISO3166CountryCode1 = "AG"

	// ISO3166CountryCode1AI captures enum value "AI"
	ISO3166CountryCode1AI ISO3166CountryCode1 = "AI"

	// ISO3166CountryCode1AL captures enum value "AL"
	ISO3166CountryCode1AL ISO3166CountryCode1 = "AL"

	// ISO3166CountryCode1AM captures enum value "AM"
	ISO3166CountryCode1AM ISO3166CountryCode1 = "AM"

	// ISO3166CountryCode1AN captures enum value "AN"
	ISO3166CountryCode1AN ISO3166CountryCode1 = "AN"

	// ISO3166CountryCode1AO captures enum value "AO"
	ISO3166CountryCode1AO ISO3166CountryCode1 = "AO"

	// ISO3166CountryCode1AQ captures enum value "AQ"
	ISO3166CountryCode1AQ ISO3166CountryCode1 = "AQ"

	// ISO3166CountryCode1AR captures enum value "AR"
	ISO3166CountryCode1AR ISO3166CountryCode1 = "AR"

	// ISO3166CountryCode1AS captures enum value "AS"
	ISO3166CountryCode1AS ISO3166CountryCode1 = "AS"

	// ISO3166CountryCode1AT captures enum value "AT"
	ISO3166CountryCode1AT ISO3166CountryCode1 = "AT"

	// ISO3166CountryCode1AU captures enum value "AU"
	ISO3166CountryCode1AU ISO3166CountryCode1 = "AU"

	// ISO3166CountryCode1AW captures enum value "AW"
	ISO3166CountryCode1AW ISO3166CountryCode1 = "AW"

	// ISO3166CountryCode1AX captures enum value "AX"
	ISO3166CountryCode1AX ISO3166CountryCode1 = "AX"

	// ISO3166CountryCode1AZ captures enum value "AZ"
	ISO3166CountryCode1AZ ISO3166CountryCode1 = "AZ"

	// ISO3166CountryCode1BA captures enum value "BA"
	ISO3166CountryCode1BA ISO3166CountryCode1 = "BA"

	// ISO3166CountryCode1BB captures enum value "BB"
	ISO3166CountryCode1BB ISO3166CountryCode1 = "BB"

	// ISO3166CountryCode1BD captures enum value "BD"
	ISO3166CountryCode1BD ISO3166CountryCode1 = "BD"

	// ISO3166CountryCode1BE captures enum value "BE"
	ISO3166CountryCode1BE ISO3166CountryCode1 = "BE"

	// ISO3166CountryCode1BF captures enum value "BF"
	ISO3166CountryCode1BF ISO3166CountryCode1 = "BF"

	// ISO3166CountryCode1BG captures enum value "BG"
	ISO3166CountryCode1BG ISO3166CountryCode1 = "BG"

	// ISO3166CountryCode1BH captures enum value "BH"
	ISO3166CountryCode1BH ISO3166CountryCode1 = "BH"

	// ISO3166CountryCode1BI captures enum value "BI"
	ISO3166CountryCode1BI ISO3166CountryCode1 = "BI"

	// ISO3166CountryCode1BJ captures enum value "BJ"
	ISO3166CountryCode1BJ ISO3166CountryCode1 = "BJ"

	// ISO3166CountryCode1BM captures enum value "BM"
	ISO3166CountryCode1BM ISO3166CountryCode1 = "BM"

	// ISO3166CountryCode1BN captures enum value "BN"
	ISO3166CountryCode1BN ISO3166CountryCode1 = "BN"

	// ISO3166CountryCode1BO captures enum value "BO"
	ISO3166CountryCode1BO ISO3166CountryCode1 = "BO"

	// ISO3166CountryCode1BR captures enum value "BR"
	ISO3166CountryCode1BR ISO3166CountryCode1 = "BR"

	// ISO3166CountryCode1BS captures enum value "BS"
	ISO3166CountryCode1BS ISO3166CountryCode1 = "BS"

	// ISO3166CountryCode1BT captures enum value "BT"
	ISO3166CountryCode1BT ISO3166CountryCode1 = "BT"

	// ISO3166CountryCode1BV captures enum value "BV"
	ISO3166CountryCode1BV ISO3166CountryCode1 = "BV"

	// ISO3166CountryCode1BW captures enum value "BW"
	ISO3166CountryCode1BW ISO3166CountryCode1 = "BW"

	// ISO3166CountryCode1BY captures enum value "BY"
	ISO3166CountryCode1BY ISO3166CountryCode1 = "BY"

	// ISO3166CountryCode1BZ captures enum value "BZ"
	ISO3166CountryCode1BZ ISO3166CountryCode1 = "BZ"

	// ISO3166CountryCode1CA captures enum value "CA"
	ISO3166CountryCode1CA ISO3166CountryCode1 = "CA"

	// ISO3166CountryCode1CC captures enum value "CC"
	ISO3166CountryCode1CC ISO3166CountryCode1 = "CC"

	// ISO3166CountryCode1CD captures enum value "CD"
	ISO3166CountryCode1CD ISO3166CountryCode1 = "CD"

	// ISO3166CountryCode1CF captures enum value "CF"
	ISO3166CountryCode1CF ISO3166CountryCode1 = "CF"

	// ISO3166CountryCode1CG captures enum value "CG"
	ISO3166CountryCode1CG ISO3166CountryCode1 = "CG"

	// ISO3166CountryCode1CH captures enum value "CH"
	ISO3166CountryCode1CH ISO3166CountryCode1 = "CH"

	// ISO3166CountryCode1CI captures enum value "CI"
	ISO3166CountryCode1CI ISO3166CountryCode1 = "CI"

	// ISO3166CountryCode1CK captures enum value "CK"
	ISO3166CountryCode1CK ISO3166CountryCode1 = "CK"

	// ISO3166CountryCode1CL captures enum value "CL"
	ISO3166CountryCode1CL ISO3166CountryCode1 = "CL"

	// ISO3166CountryCode1CM captures enum value "CM"
	ISO3166CountryCode1CM ISO3166CountryCode1 = "CM"

	// ISO3166CountryCode1CN captures enum value "CN"
	ISO3166CountryCode1CN ISO3166CountryCode1 = "CN"

	// ISO3166CountryCode1CO captures enum value "CO"
	ISO3166CountryCode1CO ISO3166CountryCode1 = "CO"

	// ISO3166CountryCode1CR captures enum value "CR"
	ISO3166CountryCode1CR ISO3166CountryCode1 = "CR"

	// ISO3166CountryCode1CS captures enum value "CS"
	ISO3166CountryCode1CS ISO3166CountryCode1 = "CS"

	// ISO3166CountryCode1CU captures enum value "CU"
	ISO3166CountryCode1CU ISO3166CountryCode1 = "CU"

	// ISO3166CountryCode1CV captures enum value "CV"
	ISO3166CountryCode1CV ISO3166CountryCode1 = "CV"

	// ISO3166CountryCode1CX captures enum value "CX"
	ISO3166CountryCode1CX ISO3166CountryCode1 = "CX"

	// ISO3166CountryCode1CY captures enum value "CY"
	ISO3166CountryCode1CY ISO3166CountryCode1 = "CY"

	// ISO3166CountryCode1CZ captures enum value "CZ"
	ISO3166CountryCode1CZ ISO3166CountryCode1 = "CZ"

	// ISO3166CountryCode1DE captures enum value "DE"
	ISO3166CountryCode1DE ISO3166CountryCode1 = "DE"

	// ISO3166CountryCode1DJ captures enum value "DJ"
	ISO3166CountryCode1DJ ISO3166CountryCode1 = "DJ"

	// ISO3166CountryCode1DK captures enum value "DK"
	ISO3166CountryCode1DK ISO3166CountryCode1 = "DK"

	// ISO3166CountryCode1DM captures enum value "DM"
	ISO3166CountryCode1DM ISO3166CountryCode1 = "DM"

	// ISO3166CountryCode1DO captures enum value "DO"
	ISO3166CountryCode1DO ISO3166CountryCode1 = "DO"

	// ISO3166CountryCode1DZ captures enum value "DZ"
	ISO3166CountryCode1DZ ISO3166CountryCode1 = "DZ"

	// ISO3166CountryCode1EC captures enum value "EC"
	ISO3166CountryCode1EC ISO3166CountryCode1 = "EC"

	// ISO3166CountryCode1EE captures enum value "EE"
	ISO3166CountryCode1EE ISO3166CountryCode1 = "EE"

	// ISO3166CountryCode1EG captures enum value "EG"
	ISO3166CountryCode1EG ISO3166CountryCode1 = "EG"

	// ISO3166CountryCode1EH captures enum value "EH"
	ISO3166CountryCode1EH ISO3166CountryCode1 = "EH"

	// ISO3166CountryCode1ER captures enum value "ER"
	ISO3166CountryCode1ER ISO3166CountryCode1 = "ER"

	// ISO3166CountryCode1ES captures enum value "ES"
	ISO3166CountryCode1ES ISO3166CountryCode1 = "ES"

	// ISO3166CountryCode1ET captures enum value "ET"
	ISO3166CountryCode1ET ISO3166CountryCode1 = "ET"

	// ISO3166CountryCode1FI captures enum value "FI"
	ISO3166CountryCode1FI ISO3166CountryCode1 = "FI"

	// ISO3166CountryCode1FJ captures enum value "FJ"
	ISO3166CountryCode1FJ ISO3166CountryCode1 = "FJ"

	// ISO3166CountryCode1FK captures enum value "FK"
	ISO3166CountryCode1FK ISO3166CountryCode1 = "FK"

	// ISO3166CountryCode1FM captures enum value "FM"
	ISO3166CountryCode1FM ISO3166CountryCode1 = "FM"

	// ISO3166CountryCode1FO captures enum value "FO"
	ISO3166CountryCode1FO ISO3166CountryCode1 = "FO"

	// ISO3166CountryCode1FR captures enum value "FR"
	ISO3166CountryCode1FR ISO3166CountryCode1 = "FR"

	// ISO3166CountryCode1GA captures enum value "GA"
	ISO3166CountryCode1GA ISO3166CountryCode1 = "GA"

	// ISO3166CountryCode1GB captures enum value "GB"
	ISO3166CountryCode1GB ISO3166CountryCode1 = "GB"

	// ISO3166CountryCode1GD captures enum value "GD"
	ISO3166CountryCode1GD ISO3166CountryCode1 = "GD"

	// ISO3166CountryCode1GE captures enum value "GE"
	ISO3166CountryCode1GE ISO3166CountryCode1 = "GE"

	// ISO3166CountryCode1GF captures enum value "GF"
	ISO3166CountryCode1GF ISO3166CountryCode1 = "GF"

	// ISO3166CountryCode1GG captures enum value "GG"
	ISO3166CountryCode1GG ISO3166CountryCode1 = "GG"

	// ISO3166CountryCode1GH captures enum value "GH"
	ISO3166CountryCode1GH ISO3166CountryCode1 = "GH"

	// ISO3166CountryCode1GI captures enum value "GI"
	ISO3166CountryCode1GI ISO3166CountryCode1 = "GI"

	// ISO3166CountryCode1GL captures enum value "GL"
	ISO3166CountryCode1GL ISO3166CountryCode1 = "GL"

	// ISO3166CountryCode1GM captures enum value "GM"
	ISO3166CountryCode1GM ISO3166CountryCode1 = "GM"

	// ISO3166CountryCode1GN captures enum value "GN"
	ISO3166CountryCode1GN ISO3166CountryCode1 = "GN"

	// ISO3166CountryCode1GP captures enum value "GP"
	ISO3166CountryCode1GP ISO3166CountryCode1 = "GP"

	// ISO3166CountryCode1GQ captures enum value "GQ"
	ISO3166CountryCode1GQ ISO3166CountryCode1 = "GQ"

	// ISO3166CountryCode1GR captures enum value "GR"
	ISO3166CountryCode1GR ISO3166CountryCode1 = "GR"

	// ISO3166CountryCode1GS captures enum value "GS"
	ISO3166CountryCode1GS ISO3166CountryCode1 = "GS"

	// ISO3166CountryCode1GT captures enum value "GT"
	ISO3166CountryCode1GT ISO3166CountryCode1 = "GT"

	// ISO3166CountryCode1GU captures enum value "GU"
	ISO3166CountryCode1GU ISO3166CountryCode1 = "GU"

	// ISO3166CountryCode1GW captures enum value "GW"
	ISO3166CountryCode1GW ISO3166CountryCode1 = "GW"

	// ISO3166CountryCode1GY captures enum value "GY"
	ISO3166CountryCode1GY ISO3166CountryCode1 = "GY"

	// ISO3166CountryCode1HK captures enum value "HK"
	ISO3166CountryCode1HK ISO3166CountryCode1 = "HK"

	// ISO3166CountryCode1HM captures enum value "HM"
	ISO3166CountryCode1HM ISO3166CountryCode1 = "HM"

	// ISO3166CountryCode1HN captures enum value "HN"
	ISO3166CountryCode1HN ISO3166CountryCode1 = "HN"

	// ISO3166CountryCode1HR captures enum value "HR"
	ISO3166CountryCode1HR ISO3166CountryCode1 = "HR"

	// ISO3166CountryCode1HT captures enum value "HT"
	ISO3166CountryCode1HT ISO3166CountryCode1 = "HT"

	// ISO3166CountryCode1HU captures enum value "HU"
	ISO3166CountryCode1HU ISO3166CountryCode1 = "HU"

	// ISO3166CountryCode1ID captures enum value "ID"
	ISO3166CountryCode1ID ISO3166CountryCode1 = "ID"

	// ISO3166CountryCode1IE captures enum value "IE"
	ISO3166CountryCode1IE ISO3166CountryCode1 = "IE"

	// ISO3166CountryCode1IL captures enum value "IL"
	ISO3166CountryCode1IL ISO3166CountryCode1 = "IL"

	// ISO3166CountryCode1IM captures enum value "IM"
	ISO3166CountryCode1IM ISO3166CountryCode1 = "IM"

	// ISO3166CountryCode1IN captures enum value "IN"
	ISO3166CountryCode1IN ISO3166CountryCode1 = "IN"

	// ISO3166CountryCode1IO captures enum value "IO"
	ISO3166CountryCode1IO ISO3166CountryCode1 = "IO"

	// ISO3166CountryCode1IQ captures enum value "IQ"
	ISO3166CountryCode1IQ ISO3166CountryCode1 = "IQ"

	// ISO3166CountryCode1IR captures enum value "IR"
	ISO3166CountryCode1IR ISO3166CountryCode1 = "IR"

	// ISO3166CountryCode1IS captures enum value "IS"
	ISO3166CountryCode1IS ISO3166CountryCode1 = "IS"

	// ISO3166CountryCode1IT captures enum value "IT"
	ISO3166CountryCode1IT ISO3166CountryCode1 = "IT"

	// ISO3166CountryCode1JE captures enum value "JE"
	ISO3166CountryCode1JE ISO3166CountryCode1 = "JE"

	// ISO3166CountryCode1JM captures enum value "JM"
	ISO3166CountryCode1JM ISO3166CountryCode1 = "JM"

	// ISO3166CountryCode1JO captures enum value "JO"
	ISO3166CountryCode1JO ISO3166CountryCode1 = "JO"

	// ISO3166CountryCode1JP captures enum value "JP"
	ISO3166CountryCode1JP ISO3166CountryCode1 = "JP"

	// ISO3166CountryCode1KE captures enum value "KE"
	ISO3166CountryCode1KE ISO3166CountryCode1 = "KE"

	// ISO3166CountryCode1KG captures enum value "KG"
	ISO3166CountryCode1KG ISO3166CountryCode1 = "KG"

	// ISO3166CountryCode1KH captures enum value "KH"
	ISO3166CountryCode1KH ISO3166CountryCode1 = "KH"

	// ISO3166CountryCode1KI captures enum value "KI"
	ISO3166CountryCode1KI ISO3166CountryCode1 = "KI"

	// ISO3166CountryCode1KM captures enum value "KM"
	ISO3166CountryCode1KM ISO3166CountryCode1 = "KM"

	// ISO3166CountryCode1KN captures enum value "KN"
	ISO3166CountryCode1KN ISO3166CountryCode1 = "KN"

	// ISO3166CountryCode1KP captures enum value "KP"
	ISO3166CountryCode1KP ISO3166CountryCode1 = "KP"

	// ISO3166CountryCode1KR captures enum value "KR"
	ISO3166CountryCode1KR ISO3166CountryCode1 = "KR"

	// ISO3166CountryCode1KW captures enum value "KW"
	ISO3166CountryCode1KW ISO3166CountryCode1 = "KW"

	// ISO3166CountryCode1KY captures enum value "KY"
	ISO3166CountryCode1KY ISO3166CountryCode1 = "KY"

	// ISO3166CountryCode1KZ captures enum value "KZ"
	ISO3166CountryCode1KZ ISO3166CountryCode1 = "KZ"

	// ISO3166CountryCode1LA captures enum value "LA"
	ISO3166CountryCode1LA ISO3166CountryCode1 = "LA"

	// ISO3166CountryCode1LB captures enum value "LB"
	ISO3166CountryCode1LB ISO3166CountryCode1 = "LB"

	// ISO3166CountryCode1LC captures enum value "LC"
	ISO3166CountryCode1LC ISO3166CountryCode1 = "LC"

	// ISO3166CountryCode1LI captures enum value "LI"
	ISO3166CountryCode1LI ISO3166CountryCode1 = "LI"

	// ISO3166CountryCode1LK captures enum value "LK"
	ISO3166CountryCode1LK ISO3166CountryCode1 = "LK"

	// ISO3166CountryCode1LR captures enum value "LR"
	ISO3166CountryCode1LR ISO3166CountryCode1 = "LR"

	// ISO3166CountryCode1LS captures enum value "LS"
	ISO3166CountryCode1LS ISO3166CountryCode1 = "LS"

	// ISO3166CountryCode1LT captures enum value "LT"
	ISO3166CountryCode1LT ISO3166CountryCode1 = "LT"

	// ISO3166CountryCode1LU captures enum value "LU"
	ISO3166CountryCode1LU ISO3166CountryCode1 = "LU"

	// ISO3166CountryCode1LV captures enum value "LV"
	ISO3166CountryCode1LV ISO3166CountryCode1 = "LV"

	// ISO3166CountryCode1LY captures enum value "LY"
	ISO3166CountryCode1LY ISO3166CountryCode1 = "LY"

	// ISO3166CountryCode1MA captures enum value "MA"
	ISO3166CountryCode1MA ISO3166CountryCode1 = "MA"

	// ISO3166CountryCode1MC captures enum value "MC"
	ISO3166CountryCode1MC ISO3166CountryCode1 = "MC"

	// ISO3166CountryCode1MD captures enum value "MD"
	ISO3166CountryCode1MD ISO3166CountryCode1 = "MD"

	// ISO3166CountryCode1MG captures enum value "MG"
	ISO3166CountryCode1MG ISO3166CountryCode1 = "MG"

	// ISO3166CountryCode1MH captures enum value "MH"
	ISO3166CountryCode1MH ISO3166CountryCode1 = "MH"

	// ISO3166CountryCode1MK captures enum value "MK"
	ISO3166CountryCode1MK ISO3166CountryCode1 = "MK"

	// ISO3166CountryCode1ML captures enum value "ML"
	ISO3166CountryCode1ML ISO3166CountryCode1 = "ML"

	// ISO3166CountryCode1MM captures enum value "MM"
	ISO3166CountryCode1MM ISO3166CountryCode1 = "MM"

	// ISO3166CountryCode1MN captures enum value "MN"
	ISO3166CountryCode1MN ISO3166CountryCode1 = "MN"

	// ISO3166CountryCode1MO captures enum value "MO"
	ISO3166CountryCode1MO ISO3166CountryCode1 = "MO"

	// ISO3166CountryCode1MP captures enum value "MP"
	ISO3166CountryCode1MP ISO3166CountryCode1 = "MP"

	// ISO3166CountryCode1MQ captures enum value "MQ"
	ISO3166CountryCode1MQ ISO3166CountryCode1 = "MQ"

	// ISO3166CountryCode1MR captures enum value "MR"
	ISO3166CountryCode1MR ISO3166CountryCode1 = "MR"

	// ISO3166CountryCode1MS captures enum value "MS"
	ISO3166CountryCode1MS ISO3166CountryCode1 = "MS"

	// ISO3166CountryCode1MT captures enum value "MT"
	ISO3166CountryCode1MT ISO3166CountryCode1 = "MT"

	// ISO3166CountryCode1MU captures enum value "MU"
	ISO3166CountryCode1MU ISO3166CountryCode1 = "MU"

	// ISO3166CountryCode1MV captures enum value "MV"
	ISO3166CountryCode1MV ISO3166CountryCode1 = "MV"

	// ISO3166CountryCode1MW captures enum value "MW"
	ISO3166CountryCode1MW ISO3166CountryCode1 = "MW"

	// ISO3166CountryCode1MX captures enum value "MX"
	ISO3166CountryCode1MX ISO3166CountryCode1 = "MX"

	// ISO3166CountryCode1MY captures enum value "MY"
	ISO3166CountryCode1MY ISO3166CountryCode1 = "MY"

	// ISO3166CountryCode1MZ captures enum value "MZ"
	ISO3166CountryCode1MZ ISO3166CountryCode1 = "MZ"

	// ISO3166CountryCode1NA captures enum value "NA"
	ISO3166CountryCode1NA ISO3166CountryCode1 = "NA"

	// ISO3166CountryCode1NC captures enum value "NC"
	ISO3166CountryCode1NC ISO3166CountryCode1 = "NC"

	// ISO3166CountryCode1NE captures enum value "NE"
	ISO3166CountryCode1NE ISO3166CountryCode1 = "NE"

	// ISO3166CountryCode1NF captures enum value "NF"
	ISO3166CountryCode1NF ISO3166CountryCode1 = "NF"

	// ISO3166CountryCode1NG captures enum value "NG"
	ISO3166CountryCode1NG ISO3166CountryCode1 = "NG"

	// ISO3166CountryCode1NI captures enum value "NI"
	ISO3166CountryCode1NI ISO3166CountryCode1 = "NI"

	// ISO3166CountryCode1NL captures enum value "NL"
	ISO3166CountryCode1NL ISO3166CountryCode1 = "NL"

	// ISO3166CountryCode1NO captures enum value "NO"
	ISO3166CountryCode1NO ISO3166CountryCode1 = "NO"

	// ISO3166CountryCode1NP captures enum value "NP"
	ISO3166CountryCode1NP ISO3166CountryCode1 = "NP"

	// ISO3166CountryCode1NR captures enum value "NR"
	ISO3166CountryCode1NR ISO3166CountryCode1 = "NR"

	// ISO3166CountryCode1NU captures enum value "NU"
	ISO3166CountryCode1NU ISO3166CountryCode1 = "NU"

	// ISO3166CountryCode1NZ captures enum value "NZ"
	ISO3166CountryCode1NZ ISO3166CountryCode1 = "NZ"

	// ISO3166CountryCode1OM captures enum value "OM"
	ISO3166CountryCode1OM ISO3166CountryCode1 = "OM"

	// ISO3166CountryCode1PA captures enum value "PA"
	ISO3166CountryCode1PA ISO3166CountryCode1 = "PA"

	// ISO3166CountryCode1PE captures enum value "PE"
	ISO3166CountryCode1PE ISO3166CountryCode1 = "PE"

	// ISO3166CountryCode1PF captures enum value "PF"
	ISO3166CountryCode1PF ISO3166CountryCode1 = "PF"

	// ISO3166CountryCode1PG captures enum value "PG"
	ISO3166CountryCode1PG ISO3166CountryCode1 = "PG"

	// ISO3166CountryCode1PH captures enum value "PH"
	ISO3166CountryCode1PH ISO3166CountryCode1 = "PH"

	// ISO3166CountryCode1PK captures enum value "PK"
	ISO3166CountryCode1PK ISO3166CountryCode1 = "PK"

	// ISO3166CountryCode1PL captures enum value "PL"
	ISO3166CountryCode1PL ISO3166CountryCode1 = "PL"

	// ISO3166CountryCode1PM captures enum value "PM"
	ISO3166CountryCode1PM ISO3166CountryCode1 = "PM"

	// ISO3166CountryCode1PN captures enum value "PN"
	ISO3166CountryCode1PN ISO3166CountryCode1 = "PN"

	// ISO3166CountryCode1PR captures enum value "PR"
	ISO3166CountryCode1PR ISO3166CountryCode1 = "PR"

	// ISO3166CountryCode1PS captures enum value "PS"
	ISO3166CountryCode1PS ISO3166CountryCode1 = "PS"

	// ISO3166CountryCode1PT captures enum value "PT"
	ISO3166CountryCode1PT ISO3166CountryCode1 = "PT"

	// ISO3166CountryCode1PW captures enum value "PW"
	ISO3166CountryCode1PW ISO3166CountryCode1 = "PW"

	// ISO3166CountryCode1PY captures enum value "PY"
	ISO3166CountryCode1PY ISO3166CountryCode1 = "PY"

	// ISO3166CountryCode1QA captures enum value "QA"
	ISO3166CountryCode1QA ISO3166CountryCode1 = "QA"

	// ISO3166CountryCode1RE captures enum value "RE"
	ISO3166CountryCode1RE ISO3166CountryCode1 = "RE"

	// ISO3166CountryCode1RO captures enum value "RO"
	ISO3166CountryCode1RO ISO3166CountryCode1 = "RO"

	// ISO3166CountryCode1RU captures enum value "RU"
	ISO3166CountryCode1RU ISO3166CountryCode1 = "RU"

	// ISO3166CountryCode1RW captures enum value "RW"
	ISO3166CountryCode1RW ISO3166CountryCode1 = "RW"

	// ISO3166CountryCode1SA captures enum value "SA"
	ISO3166CountryCode1SA ISO3166CountryCode1 = "SA"

	// ISO3166CountryCode1SB captures enum value "SB"
	ISO3166CountryCode1SB ISO3166CountryCode1 = "SB"

	// ISO3166CountryCode1SC captures enum value "SC"
	ISO3166CountryCode1SC ISO3166CountryCode1 = "SC"

	// ISO3166CountryCode1SD captures enum value "SD"
	ISO3166CountryCode1SD ISO3166CountryCode1 = "SD"

	// ISO3166CountryCode1SE captures enum value "SE"
	ISO3166CountryCode1SE ISO3166CountryCode1 = "SE"

	// ISO3166CountryCode1SG captures enum value "SG"
	ISO3166CountryCode1SG ISO3166CountryCode1 = "SG"

	// ISO3166CountryCode1SH captures enum value "SH"
	ISO3166CountryCode1SH ISO3166CountryCode1 = "SH"

	// ISO3166CountryCode1SI captures enum value "SI"
	ISO3166CountryCode1SI ISO3166CountryCode1 = "SI"

	// ISO3166CountryCode1SJ captures enum value "SJ"
	ISO3166CountryCode1SJ ISO3166CountryCode1 = "SJ"

	// ISO3166CountryCode1SK captures enum value "SK"
	ISO3166CountryCode1SK ISO3166CountryCode1 = "SK"

	// ISO3166CountryCode1SL captures enum value "SL"
	ISO3166CountryCode1SL ISO3166CountryCode1 = "SL"

	// ISO3166CountryCode1SM captures enum value "SM"
	ISO3166CountryCode1SM ISO3166CountryCode1 = "SM"

	// ISO3166CountryCode1SN captures enum value "SN"
	ISO3166CountryCode1SN ISO3166CountryCode1 = "SN"

	// ISO3166CountryCode1SO captures enum value "SO"
	ISO3166CountryCode1SO ISO3166CountryCode1 = "SO"

	// ISO3166CountryCode1SR captures enum value "SR"
	ISO3166CountryCode1SR ISO3166CountryCode1 = "SR"

	// ISO3166CountryCode1ST captures enum value "ST"
	ISO3166CountryCode1ST ISO3166CountryCode1 = "ST"

	// ISO3166CountryCode1SV captures enum value "SV"
	ISO3166CountryCode1SV ISO3166CountryCode1 = "SV"

	// ISO3166CountryCode1SY captures enum value "SY"
	ISO3166CountryCode1SY ISO3166CountryCode1 = "SY"

	// ISO3166CountryCode1SZ captures enum value "SZ"
	ISO3166CountryCode1SZ ISO3166CountryCode1 = "SZ"

	// ISO3166CountryCode1TC captures enum value "TC"
	ISO3166CountryCode1TC ISO3166CountryCode1 = "TC"

	// ISO3166CountryCode1TD captures enum value "TD"
	ISO3166CountryCode1TD ISO3166CountryCode1 = "TD"

	// ISO3166CountryCode1TF captures enum value "TF"
	ISO3166CountryCode1TF ISO3166CountryCode1 = "TF"

	// ISO3166CountryCode1TG captures enum value "TG"
	ISO3166CountryCode1TG ISO3166CountryCode1 = "TG"

	// ISO3166CountryCode1TH captures enum value "TH"
	ISO3166CountryCode1TH ISO3166CountryCode1 = "TH"

	// ISO3166CountryCode1TJ captures enum value "TJ"
	ISO3166CountryCode1TJ ISO3166CountryCode1 = "TJ"

	// ISO3166CountryCode1TK captures enum value "TK"
	ISO3166CountryCode1TK ISO3166CountryCode1 = "TK"

	// ISO3166CountryCode1TL captures enum value "TL"
	ISO3166CountryCode1TL ISO3166CountryCode1 = "TL"

	// ISO3166CountryCode1TM captures enum value "TM"
	ISO3166CountryCode1TM ISO3166CountryCode1 = "TM"

	// ISO3166CountryCode1TN captures enum value "TN"
	ISO3166CountryCode1TN ISO3166CountryCode1 = "TN"

	// ISO3166CountryCode1TO captures enum value "TO"
	ISO3166CountryCode1TO ISO3166CountryCode1 = "TO"

	// ISO3166CountryCode1TR captures enum value "TR"
	ISO3166CountryCode1TR ISO3166CountryCode1 = "TR"

	// ISO3166CountryCode1TT captures enum value "TT"
	ISO3166CountryCode1TT ISO3166CountryCode1 = "TT"

	// ISO3166CountryCode1TV captures enum value "TV"
	ISO3166CountryCode1TV ISO3166CountryCode1 = "TV"

	// ISO3166CountryCode1TW captures enum value "TW"
	ISO3166CountryCode1TW ISO3166CountryCode1 = "TW"

	// ISO3166CountryCode1TZ captures enum value "TZ"
	ISO3166CountryCode1TZ ISO3166CountryCode1 = "TZ"

	// ISO3166CountryCode1UA captures enum value "UA"
	ISO3166CountryCode1UA ISO3166CountryCode1 = "UA"

	// ISO3166CountryCode1UG captures enum value "UG"
	ISO3166CountryCode1UG ISO3166CountryCode1 = "UG"

	// ISO3166CountryCode1UM captures enum value "UM"
	ISO3166CountryCode1UM ISO3166CountryCode1 = "UM"

	// ISO3166CountryCode1US captures enum value "US"
	ISO3166CountryCode1US ISO3166CountryCode1 = "US"

	// ISO3166CountryCode1UY captures enum value "UY"
	ISO3166CountryCode1UY ISO3166CountryCode1 = "UY"

	// ISO3166CountryCode1UZ captures enum value "UZ"
	ISO3166CountryCode1UZ ISO3166CountryCode1 = "UZ"

	// ISO3166CountryCode1VA captures enum value "VA"
	ISO3166CountryCode1VA ISO3166CountryCode1 = "VA"

	// ISO3166CountryCode1VC captures enum value "VC"
	ISO3166CountryCode1VC ISO3166CountryCode1 = "VC"

	// ISO3166CountryCode1VE captures enum value "VE"
	ISO3166CountryCode1VE ISO3166CountryCode1 = "VE"

	// ISO3166CountryCode1VG captures enum value "VG"
	ISO3166CountryCode1VG ISO3166CountryCode1 = "VG"

	// ISO3166CountryCode1VI captures enum value "VI"
	ISO3166CountryCode1VI ISO3166CountryCode1 = "VI"

	// ISO3166CountryCode1VN captures enum value "VN"
	ISO3166CountryCode1VN ISO3166CountryCode1 = "VN"

	// ISO3166CountryCode1VU captures enum value "VU"
	ISO3166CountryCode1VU ISO3166CountryCode1 = "VU"

	// ISO3166CountryCode1WF captures enum value "WF"
	ISO3166CountryCode1WF ISO3166CountryCode1 = "WF"

	// ISO3166CountryCode1WS captures enum value "WS"
	ISO3166CountryCode1WS ISO3166CountryCode1 = "WS"

	// ISO3166CountryCode1YE captures enum value "YE"
	ISO3166CountryCode1YE ISO3166CountryCode1 = "YE"

	// ISO3166CountryCode1YT captures enum value "YT"
	ISO3166CountryCode1YT ISO3166CountryCode1 = "YT"

	// ISO3166CountryCode1ZA captures enum value "ZA"
	ISO3166CountryCode1ZA ISO3166CountryCode1 = "ZA"

	// ISO3166CountryCode1ZM captures enum value "ZM"
	ISO3166CountryCode1ZM ISO3166CountryCode1 = "ZM"

	// ISO3166CountryCode1ZW captures enum value "ZW"
	ISO3166CountryCode1ZW ISO3166CountryCode1 = "ZW"
)

// for schema
var iSO3166CountryCode1Enum []interface{}

func init() {
	var res []ISO3166CountryCode1
	if err := json.Unmarshal([]byte(`["AD","AE","AF","AG","AI","AL","AM","AN","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BM","BN","BO","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CS","CU","CV","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","ST","SV","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		iSO3166CountryCode1Enum = append(iSO3166CountryCode1Enum, v)
	}
}

func (m ISO3166CountryCode1) validateISO3166CountryCode1Enum(path, location string, value ISO3166CountryCode1) error {
	if err := validate.EnumCase(path, location, value, iSO3166CountryCode1Enum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this i s o3166 country code1
func (m ISO3166CountryCode1) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateISO3166CountryCode1Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this i s o3166 country code1 based on context it is used
func (m ISO3166CountryCode1) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
