// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PolicyProductType2 PolicyProductType2
//
// The type of annuity product, e.g. Fixed or Variable
//
// swagger:model PolicyProductType2
type PolicyProductType2 string

func NewPolicyProductType2(value PolicyProductType2) *PolicyProductType2 {
	v := value
	return &v
}

const (

	// PolicyProductType2FIXED captures enum value "FIXED"
	PolicyProductType2FIXED PolicyProductType2 = "FIXED"

	// PolicyProductType2VARIABLE captures enum value "VARIABLE"
	PolicyProductType2VARIABLE PolicyProductType2 = "VARIABLE"
)

// for schema
var policyProductType2Enum []interface{}

func init() {
	var res []PolicyProductType2
	if err := json.Unmarshal([]byte(`["FIXED","VARIABLE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		policyProductType2Enum = append(policyProductType2Enum, v)
	}
}

func (m PolicyProductType2) validatePolicyProductType2Enum(path, location string, value PolicyProductType2) error {
	if err := validate.EnumCase(path, location, value, policyProductType2Enum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this policy product type2
func (m PolicyProductType2) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePolicyProductType2Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this policy product type2 based on context it is used
func (m PolicyProductType2) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
