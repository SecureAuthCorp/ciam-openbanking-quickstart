// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// BalanceType BalanceType
//
// <br/> * `ASSET`: Positive transaction amount increases balance<br/> * `LIABILITY`: Positive transaction amount decreases balance
//
// swagger:model BalanceType
type BalanceType string

func NewBalanceType(value BalanceType) *BalanceType {
	v := value
	return &v
}

const (

	// BalanceTypeASSET captures enum value "ASSET"
	BalanceTypeASSET BalanceType = "ASSET"

	// BalanceTypeLIABILITY captures enum value "LIABILITY"
	BalanceTypeLIABILITY BalanceType = "LIABILITY"
)

// for schema
var balanceTypeEnum []interface{}

func init() {
	var res []BalanceType
	if err := json.Unmarshal([]byte(`["ASSET","LIABILITY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		balanceTypeEnum = append(balanceTypeEnum, v)
	}
}

func (m BalanceType) validateBalanceTypeEnum(path, location string, value BalanceType) error {
	if err := validate.EnumCase(path, location, value, balanceTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this balance type
func (m BalanceType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBalanceTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this balance type based on context it is used
func (m BalanceType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
