// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// HeldInAccount HeldInAccount
//
// The type of holdings of an investment account
//
// swagger:model HeldInAccount
type HeldInAccount string

func NewHeldInAccount(value HeldInAccount) *HeldInAccount {
	v := value
	return &v
}

const (

	// HeldInAccountCASH captures enum value "CASH"
	HeldInAccountCASH HeldInAccount = "CASH"

	// HeldInAccountMARGIN captures enum value "MARGIN"
	HeldInAccountMARGIN HeldInAccount = "MARGIN"

	// HeldInAccountOTHER captures enum value "OTHER"
	HeldInAccountOTHER HeldInAccount = "OTHER"

	// HeldInAccountSHORT captures enum value "SHORT"
	HeldInAccountSHORT HeldInAccount = "SHORT"
)

// for schema
var heldInAccountEnum []interface{}

func init() {
	var res []HeldInAccount
	if err := json.Unmarshal([]byte(`["CASH","MARGIN","OTHER","SHORT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		heldInAccountEnum = append(heldInAccountEnum, v)
	}
}

func (m HeldInAccount) validateHeldInAccountEnum(path, location string, value HeldInAccount) error {
	if err := validate.EnumCase(path, location, value, heldInAccountEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this held in account
func (m HeldInAccount) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateHeldInAccountEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this held in account based on context it is used
func (m HeldInAccount) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
