// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AnnuityProductType AnnuityProductType
//
// The type of an annuity product. Deprecated, will be removed in v6.0
//
// swagger:model AnnuityProductType
type AnnuityProductType string

func NewAnnuityProductType(value AnnuityProductType) *AnnuityProductType {
	v := value
	return &v
}

const (

	// AnnuityProductTypeCURRENCY captures enum value "CURRENCY"
	AnnuityProductTypeCURRENCY AnnuityProductType = "CURRENCY"

	// AnnuityProductTypeSHARES captures enum value "SHARES"
	AnnuityProductTypeSHARES AnnuityProductType = "SHARES"
)

// for schema
var annuityProductTypeEnum []interface{}

func init() {
	var res []AnnuityProductType
	if err := json.Unmarshal([]byte(`["CURRENCY","SHARES"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		annuityProductTypeEnum = append(annuityProductTypeEnum, v)
	}
}

func (m AnnuityProductType) validateAnnuityProductTypeEnum(path, location string, value AnnuityProductType) error {
	if err := validate.EnumCase(path, location, value, annuityProductTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this annuity product type
func (m AnnuityProductType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAnnuityProductTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this annuity product type based on context it is used
func (m AnnuityProductType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
