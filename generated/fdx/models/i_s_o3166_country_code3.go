// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ISO3166CountryCode3 ISO3166CountryCode3
//
// Country code
//
// swagger:model ISO3166CountryCode3
type ISO3166CountryCode3 string

func NewISO3166CountryCode3(value ISO3166CountryCode3) *ISO3166CountryCode3 {
	v := value
	return &v
}

const (

	// ISO3166CountryCode3AD captures enum value "AD"
	ISO3166CountryCode3AD ISO3166CountryCode3 = "AD"

	// ISO3166CountryCode3AE captures enum value "AE"
	ISO3166CountryCode3AE ISO3166CountryCode3 = "AE"

	// ISO3166CountryCode3AF captures enum value "AF"
	ISO3166CountryCode3AF ISO3166CountryCode3 = "AF"

	// ISO3166CountryCode3AG captures enum value "AG"
	ISO3166CountryCode3AG ISO3166CountryCode3 = "AG"

	// ISO3166CountryCode3AI captures enum value "AI"
	ISO3166CountryCode3AI ISO3166CountryCode3 = "AI"

	// ISO3166CountryCode3AL captures enum value "AL"
	ISO3166CountryCode3AL ISO3166CountryCode3 = "AL"

	// ISO3166CountryCode3AM captures enum value "AM"
	ISO3166CountryCode3AM ISO3166CountryCode3 = "AM"

	// ISO3166CountryCode3AN captures enum value "AN"
	ISO3166CountryCode3AN ISO3166CountryCode3 = "AN"

	// ISO3166CountryCode3AO captures enum value "AO"
	ISO3166CountryCode3AO ISO3166CountryCode3 = "AO"

	// ISO3166CountryCode3AQ captures enum value "AQ"
	ISO3166CountryCode3AQ ISO3166CountryCode3 = "AQ"

	// ISO3166CountryCode3AR captures enum value "AR"
	ISO3166CountryCode3AR ISO3166CountryCode3 = "AR"

	// ISO3166CountryCode3AS captures enum value "AS"
	ISO3166CountryCode3AS ISO3166CountryCode3 = "AS"

	// ISO3166CountryCode3AT captures enum value "AT"
	ISO3166CountryCode3AT ISO3166CountryCode3 = "AT"

	// ISO3166CountryCode3AU captures enum value "AU"
	ISO3166CountryCode3AU ISO3166CountryCode3 = "AU"

	// ISO3166CountryCode3AW captures enum value "AW"
	ISO3166CountryCode3AW ISO3166CountryCode3 = "AW"

	// ISO3166CountryCode3AX captures enum value "AX"
	ISO3166CountryCode3AX ISO3166CountryCode3 = "AX"

	// ISO3166CountryCode3AZ captures enum value "AZ"
	ISO3166CountryCode3AZ ISO3166CountryCode3 = "AZ"

	// ISO3166CountryCode3BA captures enum value "BA"
	ISO3166CountryCode3BA ISO3166CountryCode3 = "BA"

	// ISO3166CountryCode3BB captures enum value "BB"
	ISO3166CountryCode3BB ISO3166CountryCode3 = "BB"

	// ISO3166CountryCode3BD captures enum value "BD"
	ISO3166CountryCode3BD ISO3166CountryCode3 = "BD"

	// ISO3166CountryCode3BE captures enum value "BE"
	ISO3166CountryCode3BE ISO3166CountryCode3 = "BE"

	// ISO3166CountryCode3BF captures enum value "BF"
	ISO3166CountryCode3BF ISO3166CountryCode3 = "BF"

	// ISO3166CountryCode3BG captures enum value "BG"
	ISO3166CountryCode3BG ISO3166CountryCode3 = "BG"

	// ISO3166CountryCode3BH captures enum value "BH"
	ISO3166CountryCode3BH ISO3166CountryCode3 = "BH"

	// ISO3166CountryCode3BI captures enum value "BI"
	ISO3166CountryCode3BI ISO3166CountryCode3 = "BI"

	// ISO3166CountryCode3BJ captures enum value "BJ"
	ISO3166CountryCode3BJ ISO3166CountryCode3 = "BJ"

	// ISO3166CountryCode3BM captures enum value "BM"
	ISO3166CountryCode3BM ISO3166CountryCode3 = "BM"

	// ISO3166CountryCode3BN captures enum value "BN"
	ISO3166CountryCode3BN ISO3166CountryCode3 = "BN"

	// ISO3166CountryCode3BO captures enum value "BO"
	ISO3166CountryCode3BO ISO3166CountryCode3 = "BO"

	// ISO3166CountryCode3BR captures enum value "BR"
	ISO3166CountryCode3BR ISO3166CountryCode3 = "BR"

	// ISO3166CountryCode3BS captures enum value "BS"
	ISO3166CountryCode3BS ISO3166CountryCode3 = "BS"

	// ISO3166CountryCode3BT captures enum value "BT"
	ISO3166CountryCode3BT ISO3166CountryCode3 = "BT"

	// ISO3166CountryCode3BV captures enum value "BV"
	ISO3166CountryCode3BV ISO3166CountryCode3 = "BV"

	// ISO3166CountryCode3BW captures enum value "BW"
	ISO3166CountryCode3BW ISO3166CountryCode3 = "BW"

	// ISO3166CountryCode3BY captures enum value "BY"
	ISO3166CountryCode3BY ISO3166CountryCode3 = "BY"

	// ISO3166CountryCode3BZ captures enum value "BZ"
	ISO3166CountryCode3BZ ISO3166CountryCode3 = "BZ"

	// ISO3166CountryCode3CA captures enum value "CA"
	ISO3166CountryCode3CA ISO3166CountryCode3 = "CA"

	// ISO3166CountryCode3CC captures enum value "CC"
	ISO3166CountryCode3CC ISO3166CountryCode3 = "CC"

	// ISO3166CountryCode3CD captures enum value "CD"
	ISO3166CountryCode3CD ISO3166CountryCode3 = "CD"

	// ISO3166CountryCode3CF captures enum value "CF"
	ISO3166CountryCode3CF ISO3166CountryCode3 = "CF"

	// ISO3166CountryCode3CG captures enum value "CG"
	ISO3166CountryCode3CG ISO3166CountryCode3 = "CG"

	// ISO3166CountryCode3CH captures enum value "CH"
	ISO3166CountryCode3CH ISO3166CountryCode3 = "CH"

	// ISO3166CountryCode3CI captures enum value "CI"
	ISO3166CountryCode3CI ISO3166CountryCode3 = "CI"

	// ISO3166CountryCode3CK captures enum value "CK"
	ISO3166CountryCode3CK ISO3166CountryCode3 = "CK"

	// ISO3166CountryCode3CL captures enum value "CL"
	ISO3166CountryCode3CL ISO3166CountryCode3 = "CL"

	// ISO3166CountryCode3CM captures enum value "CM"
	ISO3166CountryCode3CM ISO3166CountryCode3 = "CM"

	// ISO3166CountryCode3CN captures enum value "CN"
	ISO3166CountryCode3CN ISO3166CountryCode3 = "CN"

	// ISO3166CountryCode3CO captures enum value "CO"
	ISO3166CountryCode3CO ISO3166CountryCode3 = "CO"

	// ISO3166CountryCode3CR captures enum value "CR"
	ISO3166CountryCode3CR ISO3166CountryCode3 = "CR"

	// ISO3166CountryCode3CS captures enum value "CS"
	ISO3166CountryCode3CS ISO3166CountryCode3 = "CS"

	// ISO3166CountryCode3CU captures enum value "CU"
	ISO3166CountryCode3CU ISO3166CountryCode3 = "CU"

	// ISO3166CountryCode3CV captures enum value "CV"
	ISO3166CountryCode3CV ISO3166CountryCode3 = "CV"

	// ISO3166CountryCode3CX captures enum value "CX"
	ISO3166CountryCode3CX ISO3166CountryCode3 = "CX"

	// ISO3166CountryCode3CY captures enum value "CY"
	ISO3166CountryCode3CY ISO3166CountryCode3 = "CY"

	// ISO3166CountryCode3CZ captures enum value "CZ"
	ISO3166CountryCode3CZ ISO3166CountryCode3 = "CZ"

	// ISO3166CountryCode3DE captures enum value "DE"
	ISO3166CountryCode3DE ISO3166CountryCode3 = "DE"

	// ISO3166CountryCode3DJ captures enum value "DJ"
	ISO3166CountryCode3DJ ISO3166CountryCode3 = "DJ"

	// ISO3166CountryCode3DK captures enum value "DK"
	ISO3166CountryCode3DK ISO3166CountryCode3 = "DK"

	// ISO3166CountryCode3DM captures enum value "DM"
	ISO3166CountryCode3DM ISO3166CountryCode3 = "DM"

	// ISO3166CountryCode3DO captures enum value "DO"
	ISO3166CountryCode3DO ISO3166CountryCode3 = "DO"

	// ISO3166CountryCode3DZ captures enum value "DZ"
	ISO3166CountryCode3DZ ISO3166CountryCode3 = "DZ"

	// ISO3166CountryCode3EC captures enum value "EC"
	ISO3166CountryCode3EC ISO3166CountryCode3 = "EC"

	// ISO3166CountryCode3EE captures enum value "EE"
	ISO3166CountryCode3EE ISO3166CountryCode3 = "EE"

	// ISO3166CountryCode3EG captures enum value "EG"
	ISO3166CountryCode3EG ISO3166CountryCode3 = "EG"

	// ISO3166CountryCode3EH captures enum value "EH"
	ISO3166CountryCode3EH ISO3166CountryCode3 = "EH"

	// ISO3166CountryCode3ER captures enum value "ER"
	ISO3166CountryCode3ER ISO3166CountryCode3 = "ER"

	// ISO3166CountryCode3ES captures enum value "ES"
	ISO3166CountryCode3ES ISO3166CountryCode3 = "ES"

	// ISO3166CountryCode3ET captures enum value "ET"
	ISO3166CountryCode3ET ISO3166CountryCode3 = "ET"

	// ISO3166CountryCode3FI captures enum value "FI"
	ISO3166CountryCode3FI ISO3166CountryCode3 = "FI"

	// ISO3166CountryCode3FJ captures enum value "FJ"
	ISO3166CountryCode3FJ ISO3166CountryCode3 = "FJ"

	// ISO3166CountryCode3FK captures enum value "FK"
	ISO3166CountryCode3FK ISO3166CountryCode3 = "FK"

	// ISO3166CountryCode3FM captures enum value "FM"
	ISO3166CountryCode3FM ISO3166CountryCode3 = "FM"

	// ISO3166CountryCode3FO captures enum value "FO"
	ISO3166CountryCode3FO ISO3166CountryCode3 = "FO"

	// ISO3166CountryCode3FR captures enum value "FR"
	ISO3166CountryCode3FR ISO3166CountryCode3 = "FR"

	// ISO3166CountryCode3GA captures enum value "GA"
	ISO3166CountryCode3GA ISO3166CountryCode3 = "GA"

	// ISO3166CountryCode3GB captures enum value "GB"
	ISO3166CountryCode3GB ISO3166CountryCode3 = "GB"

	// ISO3166CountryCode3GD captures enum value "GD"
	ISO3166CountryCode3GD ISO3166CountryCode3 = "GD"

	// ISO3166CountryCode3GE captures enum value "GE"
	ISO3166CountryCode3GE ISO3166CountryCode3 = "GE"

	// ISO3166CountryCode3GF captures enum value "GF"
	ISO3166CountryCode3GF ISO3166CountryCode3 = "GF"

	// ISO3166CountryCode3GG captures enum value "GG"
	ISO3166CountryCode3GG ISO3166CountryCode3 = "GG"

	// ISO3166CountryCode3GH captures enum value "GH"
	ISO3166CountryCode3GH ISO3166CountryCode3 = "GH"

	// ISO3166CountryCode3GI captures enum value "GI"
	ISO3166CountryCode3GI ISO3166CountryCode3 = "GI"

	// ISO3166CountryCode3GL captures enum value "GL"
	ISO3166CountryCode3GL ISO3166CountryCode3 = "GL"

	// ISO3166CountryCode3GM captures enum value "GM"
	ISO3166CountryCode3GM ISO3166CountryCode3 = "GM"

	// ISO3166CountryCode3GN captures enum value "GN"
	ISO3166CountryCode3GN ISO3166CountryCode3 = "GN"

	// ISO3166CountryCode3GP captures enum value "GP"
	ISO3166CountryCode3GP ISO3166CountryCode3 = "GP"

	// ISO3166CountryCode3GQ captures enum value "GQ"
	ISO3166CountryCode3GQ ISO3166CountryCode3 = "GQ"

	// ISO3166CountryCode3GR captures enum value "GR"
	ISO3166CountryCode3GR ISO3166CountryCode3 = "GR"

	// ISO3166CountryCode3GS captures enum value "GS"
	ISO3166CountryCode3GS ISO3166CountryCode3 = "GS"

	// ISO3166CountryCode3GT captures enum value "GT"
	ISO3166CountryCode3GT ISO3166CountryCode3 = "GT"

	// ISO3166CountryCode3GU captures enum value "GU"
	ISO3166CountryCode3GU ISO3166CountryCode3 = "GU"

	// ISO3166CountryCode3GW captures enum value "GW"
	ISO3166CountryCode3GW ISO3166CountryCode3 = "GW"

	// ISO3166CountryCode3GY captures enum value "GY"
	ISO3166CountryCode3GY ISO3166CountryCode3 = "GY"

	// ISO3166CountryCode3HK captures enum value "HK"
	ISO3166CountryCode3HK ISO3166CountryCode3 = "HK"

	// ISO3166CountryCode3HM captures enum value "HM"
	ISO3166CountryCode3HM ISO3166CountryCode3 = "HM"

	// ISO3166CountryCode3HN captures enum value "HN"
	ISO3166CountryCode3HN ISO3166CountryCode3 = "HN"

	// ISO3166CountryCode3HR captures enum value "HR"
	ISO3166CountryCode3HR ISO3166CountryCode3 = "HR"

	// ISO3166CountryCode3HT captures enum value "HT"
	ISO3166CountryCode3HT ISO3166CountryCode3 = "HT"

	// ISO3166CountryCode3HU captures enum value "HU"
	ISO3166CountryCode3HU ISO3166CountryCode3 = "HU"

	// ISO3166CountryCode3ID captures enum value "ID"
	ISO3166CountryCode3ID ISO3166CountryCode3 = "ID"

	// ISO3166CountryCode3IE captures enum value "IE"
	ISO3166CountryCode3IE ISO3166CountryCode3 = "IE"

	// ISO3166CountryCode3IL captures enum value "IL"
	ISO3166CountryCode3IL ISO3166CountryCode3 = "IL"

	// ISO3166CountryCode3IM captures enum value "IM"
	ISO3166CountryCode3IM ISO3166CountryCode3 = "IM"

	// ISO3166CountryCode3IN captures enum value "IN"
	ISO3166CountryCode3IN ISO3166CountryCode3 = "IN"

	// ISO3166CountryCode3IO captures enum value "IO"
	ISO3166CountryCode3IO ISO3166CountryCode3 = "IO"

	// ISO3166CountryCode3IQ captures enum value "IQ"
	ISO3166CountryCode3IQ ISO3166CountryCode3 = "IQ"

	// ISO3166CountryCode3IR captures enum value "IR"
	ISO3166CountryCode3IR ISO3166CountryCode3 = "IR"

	// ISO3166CountryCode3IS captures enum value "IS"
	ISO3166CountryCode3IS ISO3166CountryCode3 = "IS"

	// ISO3166CountryCode3IT captures enum value "IT"
	ISO3166CountryCode3IT ISO3166CountryCode3 = "IT"

	// ISO3166CountryCode3JE captures enum value "JE"
	ISO3166CountryCode3JE ISO3166CountryCode3 = "JE"

	// ISO3166CountryCode3JM captures enum value "JM"
	ISO3166CountryCode3JM ISO3166CountryCode3 = "JM"

	// ISO3166CountryCode3JO captures enum value "JO"
	ISO3166CountryCode3JO ISO3166CountryCode3 = "JO"

	// ISO3166CountryCode3JP captures enum value "JP"
	ISO3166CountryCode3JP ISO3166CountryCode3 = "JP"

	// ISO3166CountryCode3KE captures enum value "KE"
	ISO3166CountryCode3KE ISO3166CountryCode3 = "KE"

	// ISO3166CountryCode3KG captures enum value "KG"
	ISO3166CountryCode3KG ISO3166CountryCode3 = "KG"

	// ISO3166CountryCode3KH captures enum value "KH"
	ISO3166CountryCode3KH ISO3166CountryCode3 = "KH"

	// ISO3166CountryCode3KI captures enum value "KI"
	ISO3166CountryCode3KI ISO3166CountryCode3 = "KI"

	// ISO3166CountryCode3KM captures enum value "KM"
	ISO3166CountryCode3KM ISO3166CountryCode3 = "KM"

	// ISO3166CountryCode3KN captures enum value "KN"
	ISO3166CountryCode3KN ISO3166CountryCode3 = "KN"

	// ISO3166CountryCode3KP captures enum value "KP"
	ISO3166CountryCode3KP ISO3166CountryCode3 = "KP"

	// ISO3166CountryCode3KR captures enum value "KR"
	ISO3166CountryCode3KR ISO3166CountryCode3 = "KR"

	// ISO3166CountryCode3KW captures enum value "KW"
	ISO3166CountryCode3KW ISO3166CountryCode3 = "KW"

	// ISO3166CountryCode3KY captures enum value "KY"
	ISO3166CountryCode3KY ISO3166CountryCode3 = "KY"

	// ISO3166CountryCode3KZ captures enum value "KZ"
	ISO3166CountryCode3KZ ISO3166CountryCode3 = "KZ"

	// ISO3166CountryCode3LA captures enum value "LA"
	ISO3166CountryCode3LA ISO3166CountryCode3 = "LA"

	// ISO3166CountryCode3LB captures enum value "LB"
	ISO3166CountryCode3LB ISO3166CountryCode3 = "LB"

	// ISO3166CountryCode3LC captures enum value "LC"
	ISO3166CountryCode3LC ISO3166CountryCode3 = "LC"

	// ISO3166CountryCode3LI captures enum value "LI"
	ISO3166CountryCode3LI ISO3166CountryCode3 = "LI"

	// ISO3166CountryCode3LK captures enum value "LK"
	ISO3166CountryCode3LK ISO3166CountryCode3 = "LK"

	// ISO3166CountryCode3LR captures enum value "LR"
	ISO3166CountryCode3LR ISO3166CountryCode3 = "LR"

	// ISO3166CountryCode3LS captures enum value "LS"
	ISO3166CountryCode3LS ISO3166CountryCode3 = "LS"

	// ISO3166CountryCode3LT captures enum value "LT"
	ISO3166CountryCode3LT ISO3166CountryCode3 = "LT"

	// ISO3166CountryCode3LU captures enum value "LU"
	ISO3166CountryCode3LU ISO3166CountryCode3 = "LU"

	// ISO3166CountryCode3LV captures enum value "LV"
	ISO3166CountryCode3LV ISO3166CountryCode3 = "LV"

	// ISO3166CountryCode3LY captures enum value "LY"
	ISO3166CountryCode3LY ISO3166CountryCode3 = "LY"

	// ISO3166CountryCode3MA captures enum value "MA"
	ISO3166CountryCode3MA ISO3166CountryCode3 = "MA"

	// ISO3166CountryCode3MC captures enum value "MC"
	ISO3166CountryCode3MC ISO3166CountryCode3 = "MC"

	// ISO3166CountryCode3MD captures enum value "MD"
	ISO3166CountryCode3MD ISO3166CountryCode3 = "MD"

	// ISO3166CountryCode3MG captures enum value "MG"
	ISO3166CountryCode3MG ISO3166CountryCode3 = "MG"

	// ISO3166CountryCode3MH captures enum value "MH"
	ISO3166CountryCode3MH ISO3166CountryCode3 = "MH"

	// ISO3166CountryCode3MK captures enum value "MK"
	ISO3166CountryCode3MK ISO3166CountryCode3 = "MK"

	// ISO3166CountryCode3ML captures enum value "ML"
	ISO3166CountryCode3ML ISO3166CountryCode3 = "ML"

	// ISO3166CountryCode3MM captures enum value "MM"
	ISO3166CountryCode3MM ISO3166CountryCode3 = "MM"

	// ISO3166CountryCode3MN captures enum value "MN"
	ISO3166CountryCode3MN ISO3166CountryCode3 = "MN"

	// ISO3166CountryCode3MO captures enum value "MO"
	ISO3166CountryCode3MO ISO3166CountryCode3 = "MO"

	// ISO3166CountryCode3MP captures enum value "MP"
	ISO3166CountryCode3MP ISO3166CountryCode3 = "MP"

	// ISO3166CountryCode3MQ captures enum value "MQ"
	ISO3166CountryCode3MQ ISO3166CountryCode3 = "MQ"

	// ISO3166CountryCode3MR captures enum value "MR"
	ISO3166CountryCode3MR ISO3166CountryCode3 = "MR"

	// ISO3166CountryCode3MS captures enum value "MS"
	ISO3166CountryCode3MS ISO3166CountryCode3 = "MS"

	// ISO3166CountryCode3MT captures enum value "MT"
	ISO3166CountryCode3MT ISO3166CountryCode3 = "MT"

	// ISO3166CountryCode3MU captures enum value "MU"
	ISO3166CountryCode3MU ISO3166CountryCode3 = "MU"

	// ISO3166CountryCode3MV captures enum value "MV"
	ISO3166CountryCode3MV ISO3166CountryCode3 = "MV"

	// ISO3166CountryCode3MW captures enum value "MW"
	ISO3166CountryCode3MW ISO3166CountryCode3 = "MW"

	// ISO3166CountryCode3MX captures enum value "MX"
	ISO3166CountryCode3MX ISO3166CountryCode3 = "MX"

	// ISO3166CountryCode3MY captures enum value "MY"
	ISO3166CountryCode3MY ISO3166CountryCode3 = "MY"

	// ISO3166CountryCode3MZ captures enum value "MZ"
	ISO3166CountryCode3MZ ISO3166CountryCode3 = "MZ"

	// ISO3166CountryCode3NA captures enum value "NA"
	ISO3166CountryCode3NA ISO3166CountryCode3 = "NA"

	// ISO3166CountryCode3NC captures enum value "NC"
	ISO3166CountryCode3NC ISO3166CountryCode3 = "NC"

	// ISO3166CountryCode3NE captures enum value "NE"
	ISO3166CountryCode3NE ISO3166CountryCode3 = "NE"

	// ISO3166CountryCode3NF captures enum value "NF"
	ISO3166CountryCode3NF ISO3166CountryCode3 = "NF"

	// ISO3166CountryCode3NG captures enum value "NG"
	ISO3166CountryCode3NG ISO3166CountryCode3 = "NG"

	// ISO3166CountryCode3NI captures enum value "NI"
	ISO3166CountryCode3NI ISO3166CountryCode3 = "NI"

	// ISO3166CountryCode3NL captures enum value "NL"
	ISO3166CountryCode3NL ISO3166CountryCode3 = "NL"

	// ISO3166CountryCode3NO captures enum value "NO"
	ISO3166CountryCode3NO ISO3166CountryCode3 = "NO"

	// ISO3166CountryCode3NP captures enum value "NP"
	ISO3166CountryCode3NP ISO3166CountryCode3 = "NP"

	// ISO3166CountryCode3NR captures enum value "NR"
	ISO3166CountryCode3NR ISO3166CountryCode3 = "NR"

	// ISO3166CountryCode3NU captures enum value "NU"
	ISO3166CountryCode3NU ISO3166CountryCode3 = "NU"

	// ISO3166CountryCode3NZ captures enum value "NZ"
	ISO3166CountryCode3NZ ISO3166CountryCode3 = "NZ"

	// ISO3166CountryCode3OM captures enum value "OM"
	ISO3166CountryCode3OM ISO3166CountryCode3 = "OM"

	// ISO3166CountryCode3PA captures enum value "PA"
	ISO3166CountryCode3PA ISO3166CountryCode3 = "PA"

	// ISO3166CountryCode3PE captures enum value "PE"
	ISO3166CountryCode3PE ISO3166CountryCode3 = "PE"

	// ISO3166CountryCode3PF captures enum value "PF"
	ISO3166CountryCode3PF ISO3166CountryCode3 = "PF"

	// ISO3166CountryCode3PG captures enum value "PG"
	ISO3166CountryCode3PG ISO3166CountryCode3 = "PG"

	// ISO3166CountryCode3PH captures enum value "PH"
	ISO3166CountryCode3PH ISO3166CountryCode3 = "PH"

	// ISO3166CountryCode3PK captures enum value "PK"
	ISO3166CountryCode3PK ISO3166CountryCode3 = "PK"

	// ISO3166CountryCode3PL captures enum value "PL"
	ISO3166CountryCode3PL ISO3166CountryCode3 = "PL"

	// ISO3166CountryCode3PM captures enum value "PM"
	ISO3166CountryCode3PM ISO3166CountryCode3 = "PM"

	// ISO3166CountryCode3PN captures enum value "PN"
	ISO3166CountryCode3PN ISO3166CountryCode3 = "PN"

	// ISO3166CountryCode3PR captures enum value "PR"
	ISO3166CountryCode3PR ISO3166CountryCode3 = "PR"

	// ISO3166CountryCode3PS captures enum value "PS"
	ISO3166CountryCode3PS ISO3166CountryCode3 = "PS"

	// ISO3166CountryCode3PT captures enum value "PT"
	ISO3166CountryCode3PT ISO3166CountryCode3 = "PT"

	// ISO3166CountryCode3PW captures enum value "PW"
	ISO3166CountryCode3PW ISO3166CountryCode3 = "PW"

	// ISO3166CountryCode3PY captures enum value "PY"
	ISO3166CountryCode3PY ISO3166CountryCode3 = "PY"

	// ISO3166CountryCode3QA captures enum value "QA"
	ISO3166CountryCode3QA ISO3166CountryCode3 = "QA"

	// ISO3166CountryCode3RE captures enum value "RE"
	ISO3166CountryCode3RE ISO3166CountryCode3 = "RE"

	// ISO3166CountryCode3RO captures enum value "RO"
	ISO3166CountryCode3RO ISO3166CountryCode3 = "RO"

	// ISO3166CountryCode3RU captures enum value "RU"
	ISO3166CountryCode3RU ISO3166CountryCode3 = "RU"

	// ISO3166CountryCode3RW captures enum value "RW"
	ISO3166CountryCode3RW ISO3166CountryCode3 = "RW"

	// ISO3166CountryCode3SA captures enum value "SA"
	ISO3166CountryCode3SA ISO3166CountryCode3 = "SA"

	// ISO3166CountryCode3SB captures enum value "SB"
	ISO3166CountryCode3SB ISO3166CountryCode3 = "SB"

	// ISO3166CountryCode3SC captures enum value "SC"
	ISO3166CountryCode3SC ISO3166CountryCode3 = "SC"

	// ISO3166CountryCode3SD captures enum value "SD"
	ISO3166CountryCode3SD ISO3166CountryCode3 = "SD"

	// ISO3166CountryCode3SE captures enum value "SE"
	ISO3166CountryCode3SE ISO3166CountryCode3 = "SE"

	// ISO3166CountryCode3SG captures enum value "SG"
	ISO3166CountryCode3SG ISO3166CountryCode3 = "SG"

	// ISO3166CountryCode3SH captures enum value "SH"
	ISO3166CountryCode3SH ISO3166CountryCode3 = "SH"

	// ISO3166CountryCode3SI captures enum value "SI"
	ISO3166CountryCode3SI ISO3166CountryCode3 = "SI"

	// ISO3166CountryCode3SJ captures enum value "SJ"
	ISO3166CountryCode3SJ ISO3166CountryCode3 = "SJ"

	// ISO3166CountryCode3SK captures enum value "SK"
	ISO3166CountryCode3SK ISO3166CountryCode3 = "SK"

	// ISO3166CountryCode3SL captures enum value "SL"
	ISO3166CountryCode3SL ISO3166CountryCode3 = "SL"

	// ISO3166CountryCode3SM captures enum value "SM"
	ISO3166CountryCode3SM ISO3166CountryCode3 = "SM"

	// ISO3166CountryCode3SN captures enum value "SN"
	ISO3166CountryCode3SN ISO3166CountryCode3 = "SN"

	// ISO3166CountryCode3SO captures enum value "SO"
	ISO3166CountryCode3SO ISO3166CountryCode3 = "SO"

	// ISO3166CountryCode3SR captures enum value "SR"
	ISO3166CountryCode3SR ISO3166CountryCode3 = "SR"

	// ISO3166CountryCode3ST captures enum value "ST"
	ISO3166CountryCode3ST ISO3166CountryCode3 = "ST"

	// ISO3166CountryCode3SV captures enum value "SV"
	ISO3166CountryCode3SV ISO3166CountryCode3 = "SV"

	// ISO3166CountryCode3SY captures enum value "SY"
	ISO3166CountryCode3SY ISO3166CountryCode3 = "SY"

	// ISO3166CountryCode3SZ captures enum value "SZ"
	ISO3166CountryCode3SZ ISO3166CountryCode3 = "SZ"

	// ISO3166CountryCode3TC captures enum value "TC"
	ISO3166CountryCode3TC ISO3166CountryCode3 = "TC"

	// ISO3166CountryCode3TD captures enum value "TD"
	ISO3166CountryCode3TD ISO3166CountryCode3 = "TD"

	// ISO3166CountryCode3TF captures enum value "TF"
	ISO3166CountryCode3TF ISO3166CountryCode3 = "TF"

	// ISO3166CountryCode3TG captures enum value "TG"
	ISO3166CountryCode3TG ISO3166CountryCode3 = "TG"

	// ISO3166CountryCode3TH captures enum value "TH"
	ISO3166CountryCode3TH ISO3166CountryCode3 = "TH"

	// ISO3166CountryCode3TJ captures enum value "TJ"
	ISO3166CountryCode3TJ ISO3166CountryCode3 = "TJ"

	// ISO3166CountryCode3TK captures enum value "TK"
	ISO3166CountryCode3TK ISO3166CountryCode3 = "TK"

	// ISO3166CountryCode3TL captures enum value "TL"
	ISO3166CountryCode3TL ISO3166CountryCode3 = "TL"

	// ISO3166CountryCode3TM captures enum value "TM"
	ISO3166CountryCode3TM ISO3166CountryCode3 = "TM"

	// ISO3166CountryCode3TN captures enum value "TN"
	ISO3166CountryCode3TN ISO3166CountryCode3 = "TN"

	// ISO3166CountryCode3TO captures enum value "TO"
	ISO3166CountryCode3TO ISO3166CountryCode3 = "TO"

	// ISO3166CountryCode3TR captures enum value "TR"
	ISO3166CountryCode3TR ISO3166CountryCode3 = "TR"

	// ISO3166CountryCode3TT captures enum value "TT"
	ISO3166CountryCode3TT ISO3166CountryCode3 = "TT"

	// ISO3166CountryCode3TV captures enum value "TV"
	ISO3166CountryCode3TV ISO3166CountryCode3 = "TV"

	// ISO3166CountryCode3TW captures enum value "TW"
	ISO3166CountryCode3TW ISO3166CountryCode3 = "TW"

	// ISO3166CountryCode3TZ captures enum value "TZ"
	ISO3166CountryCode3TZ ISO3166CountryCode3 = "TZ"

	// ISO3166CountryCode3UA captures enum value "UA"
	ISO3166CountryCode3UA ISO3166CountryCode3 = "UA"

	// ISO3166CountryCode3UG captures enum value "UG"
	ISO3166CountryCode3UG ISO3166CountryCode3 = "UG"

	// ISO3166CountryCode3UM captures enum value "UM"
	ISO3166CountryCode3UM ISO3166CountryCode3 = "UM"

	// ISO3166CountryCode3US captures enum value "US"
	ISO3166CountryCode3US ISO3166CountryCode3 = "US"

	// ISO3166CountryCode3UY captures enum value "UY"
	ISO3166CountryCode3UY ISO3166CountryCode3 = "UY"

	// ISO3166CountryCode3UZ captures enum value "UZ"
	ISO3166CountryCode3UZ ISO3166CountryCode3 = "UZ"

	// ISO3166CountryCode3VA captures enum value "VA"
	ISO3166CountryCode3VA ISO3166CountryCode3 = "VA"

	// ISO3166CountryCode3VC captures enum value "VC"
	ISO3166CountryCode3VC ISO3166CountryCode3 = "VC"

	// ISO3166CountryCode3VE captures enum value "VE"
	ISO3166CountryCode3VE ISO3166CountryCode3 = "VE"

	// ISO3166CountryCode3VG captures enum value "VG"
	ISO3166CountryCode3VG ISO3166CountryCode3 = "VG"

	// ISO3166CountryCode3VI captures enum value "VI"
	ISO3166CountryCode3VI ISO3166CountryCode3 = "VI"

	// ISO3166CountryCode3VN captures enum value "VN"
	ISO3166CountryCode3VN ISO3166CountryCode3 = "VN"

	// ISO3166CountryCode3VU captures enum value "VU"
	ISO3166CountryCode3VU ISO3166CountryCode3 = "VU"

	// ISO3166CountryCode3WF captures enum value "WF"
	ISO3166CountryCode3WF ISO3166CountryCode3 = "WF"

	// ISO3166CountryCode3WS captures enum value "WS"
	ISO3166CountryCode3WS ISO3166CountryCode3 = "WS"

	// ISO3166CountryCode3YE captures enum value "YE"
	ISO3166CountryCode3YE ISO3166CountryCode3 = "YE"

	// ISO3166CountryCode3YT captures enum value "YT"
	ISO3166CountryCode3YT ISO3166CountryCode3 = "YT"

	// ISO3166CountryCode3ZA captures enum value "ZA"
	ISO3166CountryCode3ZA ISO3166CountryCode3 = "ZA"

	// ISO3166CountryCode3ZM captures enum value "ZM"
	ISO3166CountryCode3ZM ISO3166CountryCode3 = "ZM"

	// ISO3166CountryCode3ZW captures enum value "ZW"
	ISO3166CountryCode3ZW ISO3166CountryCode3 = "ZW"
)

// for schema
var iSO3166CountryCode3Enum []interface{}

func init() {
	var res []ISO3166CountryCode3
	if err := json.Unmarshal([]byte(`["AD","AE","AF","AG","AI","AL","AM","AN","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BM","BN","BO","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CS","CU","CV","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","ST","SV","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		iSO3166CountryCode3Enum = append(iSO3166CountryCode3Enum, v)
	}
}

func (m ISO3166CountryCode3) validateISO3166CountryCode3Enum(path, location string, value ISO3166CountryCode3) error {
	if err := validate.EnumCase(path, location, value, iSO3166CountryCode3Enum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this i s o3166 country code3
func (m ISO3166CountryCode3) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateISO3166CountryCode3Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this i s o3166 country code3 based on context it is used
func (m ISO3166CountryCode3) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
