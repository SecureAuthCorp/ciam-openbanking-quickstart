// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// DebtClass2 DebtClass2
//
// Classification of debt. One of TREASURY, MUNICIPAL, CORPORATE, OTHER
//
// swagger:model DebtClass2
type DebtClass2 string

func NewDebtClass2(value DebtClass2) *DebtClass2 {
	v := value
	return &v
}

const (

	// DebtClass2CORPORATE captures enum value "CORPORATE"
	DebtClass2CORPORATE DebtClass2 = "CORPORATE"

	// DebtClass2MUNICIPAL captures enum value "MUNICIPAL"
	DebtClass2MUNICIPAL DebtClass2 = "MUNICIPAL"

	// DebtClass2OTHER captures enum value "OTHER"
	DebtClass2OTHER DebtClass2 = "OTHER"

	// DebtClass2TREASURY captures enum value "TREASURY"
	DebtClass2TREASURY DebtClass2 = "TREASURY"
)

// for schema
var debtClass2Enum []interface{}

func init() {
	var res []DebtClass2
	if err := json.Unmarshal([]byte(`["CORPORATE","MUNICIPAL","OTHER","TREASURY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		debtClass2Enum = append(debtClass2Enum, v)
	}
}

func (m DebtClass2) validateDebtClass2Enum(path, location string, value DebtClass2) error {
	if err := validate.EnumCase(path, location, value, debtClass2Enum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this debt class2
func (m DebtClass2) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDebtClass2Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this debt class2 based on context it is used
func (m DebtClass2) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
