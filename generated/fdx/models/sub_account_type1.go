// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// SubAccountType1 SubAccountType1
//
// Sub-account security Type. One of CASH, MARGIN, SHORT, OTHERS
//
// swagger:model SubAccountType1
type SubAccountType1 string

func NewSubAccountType1(value SubAccountType1) *SubAccountType1 {
	v := value
	return &v
}

const (

	// SubAccountType1CASH captures enum value "CASH"
	SubAccountType1CASH SubAccountType1 = "CASH"

	// SubAccountType1MARGIN captures enum value "MARGIN"
	SubAccountType1MARGIN SubAccountType1 = "MARGIN"

	// SubAccountType1SHORT captures enum value "SHORT"
	SubAccountType1SHORT SubAccountType1 = "SHORT"

	// SubAccountType1OTHER captures enum value "OTHER"
	SubAccountType1OTHER SubAccountType1 = "OTHER"
)

// for schema
var subAccountType1Enum []interface{}

func init() {
	var res []SubAccountType1
	if err := json.Unmarshal([]byte(`["CASH","MARGIN","SHORT","OTHER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subAccountType1Enum = append(subAccountType1Enum, v)
	}
}

func (m SubAccountType1) validateSubAccountType1Enum(path, location string, value SubAccountType1) error {
	if err := validate.EnumCase(path, location, value, subAccountType1Enum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this sub account type1
func (m SubAccountType1) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSubAccountType1Enum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this sub account type1 based on context it is used
func (m SubAccountType1) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
