// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// DebtClass DebtClass
//
// The classification of a debt instrument
//
// swagger:model DebtClass
type DebtClass string

func NewDebtClass(value DebtClass) *DebtClass {
	v := value
	return &v
}

const (

	// DebtClassCORPORATE captures enum value "CORPORATE"
	DebtClassCORPORATE DebtClass = "CORPORATE"

	// DebtClassMUNICIPAL captures enum value "MUNICIPAL"
	DebtClassMUNICIPAL DebtClass = "MUNICIPAL"

	// DebtClassOTHER captures enum value "OTHER"
	DebtClassOTHER DebtClass = "OTHER"

	// DebtClassTREASURY captures enum value "TREASURY"
	DebtClassTREASURY DebtClass = "TREASURY"
)

// for schema
var debtClassEnum []interface{}

func init() {
	var res []DebtClass
	if err := json.Unmarshal([]byte(`["CORPORATE","MUNICIPAL","OTHER","TREASURY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		debtClassEnum = append(debtClassEnum, v)
	}
}

func (m DebtClass) validateDebtClassEnum(path, location string, value DebtClass) error {
	if err := validate.EnumCase(path, location, value, debtClassEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this debt class
func (m DebtClass) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDebtClassEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this debt class based on context it is used
func (m DebtClass) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
