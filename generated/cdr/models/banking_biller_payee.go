// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BankingBillerPayee BankingBillerPayee
//
// swagger:model BankingBillerPayee
type BankingBillerPayee struct {

	// BPAY Biller Code of the Biller
	// Required: true
	BillerCode *string `json:"billerCode"`

	// Name of the Biller
	// Required: true
	BillerName *string `json:"billerName"`

	// BPAY CRN of the Biller (if available).<br/>Where the CRN contains sensitive information, it should be masked in line with how the Data Holder currently displays account identifiers in their existing online banking channels. If the contents of the CRN match the format of a Credit Card PAN they should be masked according to the rules applicable for MaskedPANString. If the contents are are otherwise sensitive, then it should be masked using the rules applicable for the MaskedAccountString common type.
	Crn string `json:"crn,omitempty"`
}

// Validate validates this banking biller payee
func (m *BankingBillerPayee) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBillerCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBillerName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BankingBillerPayee) validateBillerCode(formats strfmt.Registry) error {

	if err := validate.Required("billerCode", "body", m.BillerCode); err != nil {
		return err
	}

	return nil
}

func (m *BankingBillerPayee) validateBillerName(formats strfmt.Registry) error {

	if err := validate.Required("billerName", "body", m.BillerName); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this banking biller payee based on context it is used
func (m *BankingBillerPayee) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *BankingBillerPayee) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BankingBillerPayee) UnmarshalBinary(b []byte) error {
	var res BankingBillerPayee
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
