// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// SpecificAccountUType SpecificAccountUType
//
// The type of structure to present account specific fields.
// Example: creditCard
//
// swagger:model SpecificAccountUType
type SpecificAccountUType string

func NewSpecificAccountUType(value SpecificAccountUType) *SpecificAccountUType {
	v := value
	return &v
}

const (

	// SpecificAccountUTypeCreditCard captures enum value "creditCard"
	SpecificAccountUTypeCreditCard SpecificAccountUType = "creditCard"

	// SpecificAccountUTypeLoan captures enum value "loan"
	SpecificAccountUTypeLoan SpecificAccountUType = "loan"

	// SpecificAccountUTypeTermDeposit captures enum value "termDeposit"
	SpecificAccountUTypeTermDeposit SpecificAccountUType = "termDeposit"
)

// for schema
var specificAccountUTypeEnum []interface{}

func init() {
	var res []SpecificAccountUType
	if err := json.Unmarshal([]byte(`["creditCard","loan","termDeposit"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		specificAccountUTypeEnum = append(specificAccountUTypeEnum, v)
	}
}

func (m SpecificAccountUType) validateSpecificAccountUTypeEnum(path, location string, value SpecificAccountUType) error {
	if err := validate.EnumCase(path, location, value, specificAccountUTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this specific account u type
func (m SpecificAccountUType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSpecificAccountUTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this specific account u type based on context it is used
func (m SpecificAccountUType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
