// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// LastWeekDay LastWeekDay
//
// The weekDay specified. The payment will occur on the last occurrence of this weekday in the interval.
// Example: FRI
//
// swagger:model LastWeekDay
type LastWeekDay string

func NewLastWeekDay(value LastWeekDay) *LastWeekDay {
	v := value
	return &v
}

const (

	// LastWeekDayFRI captures enum value "FRI"
	LastWeekDayFRI LastWeekDay = "FRI"

	// LastWeekDayMON captures enum value "MON"
	LastWeekDayMON LastWeekDay = "MON"

	// LastWeekDaySAT captures enum value "SAT"
	LastWeekDaySAT LastWeekDay = "SAT"

	// LastWeekDaySUN captures enum value "SUN"
	LastWeekDaySUN LastWeekDay = "SUN"

	// LastWeekDayTHU captures enum value "THU"
	LastWeekDayTHU LastWeekDay = "THU"

	// LastWeekDayTUE captures enum value "TUE"
	LastWeekDayTUE LastWeekDay = "TUE"

	// LastWeekDayWED captures enum value "WED"
	LastWeekDayWED LastWeekDay = "WED"
)

// for schema
var lastWeekDayEnum []interface{}

func init() {
	var res []LastWeekDay
	if err := json.Unmarshal([]byte(`["FRI","MON","SAT","SUN","THU","TUE","WED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lastWeekDayEnum = append(lastWeekDayEnum, v)
	}
}

func (m LastWeekDay) validateLastWeekDayEnum(path, location string, value LastWeekDay) error {
	if err := validate.EnumCase(path, location, value, lastWeekDayEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this last week day
func (m LastWeekDay) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLastWeekDayEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this last week day based on context it is used
func (m LastWeekDay) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
