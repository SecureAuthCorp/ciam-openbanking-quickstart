// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// EnumAccountType EnumAccountType
//
// Tipos de contas. Modalidades tradicionais previstas pela Resolução 4.753, não contemplando contas vinculadas, conta de domiciliados no exterior, contas em moedas estrangeiras e conta correspondente moeda eletrônica. Vide Enum
// Conta de depósito à vista ou Conta corrente - é o tipo mais comum. Nela, o dinheiro fica à sua disposição para ser sacado a qualquer momento. Essa conta não gera rendimentos para o depositante
// Conta poupança - foi criada para estimular as pessoas a pouparem. O dinheiro que ficar na conta por trinta dias passa a gerar rendimentos, com isenção de imposto de renda para quem declara. Ou seja, o dinheiro “cresce” (rende) enquanto ficar guardado na conta. Cada depósito terá rendimentos de mês em mês, sempre no dia do mês em que o dinheiro tiver sido depositado
// Conta de pagamento pré-paga: segundo CIRCULAR Nº 3.680, BCB de  2013, é a 'destinada à execução de transações de pagamento em moeda eletrônica realizadas com base em fundos denominados em reais previamente aportados'
//
// swagger:model EnumAccountType
type EnumAccountType string

func NewEnumAccountType(value EnumAccountType) *EnumAccountType {
	v := value
	return &v
}

const (

	// EnumAccountTypeCONTADEPOSITOAVISTA captures enum value "CONTA_DEPOSITO_A_VISTA"
	EnumAccountTypeCONTADEPOSITOAVISTA EnumAccountType = "CONTA_DEPOSITO_A_VISTA"

	// EnumAccountTypeCONTAPOUPANCA captures enum value "CONTA_POUPANCA"
	EnumAccountTypeCONTAPOUPANCA EnumAccountType = "CONTA_POUPANCA"

	// EnumAccountTypeCONTAPAGAMENTOPREPAGA captures enum value "CONTA_PAGAMENTO_PRE_PAGA"
	EnumAccountTypeCONTAPAGAMENTOPREPAGA EnumAccountType = "CONTA_PAGAMENTO_PRE_PAGA"
)

// for schema
var enumAccountTypeEnum []interface{}

func init() {
	var res []EnumAccountType
	if err := json.Unmarshal([]byte(`["CONTA_DEPOSITO_A_VISTA","CONTA_POUPANCA","CONTA_PAGAMENTO_PRE_PAGA"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		enumAccountTypeEnum = append(enumAccountTypeEnum, v)
	}
}

func (m EnumAccountType) validateEnumAccountTypeEnum(path, location string, value EnumAccountType) error {
	if err := validate.EnumCase(path, location, value, enumAccountTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this enum account type
func (m EnumAccountType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateEnumAccountTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this enum account type based on context it is used
func (m EnumAccountType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
