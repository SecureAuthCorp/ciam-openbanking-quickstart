// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/openbanking-quickstart/generated/obbr/accounts/models"
)

// AccountsGetAccountsAccountIDBalancesReader is a Reader for the AccountsGetAccountsAccountIDBalances structure.
type AccountsGetAccountsAccountIDBalancesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccountsGetAccountsAccountIDBalancesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAccountsGetAccountsAccountIDBalancesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAccountsGetAccountsAccountIDBalancesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAccountsGetAccountsAccountIDBalancesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAccountsGetAccountsAccountIDBalancesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAccountsGetAccountsAccountIDBalancesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewAccountsGetAccountsAccountIDBalancesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewAccountsGetAccountsAccountIDBalancesNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAccountsGetAccountsAccountIDBalancesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAccountsGetAccountsAccountIDBalancesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAccountsGetAccountsAccountIDBalancesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAccountsGetAccountsAccountIDBalancesOK creates a AccountsGetAccountsAccountIDBalancesOK with default headers values
func NewAccountsGetAccountsAccountIDBalancesOK() *AccountsGetAccountsAccountIDBalancesOK {
	return &AccountsGetAccountsAccountIDBalancesOK{}
}

/* AccountsGetAccountsAccountIDBalancesOK describes a response with status code 200, with default header values.

Dados relativos aos saldos da conta identificada por accountId obtidos com sucesso.
*/
type AccountsGetAccountsAccountIDBalancesOK struct {
	XFapiInteractionID string

	Payload *models.ResponseAccountBalances
}

func (o *AccountsGetAccountsAccountIDBalancesOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/balances][%d] accountsGetAccountsAccountIdBalancesOK  %+v", 200, o.Payload)
}
func (o *AccountsGetAccountsAccountIDBalancesOK) GetPayload() *models.ResponseAccountBalances {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDBalancesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.ResponseAccountBalances)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDBalancesBadRequest creates a AccountsGetAccountsAccountIDBalancesBadRequest with default headers values
func NewAccountsGetAccountsAccountIDBalancesBadRequest() *AccountsGetAccountsAccountIDBalancesBadRequest {
	return &AccountsGetAccountsAccountIDBalancesBadRequest{}
}

/* AccountsGetAccountsAccountIDBalancesBadRequest describes a response with status code 400, with default header values.

A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.
*/
type AccountsGetAccountsAccountIDBalancesBadRequest struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDBalancesBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/balances][%d] accountsGetAccountsAccountIdBalancesBadRequest  %+v", 400, o.Payload)
}
func (o *AccountsGetAccountsAccountIDBalancesBadRequest) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDBalancesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDBalancesUnauthorized creates a AccountsGetAccountsAccountIDBalancesUnauthorized with default headers values
func NewAccountsGetAccountsAccountIDBalancesUnauthorized() *AccountsGetAccountsAccountIDBalancesUnauthorized {
	return &AccountsGetAccountsAccountIDBalancesUnauthorized{}
}

/* AccountsGetAccountsAccountIDBalancesUnauthorized describes a response with status code 401, with default header values.

Cabeçalho de autenticação ausente/inválido ou token inválido
*/
type AccountsGetAccountsAccountIDBalancesUnauthorized struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDBalancesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/balances][%d] accountsGetAccountsAccountIdBalancesUnauthorized  %+v", 401, o.Payload)
}
func (o *AccountsGetAccountsAccountIDBalancesUnauthorized) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDBalancesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDBalancesForbidden creates a AccountsGetAccountsAccountIDBalancesForbidden with default headers values
func NewAccountsGetAccountsAccountIDBalancesForbidden() *AccountsGetAccountsAccountIDBalancesForbidden {
	return &AccountsGetAccountsAccountIDBalancesForbidden{}
}

/* AccountsGetAccountsAccountIDBalancesForbidden describes a response with status code 403, with default header values.

O token tem escopo incorreto ou uma política de segurança foi violada
*/
type AccountsGetAccountsAccountIDBalancesForbidden struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDBalancesForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/balances][%d] accountsGetAccountsAccountIdBalancesForbidden  %+v", 403, o.Payload)
}
func (o *AccountsGetAccountsAccountIDBalancesForbidden) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDBalancesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDBalancesNotFound creates a AccountsGetAccountsAccountIDBalancesNotFound with default headers values
func NewAccountsGetAccountsAccountIDBalancesNotFound() *AccountsGetAccountsAccountIDBalancesNotFound {
	return &AccountsGetAccountsAccountIDBalancesNotFound{}
}

/* AccountsGetAccountsAccountIDBalancesNotFound describes a response with status code 404, with default header values.

O recurso solicitado não existe ou não foi implementado
*/
type AccountsGetAccountsAccountIDBalancesNotFound struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDBalancesNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/balances][%d] accountsGetAccountsAccountIdBalancesNotFound  %+v", 404, o.Payload)
}
func (o *AccountsGetAccountsAccountIDBalancesNotFound) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDBalancesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDBalancesMethodNotAllowed creates a AccountsGetAccountsAccountIDBalancesMethodNotAllowed with default headers values
func NewAccountsGetAccountsAccountIDBalancesMethodNotAllowed() *AccountsGetAccountsAccountIDBalancesMethodNotAllowed {
	return &AccountsGetAccountsAccountIDBalancesMethodNotAllowed{}
}

/* AccountsGetAccountsAccountIDBalancesMethodNotAllowed describes a response with status code 405, with default header values.

O consumidor tentou acessar o recurso com um método não suportado
*/
type AccountsGetAccountsAccountIDBalancesMethodNotAllowed struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDBalancesMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/balances][%d] accountsGetAccountsAccountIdBalancesMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *AccountsGetAccountsAccountIDBalancesMethodNotAllowed) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDBalancesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDBalancesNotAcceptable creates a AccountsGetAccountsAccountIDBalancesNotAcceptable with default headers values
func NewAccountsGetAccountsAccountIDBalancesNotAcceptable() *AccountsGetAccountsAccountIDBalancesNotAcceptable {
	return &AccountsGetAccountsAccountIDBalancesNotAcceptable{}
}

/* AccountsGetAccountsAccountIDBalancesNotAcceptable describes a response with status code 406, with default header values.

A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8
*/
type AccountsGetAccountsAccountIDBalancesNotAcceptable struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDBalancesNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/balances][%d] accountsGetAccountsAccountIdBalancesNotAcceptable  %+v", 406, o.Payload)
}
func (o *AccountsGetAccountsAccountIDBalancesNotAcceptable) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDBalancesNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDBalancesTooManyRequests creates a AccountsGetAccountsAccountIDBalancesTooManyRequests with default headers values
func NewAccountsGetAccountsAccountIDBalancesTooManyRequests() *AccountsGetAccountsAccountIDBalancesTooManyRequests {
	return &AccountsGetAccountsAccountIDBalancesTooManyRequests{}
}

/* AccountsGetAccountsAccountIDBalancesTooManyRequests describes a response with status code 429, with default header values.

A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido
*/
type AccountsGetAccountsAccountIDBalancesTooManyRequests struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDBalancesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/balances][%d] accountsGetAccountsAccountIdBalancesTooManyRequests  %+v", 429, o.Payload)
}
func (o *AccountsGetAccountsAccountIDBalancesTooManyRequests) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDBalancesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDBalancesInternalServerError creates a AccountsGetAccountsAccountIDBalancesInternalServerError with default headers values
func NewAccountsGetAccountsAccountIDBalancesInternalServerError() *AccountsGetAccountsAccountIDBalancesInternalServerError {
	return &AccountsGetAccountsAccountIDBalancesInternalServerError{}
}

/* AccountsGetAccountsAccountIDBalancesInternalServerError describes a response with status code 500, with default header values.

Ocorreu um erro no gateway da API ou no microsserviço
*/
type AccountsGetAccountsAccountIDBalancesInternalServerError struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDBalancesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/balances][%d] accountsGetAccountsAccountIdBalancesInternalServerError  %+v", 500, o.Payload)
}
func (o *AccountsGetAccountsAccountIDBalancesInternalServerError) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDBalancesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDBalancesDefault creates a AccountsGetAccountsAccountIDBalancesDefault with default headers values
func NewAccountsGetAccountsAccountIDBalancesDefault(code int) *AccountsGetAccountsAccountIDBalancesDefault {
	return &AccountsGetAccountsAccountIDBalancesDefault{
		_statusCode: code,
	}
}

/* AccountsGetAccountsAccountIDBalancesDefault describes a response with status code -1, with default header values.

Dados relativos aos saldos da conta identificada por accountId obtidos com sucesso.
*/
type AccountsGetAccountsAccountIDBalancesDefault struct {
	_statusCode        int
	XFapiInteractionID string

	Payload *models.ResponseAccountBalances
}

// Code gets the status code for the accounts get accounts account Id balances default response
func (o *AccountsGetAccountsAccountIDBalancesDefault) Code() int {
	return o._statusCode
}

func (o *AccountsGetAccountsAccountIDBalancesDefault) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/balances][%d] accountsGetAccountsAccountIdBalances default  %+v", o._statusCode, o.Payload)
}
func (o *AccountsGetAccountsAccountIDBalancesDefault) GetPayload() *models.ResponseAccountBalances {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDBalancesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.ResponseAccountBalances)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
