// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/openbanking-quickstart/generated/obbr/accounts/models"
)

// AccountsGetAccountsAccountIDOverdraftLimitsReader is a Reader for the AccountsGetAccountsAccountIDOverdraftLimits structure.
type AccountsGetAccountsAccountIDOverdraftLimitsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccountsGetAccountsAccountIDOverdraftLimitsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAccountsGetAccountsAccountIDOverdraftLimitsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAccountsGetAccountsAccountIDOverdraftLimitsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAccountsGetAccountsAccountIDOverdraftLimitsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAccountsGetAccountsAccountIDOverdraftLimitsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAccountsGetAccountsAccountIDOverdraftLimitsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewAccountsGetAccountsAccountIDOverdraftLimitsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewAccountsGetAccountsAccountIDOverdraftLimitsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAccountsGetAccountsAccountIDOverdraftLimitsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAccountsGetAccountsAccountIDOverdraftLimitsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAccountsGetAccountsAccountIDOverdraftLimitsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAccountsGetAccountsAccountIDOverdraftLimitsOK creates a AccountsGetAccountsAccountIDOverdraftLimitsOK with default headers values
func NewAccountsGetAccountsAccountIDOverdraftLimitsOK() *AccountsGetAccountsAccountIDOverdraftLimitsOK {
	return &AccountsGetAccountsAccountIDOverdraftLimitsOK{}
}

/* AccountsGetAccountsAccountIDOverdraftLimitsOK describes a response with status code 200, with default header values.

Dados de limites da conta identificada por accountId obtidos com sucesso.
*/
type AccountsGetAccountsAccountIDOverdraftLimitsOK struct {
	XFapiInteractionID string

	Payload *models.ResponseAccountOverdraftLimits
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/overdraft-limits][%d] accountsGetAccountsAccountIdOverdraftLimitsOK  %+v", 200, o.Payload)
}
func (o *AccountsGetAccountsAccountIDOverdraftLimitsOK) GetPayload() *models.ResponseAccountOverdraftLimits {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.ResponseAccountOverdraftLimits)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDOverdraftLimitsBadRequest creates a AccountsGetAccountsAccountIDOverdraftLimitsBadRequest with default headers values
func NewAccountsGetAccountsAccountIDOverdraftLimitsBadRequest() *AccountsGetAccountsAccountIDOverdraftLimitsBadRequest {
	return &AccountsGetAccountsAccountIDOverdraftLimitsBadRequest{}
}

/* AccountsGetAccountsAccountIDOverdraftLimitsBadRequest describes a response with status code 400, with default header values.

A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.
*/
type AccountsGetAccountsAccountIDOverdraftLimitsBadRequest struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/overdraft-limits][%d] accountsGetAccountsAccountIdOverdraftLimitsBadRequest  %+v", 400, o.Payload)
}
func (o *AccountsGetAccountsAccountIDOverdraftLimitsBadRequest) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDOverdraftLimitsUnauthorized creates a AccountsGetAccountsAccountIDOverdraftLimitsUnauthorized with default headers values
func NewAccountsGetAccountsAccountIDOverdraftLimitsUnauthorized() *AccountsGetAccountsAccountIDOverdraftLimitsUnauthorized {
	return &AccountsGetAccountsAccountIDOverdraftLimitsUnauthorized{}
}

/* AccountsGetAccountsAccountIDOverdraftLimitsUnauthorized describes a response with status code 401, with default header values.

Cabeçalho de autenticação ausente/inválido ou token inválido
*/
type AccountsGetAccountsAccountIDOverdraftLimitsUnauthorized struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/overdraft-limits][%d] accountsGetAccountsAccountIdOverdraftLimitsUnauthorized  %+v", 401, o.Payload)
}
func (o *AccountsGetAccountsAccountIDOverdraftLimitsUnauthorized) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDOverdraftLimitsForbidden creates a AccountsGetAccountsAccountIDOverdraftLimitsForbidden with default headers values
func NewAccountsGetAccountsAccountIDOverdraftLimitsForbidden() *AccountsGetAccountsAccountIDOverdraftLimitsForbidden {
	return &AccountsGetAccountsAccountIDOverdraftLimitsForbidden{}
}

/* AccountsGetAccountsAccountIDOverdraftLimitsForbidden describes a response with status code 403, with default header values.

O token tem escopo incorreto ou uma política de segurança foi violada
*/
type AccountsGetAccountsAccountIDOverdraftLimitsForbidden struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/overdraft-limits][%d] accountsGetAccountsAccountIdOverdraftLimitsForbidden  %+v", 403, o.Payload)
}
func (o *AccountsGetAccountsAccountIDOverdraftLimitsForbidden) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDOverdraftLimitsNotFound creates a AccountsGetAccountsAccountIDOverdraftLimitsNotFound with default headers values
func NewAccountsGetAccountsAccountIDOverdraftLimitsNotFound() *AccountsGetAccountsAccountIDOverdraftLimitsNotFound {
	return &AccountsGetAccountsAccountIDOverdraftLimitsNotFound{}
}

/* AccountsGetAccountsAccountIDOverdraftLimitsNotFound describes a response with status code 404, with default header values.

O recurso solicitado não existe ou não foi implementado
*/
type AccountsGetAccountsAccountIDOverdraftLimitsNotFound struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/overdraft-limits][%d] accountsGetAccountsAccountIdOverdraftLimitsNotFound  %+v", 404, o.Payload)
}
func (o *AccountsGetAccountsAccountIDOverdraftLimitsNotFound) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDOverdraftLimitsMethodNotAllowed creates a AccountsGetAccountsAccountIDOverdraftLimitsMethodNotAllowed with default headers values
func NewAccountsGetAccountsAccountIDOverdraftLimitsMethodNotAllowed() *AccountsGetAccountsAccountIDOverdraftLimitsMethodNotAllowed {
	return &AccountsGetAccountsAccountIDOverdraftLimitsMethodNotAllowed{}
}

/* AccountsGetAccountsAccountIDOverdraftLimitsMethodNotAllowed describes a response with status code 405, with default header values.

O consumidor tentou acessar o recurso com um método não suportado
*/
type AccountsGetAccountsAccountIDOverdraftLimitsMethodNotAllowed struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/overdraft-limits][%d] accountsGetAccountsAccountIdOverdraftLimitsMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *AccountsGetAccountsAccountIDOverdraftLimitsMethodNotAllowed) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDOverdraftLimitsNotAcceptable creates a AccountsGetAccountsAccountIDOverdraftLimitsNotAcceptable with default headers values
func NewAccountsGetAccountsAccountIDOverdraftLimitsNotAcceptable() *AccountsGetAccountsAccountIDOverdraftLimitsNotAcceptable {
	return &AccountsGetAccountsAccountIDOverdraftLimitsNotAcceptable{}
}

/* AccountsGetAccountsAccountIDOverdraftLimitsNotAcceptable describes a response with status code 406, with default header values.

A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8
*/
type AccountsGetAccountsAccountIDOverdraftLimitsNotAcceptable struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/overdraft-limits][%d] accountsGetAccountsAccountIdOverdraftLimitsNotAcceptable  %+v", 406, o.Payload)
}
func (o *AccountsGetAccountsAccountIDOverdraftLimitsNotAcceptable) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDOverdraftLimitsTooManyRequests creates a AccountsGetAccountsAccountIDOverdraftLimitsTooManyRequests with default headers values
func NewAccountsGetAccountsAccountIDOverdraftLimitsTooManyRequests() *AccountsGetAccountsAccountIDOverdraftLimitsTooManyRequests {
	return &AccountsGetAccountsAccountIDOverdraftLimitsTooManyRequests{}
}

/* AccountsGetAccountsAccountIDOverdraftLimitsTooManyRequests describes a response with status code 429, with default header values.

A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido
*/
type AccountsGetAccountsAccountIDOverdraftLimitsTooManyRequests struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/overdraft-limits][%d] accountsGetAccountsAccountIdOverdraftLimitsTooManyRequests  %+v", 429, o.Payload)
}
func (o *AccountsGetAccountsAccountIDOverdraftLimitsTooManyRequests) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDOverdraftLimitsInternalServerError creates a AccountsGetAccountsAccountIDOverdraftLimitsInternalServerError with default headers values
func NewAccountsGetAccountsAccountIDOverdraftLimitsInternalServerError() *AccountsGetAccountsAccountIDOverdraftLimitsInternalServerError {
	return &AccountsGetAccountsAccountIDOverdraftLimitsInternalServerError{}
}

/* AccountsGetAccountsAccountIDOverdraftLimitsInternalServerError describes a response with status code 500, with default header values.

Ocorreu um erro no gateway da API ou no microsserviço
*/
type AccountsGetAccountsAccountIDOverdraftLimitsInternalServerError struct {
	Payload *models.ResponseError
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/overdraft-limits][%d] accountsGetAccountsAccountIdOverdraftLimitsInternalServerError  %+v", 500, o.Payload)
}
func (o *AccountsGetAccountsAccountIDOverdraftLimitsInternalServerError) GetPayload() *models.ResponseError {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsGetAccountsAccountIDOverdraftLimitsDefault creates a AccountsGetAccountsAccountIDOverdraftLimitsDefault with default headers values
func NewAccountsGetAccountsAccountIDOverdraftLimitsDefault(code int) *AccountsGetAccountsAccountIDOverdraftLimitsDefault {
	return &AccountsGetAccountsAccountIDOverdraftLimitsDefault{
		_statusCode: code,
	}
}

/* AccountsGetAccountsAccountIDOverdraftLimitsDefault describes a response with status code -1, with default header values.

Dados de limites da conta identificada por accountId obtidos com sucesso.
*/
type AccountsGetAccountsAccountIDOverdraftLimitsDefault struct {
	_statusCode        int
	XFapiInteractionID string

	Payload *models.ResponseAccountOverdraftLimits
}

// Code gets the status code for the accounts get accounts account Id overdraft limits default response
func (o *AccountsGetAccountsAccountIDOverdraftLimitsDefault) Code() int {
	return o._statusCode
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsDefault) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountId}/overdraft-limits][%d] accountsGetAccountsAccountIdOverdraftLimits default  %+v", o._statusCode, o.Payload)
}
func (o *AccountsGetAccountsAccountIDOverdraftLimitsDefault) GetPayload() *models.ResponseAccountOverdraftLimits {
	return o.Payload
}

func (o *AccountsGetAccountsAccountIDOverdraftLimitsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.ResponseAccountOverdraftLimits)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
