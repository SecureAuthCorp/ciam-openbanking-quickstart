// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OpenbankingBrasilPaymentEnumRevocationReason EnumRevocationReason
//
// Define o cdigo da razo pela qual o consentimento foi revogado.
// Valores possveis:
// FRAUD- Indica suspeita de fraude
// ACCOUNT_CLOSURE - Indica que a conta do usurio foi encerrada
// OTHER- Indica que motivo do cancelamento est fora dos motivos pr-estabelecidos.
// Example: OTHER
//
// swagger:model OpenbankingBrasilPaymentEnumRevocationReason
type OpenbankingBrasilPaymentEnumRevocationReason string

func NewOpenbankingBrasilPaymentEnumRevocationReason(value OpenbankingBrasilPaymentEnumRevocationReason) *OpenbankingBrasilPaymentEnumRevocationReason {
	v := value
	return &v
}

const (

	// OpenbankingBrasilPaymentEnumRevocationReasonFRAUD captures enum value "FRAUD"
	OpenbankingBrasilPaymentEnumRevocationReasonFRAUD OpenbankingBrasilPaymentEnumRevocationReason = "FRAUD"

	// OpenbankingBrasilPaymentEnumRevocationReasonACCOUNTCLOSURE captures enum value "ACCOUNT_CLOSURE"
	OpenbankingBrasilPaymentEnumRevocationReasonACCOUNTCLOSURE OpenbankingBrasilPaymentEnumRevocationReason = "ACCOUNT_CLOSURE"

	// OpenbankingBrasilPaymentEnumRevocationReasonOTHER captures enum value "OTHER"
	OpenbankingBrasilPaymentEnumRevocationReasonOTHER OpenbankingBrasilPaymentEnumRevocationReason = "OTHER"
)

// for schema
var openbankingBrasilPaymentEnumRevocationReasonEnum []interface{}

func init() {
	var res []OpenbankingBrasilPaymentEnumRevocationReason
	if err := json.Unmarshal([]byte(`["FRAUD","ACCOUNT_CLOSURE","OTHER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		openbankingBrasilPaymentEnumRevocationReasonEnum = append(openbankingBrasilPaymentEnumRevocationReasonEnum, v)
	}
}

func (m OpenbankingBrasilPaymentEnumRevocationReason) validateOpenbankingBrasilPaymentEnumRevocationReasonEnum(path, location string, value OpenbankingBrasilPaymentEnumRevocationReason) error {
	if err := validate.EnumCase(path, location, value, openbankingBrasilPaymentEnumRevocationReasonEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this openbanking brasil payment enum revocation reason
func (m OpenbankingBrasilPaymentEnumRevocationReason) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOpenbankingBrasilPaymentEnumRevocationReasonEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this openbanking brasil payment enum revocation reason based on context it is used
func (m OpenbankingBrasilPaymentEnumRevocationReason) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
