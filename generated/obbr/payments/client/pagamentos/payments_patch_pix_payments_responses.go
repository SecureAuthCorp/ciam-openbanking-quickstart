// Code generated by go-swagger; DO NOT EDIT.

package pagamentos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/openbanking-quickstart/generated/obbr/payments/models"
)

// PaymentsPatchPixPaymentsReader is a Reader for the PaymentsPatchPixPayments structure.
type PaymentsPatchPixPaymentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PaymentsPatchPixPaymentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPaymentsPatchPixPaymentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPaymentsPatchPixPaymentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPaymentsPatchPixPaymentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPaymentsPatchPixPaymentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPaymentsPatchPixPaymentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPaymentsPatchPixPaymentsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewPaymentsPatchPixPaymentsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPaymentsPatchPixPaymentsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPaymentsPatchPixPaymentsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPaymentsPatchPixPaymentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPaymentsPatchPixPaymentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPaymentsPatchPixPaymentsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPaymentsPatchPixPaymentsOK creates a PaymentsPatchPixPaymentsOK with default headers values
func NewPaymentsPatchPixPaymentsOK() *PaymentsPatchPixPaymentsOK {
	return &PaymentsPatchPixPaymentsOK{}
}

/* PaymentsPatchPixPaymentsOK describes a response with status code 200, with default header values.

Revogao do Consentimento informado com sucesso.
*/
type PaymentsPatchPixPaymentsOK struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload interface{}
}

func (o *PaymentsPatchPixPaymentsOK) Error() string {
	return fmt.Sprintf("[PATCH /consents/{consentId}][%d] paymentsPatchPixPaymentsOK  %+v", 200, o.Payload)
}
func (o *PaymentsPatchPixPaymentsOK) GetPayload() interface{} {
	return o.Payload
}

func (o *PaymentsPatchPixPaymentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPatchPixPaymentsBadRequest creates a PaymentsPatchPixPaymentsBadRequest with default headers values
func NewPaymentsPatchPixPaymentsBadRequest() *PaymentsPatchPixPaymentsBadRequest {
	return &PaymentsPatchPixPaymentsBadRequest{}
}

/* PaymentsPatchPixPaymentsBadRequest describes a response with status code 400, with default header values.

A requisio foi malformada, omitindo atributos obrigatrios, seja no payload ou atravs de atributos na URL.
*/
type PaymentsPatchPixPaymentsBadRequest struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilPaymentResponseError
}

func (o *PaymentsPatchPixPaymentsBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /consents/{consentId}][%d] paymentsPatchPixPaymentsBadRequest  %+v", 400, o.Payload)
}
func (o *PaymentsPatchPixPaymentsBadRequest) GetPayload() *models.OpenbankingBrasilPaymentResponseError {
	return o.Payload
}

func (o *PaymentsPatchPixPaymentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilPaymentResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPatchPixPaymentsUnauthorized creates a PaymentsPatchPixPaymentsUnauthorized with default headers values
func NewPaymentsPatchPixPaymentsUnauthorized() *PaymentsPatchPixPaymentsUnauthorized {
	return &PaymentsPatchPixPaymentsUnauthorized{}
}

/* PaymentsPatchPixPaymentsUnauthorized describes a response with status code 401, with default header values.

Cabealho de autenticao ausente/invlido ou token invlido
*/
type PaymentsPatchPixPaymentsUnauthorized struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilPaymentResponseError
}

func (o *PaymentsPatchPixPaymentsUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /consents/{consentId}][%d] paymentsPatchPixPaymentsUnauthorized  %+v", 401, o.Payload)
}
func (o *PaymentsPatchPixPaymentsUnauthorized) GetPayload() *models.OpenbankingBrasilPaymentResponseError {
	return o.Payload
}

func (o *PaymentsPatchPixPaymentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilPaymentResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPatchPixPaymentsForbidden creates a PaymentsPatchPixPaymentsForbidden with default headers values
func NewPaymentsPatchPixPaymentsForbidden() *PaymentsPatchPixPaymentsForbidden {
	return &PaymentsPatchPixPaymentsForbidden{}
}

/* PaymentsPatchPixPaymentsForbidden describes a response with status code 403, with default header values.

O token tem escopo incorreto ou uma poltica de segurana foi violada
*/
type PaymentsPatchPixPaymentsForbidden struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilPaymentResponseError
}

func (o *PaymentsPatchPixPaymentsForbidden) Error() string {
	return fmt.Sprintf("[PATCH /consents/{consentId}][%d] paymentsPatchPixPaymentsForbidden  %+v", 403, o.Payload)
}
func (o *PaymentsPatchPixPaymentsForbidden) GetPayload() *models.OpenbankingBrasilPaymentResponseError {
	return o.Payload
}

func (o *PaymentsPatchPixPaymentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilPaymentResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPatchPixPaymentsNotFound creates a PaymentsPatchPixPaymentsNotFound with default headers values
func NewPaymentsPatchPixPaymentsNotFound() *PaymentsPatchPixPaymentsNotFound {
	return &PaymentsPatchPixPaymentsNotFound{}
}

/* PaymentsPatchPixPaymentsNotFound describes a response with status code 404, with default header values.

O recurso solicitado no existe ou no foi implementado
*/
type PaymentsPatchPixPaymentsNotFound struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilPaymentResponseError
}

func (o *PaymentsPatchPixPaymentsNotFound) Error() string {
	return fmt.Sprintf("[PATCH /consents/{consentId}][%d] paymentsPatchPixPaymentsNotFound  %+v", 404, o.Payload)
}
func (o *PaymentsPatchPixPaymentsNotFound) GetPayload() *models.OpenbankingBrasilPaymentResponseError {
	return o.Payload
}

func (o *PaymentsPatchPixPaymentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilPaymentResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPatchPixPaymentsMethodNotAllowed creates a PaymentsPatchPixPaymentsMethodNotAllowed with default headers values
func NewPaymentsPatchPixPaymentsMethodNotAllowed() *PaymentsPatchPixPaymentsMethodNotAllowed {
	return &PaymentsPatchPixPaymentsMethodNotAllowed{}
}

/* PaymentsPatchPixPaymentsMethodNotAllowed describes a response with status code 405, with default header values.

O consumidor tentou acessar o recurso com um mtodo no suportado
*/
type PaymentsPatchPixPaymentsMethodNotAllowed struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilPaymentResponseError
}

func (o *PaymentsPatchPixPaymentsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PATCH /consents/{consentId}][%d] paymentsPatchPixPaymentsMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *PaymentsPatchPixPaymentsMethodNotAllowed) GetPayload() *models.OpenbankingBrasilPaymentResponseError {
	return o.Payload
}

func (o *PaymentsPatchPixPaymentsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilPaymentResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPatchPixPaymentsNotAcceptable creates a PaymentsPatchPixPaymentsNotAcceptable with default headers values
func NewPaymentsPatchPixPaymentsNotAcceptable() *PaymentsPatchPixPaymentsNotAcceptable {
	return &PaymentsPatchPixPaymentsNotAcceptable{}
}

/* PaymentsPatchPixPaymentsNotAcceptable describes a response with status code 406, with default header values.

A solicitao continha um cabealho Accept diferente dos tipos de mdia permitidos ou um conjunto de caracteres diferente de UTF-8
*/
type PaymentsPatchPixPaymentsNotAcceptable struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilPaymentResponseError
}

func (o *PaymentsPatchPixPaymentsNotAcceptable) Error() string {
	return fmt.Sprintf("[PATCH /consents/{consentId}][%d] paymentsPatchPixPaymentsNotAcceptable  %+v", 406, o.Payload)
}
func (o *PaymentsPatchPixPaymentsNotAcceptable) GetPayload() *models.OpenbankingBrasilPaymentResponseError {
	return o.Payload
}

func (o *PaymentsPatchPixPaymentsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilPaymentResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPatchPixPaymentsUnsupportedMediaType creates a PaymentsPatchPixPaymentsUnsupportedMediaType with default headers values
func NewPaymentsPatchPixPaymentsUnsupportedMediaType() *PaymentsPatchPixPaymentsUnsupportedMediaType {
	return &PaymentsPatchPixPaymentsUnsupportedMediaType{}
}

/* PaymentsPatchPixPaymentsUnsupportedMediaType describes a response with status code 415, with default header values.

O formato do payload no  um formato suportado.
*/
type PaymentsPatchPixPaymentsUnsupportedMediaType struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilPaymentResponseError
}

func (o *PaymentsPatchPixPaymentsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PATCH /consents/{consentId}][%d] paymentsPatchPixPaymentsUnsupportedMediaType  %+v", 415, o.Payload)
}
func (o *PaymentsPatchPixPaymentsUnsupportedMediaType) GetPayload() *models.OpenbankingBrasilPaymentResponseError {
	return o.Payload
}

func (o *PaymentsPatchPixPaymentsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilPaymentResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPatchPixPaymentsUnprocessableEntity creates a PaymentsPatchPixPaymentsUnprocessableEntity with default headers values
func NewPaymentsPatchPixPaymentsUnprocessableEntity() *PaymentsPatchPixPaymentsUnprocessableEntity {
	return &PaymentsPatchPixPaymentsUnprocessableEntity{}
}

/* PaymentsPatchPixPaymentsUnprocessableEntity describes a response with status code 422, with default header values.

A solicitao foi bem formada, mas no pde ser processada devido  lgica de negcios especfica da solicitao.
*/
type PaymentsPatchPixPaymentsUnprocessableEntity struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload interface{}
}

func (o *PaymentsPatchPixPaymentsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /consents/{consentId}][%d] paymentsPatchPixPaymentsUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *PaymentsPatchPixPaymentsUnprocessableEntity) GetPayload() interface{} {
	return o.Payload
}

func (o *PaymentsPatchPixPaymentsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPatchPixPaymentsTooManyRequests creates a PaymentsPatchPixPaymentsTooManyRequests with default headers values
func NewPaymentsPatchPixPaymentsTooManyRequests() *PaymentsPatchPixPaymentsTooManyRequests {
	return &PaymentsPatchPixPaymentsTooManyRequests{}
}

/* PaymentsPatchPixPaymentsTooManyRequests describes a response with status code 429, with default header values.

A operao foi recusada, pois muitas solicitaes foram feitas dentro de um determinado perodo ou o limite global de requisies concorrentes foi atingido
*/
type PaymentsPatchPixPaymentsTooManyRequests struct {

	/* Cabealho que indica o tempo (em segundos) que o cliente dever aguardar para realizar uma nova tentativa de chamada. Este cabealho dever estar presente quando o cdigo HTTP de retorno for 429 Too many requests.

	 */
	RetryAfter string

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilPaymentResponseError
}

func (o *PaymentsPatchPixPaymentsTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /consents/{consentId}][%d] paymentsPatchPixPaymentsTooManyRequests  %+v", 429, o.Payload)
}
func (o *PaymentsPatchPixPaymentsTooManyRequests) GetPayload() *models.OpenbankingBrasilPaymentResponseError {
	return o.Payload
}

func (o *PaymentsPatchPixPaymentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Retry-After
	hdrRetryAfter := response.GetHeader("Retry-After")

	if hdrRetryAfter != "" {
		o.RetryAfter = hdrRetryAfter
	}

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilPaymentResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPatchPixPaymentsInternalServerError creates a PaymentsPatchPixPaymentsInternalServerError with default headers values
func NewPaymentsPatchPixPaymentsInternalServerError() *PaymentsPatchPixPaymentsInternalServerError {
	return &PaymentsPatchPixPaymentsInternalServerError{}
}

/* PaymentsPatchPixPaymentsInternalServerError describes a response with status code 500, with default header values.

Ocorreu um erro no gateway da API ou no microsservio
*/
type PaymentsPatchPixPaymentsInternalServerError struct {

	/* Um UUID RFC4122 usado como um ID de correlao. O transmissor deve usar o mesmo valor recebido na requisio para o cabealho de resposta recebido na requisio, caso no tenha sido fornecido, deve se usar um UUID RFC4122.

	 */
	XFapiInteractionID string

	Payload *models.OpenbankingBrasilPaymentResponseError
}

func (o *PaymentsPatchPixPaymentsInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /consents/{consentId}][%d] paymentsPatchPixPaymentsInternalServerError  %+v", 500, o.Payload)
}
func (o *PaymentsPatchPixPaymentsInternalServerError) GetPayload() *models.OpenbankingBrasilPaymentResponseError {
	return o.Payload
}

func (o *PaymentsPatchPixPaymentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	o.Payload = new(models.OpenbankingBrasilPaymentResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentsPatchPixPaymentsDefault creates a PaymentsPatchPixPaymentsDefault with default headers values
func NewPaymentsPatchPixPaymentsDefault(code int) *PaymentsPatchPixPaymentsDefault {
	return &PaymentsPatchPixPaymentsDefault{
		_statusCode: code,
	}
}

/* PaymentsPatchPixPaymentsDefault describes a response with status code -1, with default header values.

Erro inesperado.
*/
type PaymentsPatchPixPaymentsDefault struct {
	_statusCode int

	Payload *models.OpenbankingBrasilPaymentResponseError
}

// Code gets the status code for the payments patch pix payments default response
func (o *PaymentsPatchPixPaymentsDefault) Code() int {
	return o._statusCode
}

func (o *PaymentsPatchPixPaymentsDefault) Error() string {
	return fmt.Sprintf("[PATCH /consents/{consentId}][%d] paymentsPatchPixPayments default  %+v", o._statusCode, o.Payload)
}
func (o *PaymentsPatchPixPaymentsDefault) GetPayload() *models.OpenbankingBrasilPaymentResponseError {
	return o.Payload
}

func (o *PaymentsPatchPixPaymentsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OpenbankingBrasilPaymentResponseError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
